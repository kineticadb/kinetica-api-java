/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb;

import com.gpudb.protocol.*;
import java.net.URL;
import java.nio.ByteBuffer;
import java.util.List;
import java.util.Map;

/**
 * Object that provides access to a specific GPUdb server. {@code GPUdb}
 * instances are thread safe and may be used from any number of threads
 * simultaneously.
 */
public class GPUdb extends GPUdbBase {

    /**
     * Creates a {@link GPUdb} instance for the GPUdb server at the
     * specified URL using default options.  Note that these options
     * cannot be changed subsequently; to use different options, a new
     * {@link GPUdb} instance must be created.
     * 
     * @param url  The URL of the GPUdb server.  Can be a comma-separated
     *             string containing multiple full URLs, or a single URL.
     *             For example 'http://172.42.40.1:9191,,http://172.42.40.2:9191'.
     *             If a single URL is given, the given URL will be used as
     *             the primary URL.
     * 
     * @throws GPUdbException if an error occurs during creation.
     */
    public GPUdb(String url) throws GPUdbException {
        super(url, new Options());
    }

    /**
     * Creates a {@link GPUdb} instance for the GPUdb server at the
     * specified URL using default options.  Note that these options
     * cannot be changed subsequently; to use different options, a new
     * {@link GPUdb} instance must be created.
     * 
     * @param url  The URL of the GPUdb server.  The given URL will be used as
     *             the primary URL.
     * 
     * @throws GPUdbException if an error occurs during creation.
     */
    public GPUdb(URL url) throws GPUdbException {
        super(url, new Options());
    }

    /**
     * Creates a {@link GPUdb} instance for the GPUdb server with the
     * specified URLs using default options.  At any given time, one
     * URL (initially selected at random from the list) will be active
     * and used for all GPUdb calls, but in the event of failure, the
     * other URLs will be tried in order, and if a working one is found
     * it will become the new active URL.  Note that the default options
     * cannot be changed subsequently; to use different options, a new
     * {@link GPUdb} instance must be created.
     *
     * @param urls  The URLs of the GPUdb server.  If a single URL is given,
     *              it will be used as the primary URL.
     * 
     * @throws GPUdbException if an error occurs during creation.
     */
    public GPUdb(List<URL> urls) throws GPUdbException {
        super(urls, new Options());
    }

    /**
     * Creates a {@link GPUdb} instance for the GPUdb server at the
     * specified URL using the specified options.  Note that these
     * options cannot be changed subsequently; to use different options,
     * a new {@link GPUdb} instance must be created.
     * 
     * @param url  The URL of the GPUdb server.  Can be a comma-separated
     *             string containing multiple full URLs, or a single URL.
     *             For example 'http://172.42.40.1:9191,,http://172.42.40.2:9191'.
     *             If a single URL is given, and no primary URL is specified via
     *             the options, the given URL will be used as the primary URL.
     * 
     * @param options  The options, e.g. primary cluster URL, to use.
     * 
     * @see GPUdbBase.Options
     * 
     * @throws GPUdbException if an error occurs during creation.
     */
    public GPUdb(String url, Options options) throws GPUdbException {
        super(url, options);
    }
    /**
     * Creates a {@link GPUdb} instance for the GPUdb server at the
     * specified URL using the specified options.  Note that these
     * options cannot be changed subsequently; to use different options,
     * a new {@link GPUdb} instance must be created.
     * 
     * @param url  The URL of the GPUdb server.  If no primary URL is specified via
     *             the options, the given URL will be used as the primary URL.
     * 
     * @param options  The options, e.g. primary cluster URL, to use.
     * 
     * @see GPUdbBase.Options
     * 
     * @throws GPUdbException if an error occurs during creation.
     */
    public GPUdb(URL url, Options options) throws GPUdbException {
        super(url, options);
    }
    /**
     * Creates a {@link GPUdb} instance for the GPUdb server with the
     * specified URLs using the specified options.  At any given time,
     * one URL (initially selected at random from the list) will be active
     * and used for all GPUdb calls, but in the event of failure, the
     * other URLs will be tried in order, and if a working one is found
     * it will become the new active URL.  Note that the specified options
     * cannot be changed subsequently; to use different options, a new
     * {@link GPUdb} instance must be created.
     *
     * @param urls  The URLs of the GPUdb server.  If a single URL is given, 
     *              and no primary URL is specified via the options, the given
     *              URL will be used as the primary URL.
     *
     * @param options  The options, e.g. primary cluster URL, to use.
     *
     * @see GPUdbBase.Options
     *
     * @throws GPUdbException if an error occurs during creation.
     */
    public GPUdb(List<URL> urls, Options options) throws GPUdbException {
        super(urls, options);
    }


    /**
     * Adds a host to an existing cluster.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminAddHostResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminAddHostResponse adminAddHost(AdminAddHostRequest request) throws GPUdbException {
        AdminAddHostResponse actualResponse_ = new AdminAddHostResponse();
        submitRequestToHM("/admin/add/host", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Adds a host to an existing cluster.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param hostAddress  IP address of the host that will be added to the
     *                     cluster. This host must have installed the same
     *                     version of Kinetica as the cluster to which it is
     *                     being added.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#DRY_RUN
     *                 DRY_RUN}: If set to {@code true}, only validation checks
     *                 will be performed. No host is added.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#ACCEPTS_FAILOVER
     *                 ACCEPTS_FAILOVER}: If set to {@code true}, the host will
     *                 accept processes (ranks, graph server, etc.) in the
     *                 event of a failover on another node in the cluster.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#PUBLIC_ADDRESS
     *                 PUBLIC_ADDRESS}: The publicly-accessible IP address for
     *                 the host being added, typically specified for clients
     *                 using multi-head operations. This setting is required if
     *                 any other host(s) in the cluster specify a public
     *                 address.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#HOST_MANAGER_PUBLIC_URL
     *                 HOST_MANAGER_PUBLIC_URL}: The publicly-accessible full
     *                 path URL to the host manager on the host being added,
     *                 e.g., 'http://172.123.45.67:9300'. The default host
     *                 manager port can be found in the <a
     *                 href="../../../../../install/shared/ports/"
     *                 target="_top">list of ports</a> used by Kinetica.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#RAM_LIMIT
     *                 RAM_LIMIT}: The desired RAM limit for the host being
     *                 added, i.e. the sum of RAM usage for all processes on
     *                 the host will not be able to exceed this value.
     *                 Supported units: K (thousand), KB (kilobytes), M
     *                 (million), MB (megabytes), G (billion), GB (gigabytes);
     *                 if no unit is provided, the value is assumed to be in
     *                 bytes. For example, if {@code ram_limit} is set to 10M,
     *                 the resulting RAM limit is 10 million bytes. Set {@code
     *                 ram_limit} to -1 to have no RAM limit.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddHostRequest.Options#GPUS
     *                 GPUS}: Comma-delimited list of GPU indices (starting at
     *                 1) that are eligible for running worker processes. If
     *                 left blank, all GPUs on the host being added will be
     *                 eligible.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminAddHostResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminAddHostResponse adminAddHost(String hostAddress, Map<String, String> options) throws GPUdbException {
        AdminAddHostRequest actualRequest_ = new AdminAddHostRequest(hostAddress, options);
        AdminAddHostResponse actualResponse_ = new AdminAddHostResponse();
        submitRequestToHM("/admin/add/host", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Add one or more ranks to an existing Kinetica cluster. The new ranks
     * will not contain any data initially (other than replicated tables) and
     * will not be assigned any shards. To rebalance data and shards across the
     * cluster, use {@link GPUdb#adminRebalance(AdminRebalanceRequest)}.
     * <p>
     * The database must be offline for this operation, see {@link
     * GPUdb#adminOffline(AdminOfflineRequest)}
     * <p>
     * For example, if attempting to add three new ranks (two ranks on host
     * 172.123.45.67 and one rank on host 172.123.45.68) to a Kinetica cluster
     * with additional configuration parameters:
     * <p>
     * * {@code hosts}
     *   would be an array including 172.123.45.67 in the first two indices
     *   (signifying two ranks being added to host 172.123.45.67) and
     *   172.123.45.68 in the last index (signifying one rank being added
     *   to host 172.123.45.67)
     * * {@code configParams}
     *   would be an array of maps, with each map corresponding to the ranks
     *   being added in {@code hosts}. The key of each map would be
     *   the configuration parameter name and the value would be the
     *   parameter's value, e.g. '{"rank.gpu":"1"}'
     * <p>
     * This endpoint's processing includes copying all replicated table data to
     * the new rank(s) and therefore could take a long time. The API call may
     * time out if run directly.  It is recommended to run this endpoint
     * asynchronously via {@link GPUdb#createJob(CreateJobRequest)}.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminAddRanksResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminAddRanksResponse adminAddRanks(AdminAddRanksRequest request) throws GPUdbException {
        AdminAddRanksResponse actualResponse_ = new AdminAddRanksResponse();
        submitRequest("/admin/add/ranks", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Add one or more ranks to an existing Kinetica cluster. The new ranks
     * will not contain any data initially (other than replicated tables) and
     * will not be assigned any shards. To rebalance data and shards across the
     * cluster, use {@link GPUdb#adminRebalance(Map)}.
     * <p>
     * The database must be offline for this operation, see {@link
     * GPUdb#adminOffline(boolean, Map)}
     * <p>
     * For example, if attempting to add three new ranks (two ranks on host
     * 172.123.45.67 and one rank on host 172.123.45.68) to a Kinetica cluster
     * with additional configuration parameters:
     * <p>
     * * {@code hosts}
     *   would be an array including 172.123.45.67 in the first two indices
     *   (signifying two ranks being added to host 172.123.45.67) and
     *   172.123.45.68 in the last index (signifying one rank being added
     *   to host 172.123.45.67)
     * * {@code configParams}
     *   would be an array of maps, with each map corresponding to the ranks
     *   being added in {@code hosts}. The key of each map would be
     *   the configuration parameter name and the value would be the
     *   parameter's value, e.g. '{"rank.gpu":"1"}'
     * <p>
     * This endpoint's processing includes copying all replicated table data to
     * the new rank(s) and therefore could take a long time. The API call may
     * time out if run directly.  It is recommended to run this endpoint
     * asynchronously via {@link GPUdb#createJob(String, String, ByteBuffer,
     * String, Map)}.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param hosts  Array of host IP addresses (matching a hostN.address from
     *               the gpudb.conf file), or host identifiers (e.g. 'host0'
     *               from the gpudb.conf file), on which to add ranks to the
     *               cluster. The hosts must already be in the cluster. If
     *               needed beforehand, to add a new host to the cluster use
     *               {@link GPUdb#adminAddHost(String, Map)}. Include the same
     *               entry as many times as there are ranks to add to the
     *               cluster, e.g., if two ranks on host 172.123.45.67 should
     *               be added, {@code hosts} could look like '["172.123.45.67",
     *               "172.123.45.67"]'. All ranks will be added simultaneously,
     *               i.e. they're not added in the order of this array. Each
     *               entry in this array corresponds to the entry at the same
     *               index in the {@code configParams}.
     * @param configParams  Array of maps containing configuration parameters
     *                      to apply to the new ranks
     *                      found in {@code hosts}. For example,
     *                      '{"rank.gpu":"2",
     *                      "tier.ram.rank.limit":"10000000000"}'. Currently,
     *                      the available parameters
     *                      are rank-specific parameters in the <a
     *                      href="../../../../../config/#config-main-network"
     *                      target="_top">Network</a>,
     *                      <a
     *                      href="../../../../../config/#config-main-hardware"
     *                      target="_top">Hardware</a>,
     *                      <a
     *                      href="../../../../../config/#config-main-text-search"
     *                      target="_top">Text Search</a>, and
     *                      <a
     *                      href="../../../../../config/#config-main-ram-tier"
     *                      target="_top">RAM Tiered Storage</a> sections in
     *                      the gpudb.conf file, with the
     *                      key exception of the 'rankN.host' settings in the
     *                      Network section that will be determined by
     *                      {@code hosts} instead. Though many of these
     *                      configuration parameters typically are affixed with
     *                      'rankN' in the gpudb.conf file (where N is the rank
     *                      number), the 'N' should be omitted in
     *                      {@code configParams} as the new rank number(s) are
     *                      not allocated until the ranks have been added
     *                      to the cluster. Each entry in this array
     *                      corresponds to the entry at the same index in the
     *                      {@code hosts}. This array must either be completely
     *                      empty or have the same number of elements as
     *                      the {@code hosts}.  An empty {@code configParams}
     *                      array will result in the new ranks being set
     *                      with default parameters.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddRanksRequest.Options#DRY_RUN
     *                 DRY_RUN}: If {@code true}, only validation checks will
     *                 be performed. No ranks are added.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddRanksRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAddRanksRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminAddRanksRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminAddRanksResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminAddRanksResponse adminAddRanks(List<String> hosts, List<Map<String, String>> configParams, Map<String, String> options) throws GPUdbException {
        AdminAddRanksRequest actualRequest_ = new AdminAddRanksRequest(hosts, configParams, options);
        AdminAddRanksResponse actualResponse_ = new AdminAddRanksResponse();
        submitRequest("/admin/add/ranks", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alter properties on an existing host in the cluster. Currently, the only
     * property that can be altered is a hosts ability to accept failover
     * processes.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminAlterHostResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminAlterHostResponse adminAlterHost(AdminAlterHostRequest request) throws GPUdbException {
        AdminAlterHostResponse actualResponse_ = new AdminAlterHostResponse();
        submitRequestToHM("/admin/alter/host", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alter properties on an existing host in the cluster. Currently, the only
     * property that can be altered is a hosts ability to accept failover
     * processes.
     * 
     * @param host  Identifies the host this applies to. Can be the host
     *              address, or formatted as 'hostN' where N is the host number
     *              as specified in gpudb.conf
     * @param options  Optional parameters
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAlterHostRequest.Options#ACCEPTS_FAILOVER
     *                 ACCEPTS_FAILOVER}: If set to {@code true}, the host will
     *                 accept processes (ranks, graph server, etc.) in the
     *                 event of a failover on another node in the cluster.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAlterHostRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAlterHostRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminAlterHostRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminAlterHostResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminAlterHostResponse adminAlterHost(String host, Map<String, String> options) throws GPUdbException {
        AdminAlterHostRequest actualRequest_ = new AdminAlterHostRequest(host, options);
        AdminAlterHostResponse actualResponse_ = new AdminAlterHostResponse();
        submitRequestToHM("/admin/alter/host", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Perform the requested action on a list of one or more job(s). Based
     * on the type of job and the current state of execution, the action may
     * not be
     * successfully executed. The final result of the attempted actions for
     * each
     * specified job is returned in the status array of the response. See
     * <a href="../../../../../admin/job_manager/" target="_top">Job
     * Manager</a> for more information.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminAlterJobsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminAlterJobsResponse adminAlterJobs(AdminAlterJobsRequest request) throws GPUdbException {
        AdminAlterJobsResponse actualResponse_ = new AdminAlterJobsResponse();
        submitRequest("/admin/alter/jobs", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Perform the requested action on a list of one or more job(s). Based
     * on the type of job and the current state of execution, the action may
     * not be
     * successfully executed. The final result of the attempted actions for
     * each
     * specified job is returned in the status array of the response. See
     * <a href="../../../../../admin/job_manager/" target="_top">Job
     * Manager</a> for more information.
     * 
     * @param jobIds  Jobs to be modified.
     * @param action  Action to be performed on the jobs specified by job_ids.
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.AdminAlterJobsRequest.Action#CANCEL
     *                CANCEL}
     *                </ul>
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminAlterJobsRequest.Options#JOB_TAG
     *                 JOB_TAG}: Job tag returned in call to create the job
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminAlterJobsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminAlterJobsResponse adminAlterJobs(List<Long> jobIds, String action, Map<String, String> options) throws GPUdbException {
        AdminAlterJobsRequest actualRequest_ = new AdminAlterJobsRequest(jobIds, action, options);
        AdminAlterJobsResponse actualResponse_ = new AdminAlterJobsResponse();
        submitRequest("/admin/alter/jobs", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Prepares the system for a backup by closing all open file handles after
     * allowing current active jobs to complete. When the database is in backup
     * mode, queries that result in a disk write operation will be blocked
     * until backup mode has been completed by using {@link
     * GPUdb#adminBackupEnd(AdminBackupEndRequest)}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminBackupBeginResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminBackupBeginResponse adminBackupBegin(AdminBackupBeginRequest request) throws GPUdbException {
        AdminBackupBeginResponse actualResponse_ = new AdminBackupBeginResponse();
        submitRequest("/admin/backup/begin", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Prepares the system for a backup by closing all open file handles after
     * allowing current active jobs to complete. When the database is in backup
     * mode, queries that result in a disk write operation will be blocked
     * until backup mode has been completed by using {@link
     * GPUdb#adminBackupEnd(Map)}.
     * 
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminBackupBeginResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminBackupBeginResponse adminBackupBegin(Map<String, String> options) throws GPUdbException {
        AdminBackupBeginRequest actualRequest_ = new AdminBackupBeginRequest(options);
        AdminBackupBeginResponse actualResponse_ = new AdminBackupBeginResponse();
        submitRequest("/admin/backup/begin", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Restores the system to normal operating mode after a backup has
     * completed, allowing any queries that were blocked to complete.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminBackupEndResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminBackupEndResponse adminBackupEnd(AdminBackupEndRequest request) throws GPUdbException {
        AdminBackupEndResponse actualResponse_ = new AdminBackupEndResponse();
        submitRequest("/admin/backup/end", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Restores the system to normal operating mode after a backup has
     * completed, allowing any queries that were blocked to complete.
     * 
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminBackupEndResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminBackupEndResponse adminBackupEnd(Map<String, String> options) throws GPUdbException {
        AdminBackupEndRequest actualRequest_ = new AdminBackupEndRequest(options);
        AdminBackupEndResponse actualResponse_ = new AdminBackupEndResponse();
        submitRequest("/admin/backup/end", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Restarts the HA processing on the given cluster as a mechanism of
     * accepting breaking HA conf changes. Additionally the cluster is put into
     * read-only while HA is restarting.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminHaRefreshResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminHaRefreshResponse adminHaRefresh(AdminHaRefreshRequest request) throws GPUdbException {
        AdminHaRefreshResponse actualResponse_ = new AdminHaRefreshResponse();
        submitRequest("/admin/ha/refresh", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Restarts the HA processing on the given cluster as a mechanism of
     * accepting breaking HA conf changes. Additionally the cluster is put into
     * read-only while HA is restarting.
     * 
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminHaRefreshResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminHaRefreshResponse adminHaRefresh(Map<String, String> options) throws GPUdbException {
        AdminHaRefreshRequest actualRequest_ = new AdminHaRefreshRequest(options);
        AdminHaRefreshResponse actualResponse_ = new AdminHaRefreshResponse();
        submitRequest("/admin/ha/refresh", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Take the system offline. When the system is offline, no user operations
     * can be performed with the exception of a system shutdown.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminOfflineResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminOfflineResponse adminOffline(AdminOfflineRequest request) throws GPUdbException {
        AdminOfflineResponse actualResponse_ = new AdminOfflineResponse();
        submitRequest("/admin/offline", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Take the system offline. When the system is offline, no user operations
     * can be performed with the exception of a system shutdown.
     * 
     * @param offline  Set to true if desired state is offline.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminOfflineRequest.Offline#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminOfflineRequest.Offline#FALSE
     *                 FALSE}
     *                 </ul>
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminOfflineRequest.Options#FLUSH_TO_DISK
     *                 FLUSH_TO_DISK}: Flush to disk when going offline
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminOfflineRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminOfflineRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminOfflineResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminOfflineResponse adminOffline(boolean offline, Map<String, String> options) throws GPUdbException {
        AdminOfflineRequest actualRequest_ = new AdminOfflineRequest(offline, options);
        AdminOfflineResponse actualResponse_ = new AdminOfflineResponse();
        submitRequest("/admin/offline", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Rebalance the data in the cluster so that all nodes contain an equal
     * number of records approximately and/or rebalance the shards to be
     * equally
     * distributed (as much as possible) across all the ranks.
     * <p>
     * The database must be offline for this operation, see {@link
     * GPUdb#adminOffline(AdminOfflineRequest)}
     * <p>
     * * If {@link GPUdb#adminRebalance(AdminRebalanceRequest)} is invoked
     * after a change is
     *   made to the cluster, e.g., a host was added or removed,
     *   <a href="../../../../../concepts/tables/#sharding"
     * target="_top">sharded data</a> will be
     *   evenly redistributed across the cluster by number of shards per rank
     *   while unsharded data will be redistributed across the cluster by data
     *   size per rank
     * * If {@link GPUdb#adminRebalance(AdminRebalanceRequest)}
     *   is invoked at some point when unsharded data (a.k.a.
     *   <a href="../../../../../concepts/tables/#random-sharding"
     * target="_top">randomly-sharded</a>)
     *   in the cluster is unevenly distributed over time, sharded data will
     *   not move while unsharded data will be redistributed across the
     *   cluster by data size per rank
     * <p>
     * NOTE: Replicated data will not move as a result of this call
     * <p>
     * This endpoint's processing time depends on the amount of data in the
     * system,
     * thus the API call may time out if run directly.  It is recommended to
     * run this
     * endpoint asynchronously via {@link GPUdb#createJob(CreateJobRequest)}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminRebalanceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminRebalanceResponse adminRebalance(AdminRebalanceRequest request) throws GPUdbException {
        AdminRebalanceResponse actualResponse_ = new AdminRebalanceResponse();
        submitRequest("/admin/rebalance", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Rebalance the data in the cluster so that all nodes contain an equal
     * number of records approximately and/or rebalance the shards to be
     * equally
     * distributed (as much as possible) across all the ranks.
     * <p>
     * The database must be offline for this operation, see {@link
     * GPUdb#adminOffline(boolean, Map)}
     * <p>
     * * If {@link GPUdb#adminRebalance(Map)} is invoked after a change is
     *   made to the cluster, e.g., a host was added or removed,
     *   <a href="../../../../../concepts/tables/#sharding"
     * target="_top">sharded data</a> will be
     *   evenly redistributed across the cluster by number of shards per rank
     *   while unsharded data will be redistributed across the cluster by data
     *   size per rank
     * * If {@link GPUdb#adminRebalance(Map)}
     *   is invoked at some point when unsharded data (a.k.a.
     *   <a href="../../../../../concepts/tables/#random-sharding"
     * target="_top">randomly-sharded</a>)
     *   in the cluster is unevenly distributed over time, sharded data will
     *   not move while unsharded data will be redistributed across the
     *   cluster by data size per rank
     * <p>
     * NOTE: Replicated data will not move as a result of this call
     * <p>
     * This endpoint's processing time depends on the amount of data in the
     * system,
     * thus the API call may time out if run directly.  It is recommended to
     * run this
     * endpoint asynchronously via {@link GPUdb#createJob(String, String,
     * ByteBuffer, String, Map)}.
     * 
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#REBALANCE_SHARDED_DATA
     *                 REBALANCE_SHARDED_DATA}: If {@code true}, <a
     *                 href="../../../../../concepts/tables/#sharding"
     *                 target="_top">sharded data</a> will be rebalanced
     *                 approximately equally across the cluster. Note that for
     *                 clusters with large amounts of sharded data, this data
     *                 transfer could be time consuming and result in delayed
     *                 query responses.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#REBALANCE_UNSHARDED_DATA
     *                 REBALANCE_UNSHARDED_DATA}: If {@code true}, unsharded
     *                 data (a.k.a. <a
     *                 href="../../../../../concepts/tables/#random-sharding"
     *                 target="_top">randomly-sharded</a>) will be rebalanced
     *                 approximately equally across the cluster. Note that for
     *                 clusters with large amounts of unsharded data, this data
     *                 transfer could be time consuming and result in delayed
     *                 query responses.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TABLE_INCLUDES
     *                 TABLE_INCLUDES}: Comma-separated list of unsharded table
     *                 names to rebalance. Not applicable to sharded tables
     *                 because they are always rebalanced. Cannot be used
     *                 simultaneously with {@code table_excludes}. This
     *                 parameter is ignored if {@code rebalance_unsharded_data}
     *                 is {@code false}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TABLE_EXCLUDES
     *                 TABLE_EXCLUDES}: Comma-separated list of unsharded table
     *                 names to not rebalance. Not applicable to sharded tables
     *                 because they are always rebalanced. Cannot be used
     *                 simultaneously with {@code table_includes}. This
     *                 parameter is ignored if {@code rebalance_unsharded_data}
     *                 is {@code false}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#AGGRESSIVENESS
     *                 AGGRESSIVENESS}: Influences how much data is moved at a
     *                 time during rebalance.  A higher {@code aggressiveness}
     *                 will complete the rebalance faster.  A lower {@code
     *                 aggressiveness} will take longer but allow for better
     *                 interleaving between the rebalance and other queries.
     *                 Valid values are constants from 1 (lowest) to 10
     *                 (highest).  The default value is '10'.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#COMPACT_AFTER_REBALANCE
     *                 COMPACT_AFTER_REBALANCE}: Perform compaction of deleted
     *                 records once the rebalance completes to reclaim memory
     *                 and disk space. Default is {@code true}, unless {@code
     *                 repair_incorrectly_sharded_data} is set to {@code true}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#COMPACT_ONLY
     *                 COMPACT_ONLY}: If set to {@code true}, ignore rebalance
     *                 options and attempt to perform compaction of deleted
     *                 records to reclaim memory and disk space without
     *                 rebalancing first.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#REPAIR_INCORRECTLY_SHARDED_DATA
     *                 REPAIR_INCORRECTLY_SHARDED_DATA}: Scans for any data
     *                 sharded incorrectly and re-routes the data to the
     *                 correct location. Only necessary if {@link
     *                 GPUdb#adminVerifyDb(Map)} reports an error in sharding
     *                 alignment. This can be done as part of a typical
     *                 rebalance after expanding the cluster or in a standalone
     *                 fashion when it is believed that data is sharded
     *                 incorrectly somewhere in the cluster. Compaction will
     *                 not be performed by default when this is enabled. If
     *                 this option is set to {@code true}, the time necessary
     *                 to rebalance and the memory used by the rebalance may
     *                 increase.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminRebalanceRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminRebalanceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminRebalanceResponse adminRebalance(Map<String, String> options) throws GPUdbException {
        AdminRebalanceRequest actualRequest_ = new AdminRebalanceRequest(options);
        AdminRebalanceResponse actualResponse_ = new AdminRebalanceResponse();
        submitRequest("/admin/rebalance", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Removes a host from an existing cluster. If the host to be removed has
     * any ranks running on it, the ranks must be removed using {@link
     * GPUdb#adminRemoveRanks(AdminRemoveRanksRequest)} or manually switched
     * over to a new host using {@link
     * GPUdb#adminSwitchover(AdminSwitchoverRequest)} prior to host removal. If
     * the host to be removed has the graph server or SQL planner running on
     * it, these must be manually switched over to a new host using {@link
     * GPUdb#adminSwitchover(AdminSwitchoverRequest)}.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminRemoveHostResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminRemoveHostResponse adminRemoveHost(AdminRemoveHostRequest request) throws GPUdbException {
        AdminRemoveHostResponse actualResponse_ = new AdminRemoveHostResponse();
        submitRequestToHM("/admin/remove/host", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Removes a host from an existing cluster. If the host to be removed has
     * any ranks running on it, the ranks must be removed using {@link
     * GPUdb#adminRemoveRanks(List, Map)} or manually switched over to a new
     * host using {@link GPUdb#adminSwitchover(List, List, Map)} prior to host
     * removal. If the host to be removed has the graph server or SQL planner
     * running on it, these must be manually switched over to a new host using
     * {@link GPUdb#adminSwitchover(List, List, Map)}.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param host  Identifies the host this applies to. Can be the host
     *              address, or formatted as 'hostN' where N is the host number
     *              as specified in gpudb.conf
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRemoveHostRequest.Options#DRY_RUN
     *                 DRY_RUN}: If set to {@code true}, only validation checks
     *                 will be performed. No host is removed.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRemoveHostRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRemoveHostRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminRemoveHostRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminRemoveHostResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminRemoveHostResponse adminRemoveHost(String host, Map<String, String> options) throws GPUdbException {
        AdminRemoveHostRequest actualRequest_ = new AdminRemoveHostRequest(host, options);
        AdminRemoveHostResponse actualResponse_ = new AdminRemoveHostResponse();
        submitRequestToHM("/admin/remove/host", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Remove one or more ranks from an existing Kinetica cluster. All data
     * will be rebalanced to other ranks before the rank(s) is removed unless
     * the
     * {@code rebalance_sharded_data} or
     * {@code rebalance_unsharded_data} parameters are set to
     * {@code false} in the
     * {@code options}, in which case the corresponding
     * <a href="../../../../../concepts/tables/#sharding" target="_top">sharded
     * data</a> and/or unsharded data (a.k.a.
     * <a href="../../../../../concepts/tables/#random-sharding"
     * target="_top">randomly-sharded</a>) will be deleted.
     * <p>
     * The database must be offline for this operation, see {@link
     * GPUdb#adminOffline(AdminOfflineRequest)}
     * <p>
     * This endpoint's processing time depends on the amount of data in the
     * system,
     * thus the API call may time out if run directly.  It is recommended to
     * run this
     * endpoint asynchronously via {@link GPUdb#createJob(CreateJobRequest)}.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminRemoveRanksResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminRemoveRanksResponse adminRemoveRanks(AdminRemoveRanksRequest request) throws GPUdbException {
        AdminRemoveRanksResponse actualResponse_ = new AdminRemoveRanksResponse();
        submitRequest("/admin/remove/ranks", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Remove one or more ranks from an existing Kinetica cluster. All data
     * will be rebalanced to other ranks before the rank(s) is removed unless
     * the
     * {@code rebalance_sharded_data} or
     * {@code rebalance_unsharded_data} parameters are set to
     * {@code false} in the
     * {@code options}, in which case the corresponding
     * <a href="../../../../../concepts/tables/#sharding" target="_top">sharded
     * data</a> and/or unsharded data (a.k.a.
     * <a href="../../../../../concepts/tables/#random-sharding"
     * target="_top">randomly-sharded</a>) will be deleted.
     * <p>
     * The database must be offline for this operation, see {@link
     * GPUdb#adminOffline(boolean, Map)}
     * <p>
     * This endpoint's processing time depends on the amount of data in the
     * system,
     * thus the API call may time out if run directly.  It is recommended to
     * run this
     * endpoint asynchronously via {@link GPUdb#createJob(String, String,
     * ByteBuffer, String, Map)}.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param ranks  Each array value designates one or more ranks to remove
     *               from the cluster. Values can be formatted as 'rankN' for a
     *               specific rank, 'hostN' (from the gpudb.conf file) to
     *               remove all ranks on that host, or the host IP address
     *               (hostN.address from the gpub.conf file) which also removes
     *               all ranks on that host. Rank 0 (the head rank) cannot be
     *               removed (but can be moved to another host using {@link
     *               GPUdb#adminSwitchover(List, List, Map)}). At least one
     *               worker rank must be left in the cluster after the
     *               operation.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRemoveRanksRequest.Options#REBALANCE_SHARDED_DATA
     *                 REBALANCE_SHARDED_DATA}: If {@code true}, <a
     *                 href="../../../../../concepts/tables/#sharding"
     *                 target="_top">sharded data</a> will be rebalanced
     *                 approximately equally across the cluster. Note that for
     *                 clusters with large amounts of sharded data, this data
     *                 transfer could be time consuming and result in delayed
     *                 query responses.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRemoveRanksRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRemoveRanksRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminRemoveRanksRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRemoveRanksRequest.Options#REBALANCE_UNSHARDED_DATA
     *                 REBALANCE_UNSHARDED_DATA}: If {@code true}, unsharded
     *                 data (a.k.a. <a
     *                 href="../../../../../concepts/tables/#random-sharding"
     *                 target="_top">randomly-sharded</a>) will be rebalanced
     *                 approximately equally across the cluster. Note that for
     *                 clusters with large amounts of unsharded data, this data
     *                 transfer could be time consuming and result in delayed
     *                 query responses.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRemoveRanksRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRemoveRanksRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminRemoveRanksRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminRemoveRanksRequest.Options#AGGRESSIVENESS
     *                 AGGRESSIVENESS}: Influences how much data is moved at a
     *                 time during rebalance.  A higher {@code aggressiveness}
     *                 will complete the rebalance faster.  A lower {@code
     *                 aggressiveness} will take longer but allow for better
     *                 interleaving between the rebalance and other queries.
     *                 Valid values are constants from 1 (lowest) to 10
     *                 (highest).  The default value is '10'.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminRemoveRanksResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminRemoveRanksResponse adminRemoveRanks(List<String> ranks, Map<String, String> options) throws GPUdbException {
        AdminRemoveRanksRequest actualRequest_ = new AdminRemoveRanksRequest(ranks, options);
        AdminRemoveRanksResponse actualResponse_ = new AdminRemoveRanksResponse();
        submitRequest("/admin/remove/ranks", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Requests a list of the most recent alerts.
     * Returns lists of alert data, including timestamp and type.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminShowAlertsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminShowAlertsResponse adminShowAlerts(AdminShowAlertsRequest request) throws GPUdbException {
        AdminShowAlertsResponse actualResponse_ = new AdminShowAlertsResponse();
        submitRequestToHM("/admin/show/alerts", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Requests a list of the most recent alerts.
     * Returns lists of alert data, including timestamp and type.
     * 
     * @param numAlerts  Number of most recent alerts to request. The response
     *                   will include up to {@code numAlerts} depending on how
     *                   many alerts there are in the system. A value of 0
     *                   returns all stored alerts.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminShowAlertsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminShowAlertsResponse adminShowAlerts(int numAlerts, Map<String, String> options) throws GPUdbException {
        AdminShowAlertsRequest actualRequest_ = new AdminShowAlertsRequest(numAlerts, options);
        AdminShowAlertsResponse actualResponse_ = new AdminShowAlertsResponse();
        submitRequestToHM("/admin/show/alerts", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Requests the detailed status of the current operation (by default) or a
     * prior cluster operation specified by {@code historyIndex}.
     * Returns details on the requested cluster operation.
     * <p>
     * The response will also indicate how many cluster operations are stored
     * in the history.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminShowClusterOperationsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminShowClusterOperationsResponse adminShowClusterOperations(AdminShowClusterOperationsRequest request) throws GPUdbException {
        AdminShowClusterOperationsResponse actualResponse_ = new AdminShowClusterOperationsResponse();
        submitRequest("/admin/show/cluster/operations", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Requests the detailed status of the current operation (by default) or a
     * prior cluster operation specified by {@code historyIndex}.
     * Returns details on the requested cluster operation.
     * <p>
     * The response will also indicate how many cluster operations are stored
     * in the history.
     * 
     * @param historyIndex  Indicates which cluster operation to retrieve.  Use
     *                      0 for the most recent.  The default value is 0.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminShowClusterOperationsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminShowClusterOperationsResponse adminShowClusterOperations(int historyIndex, Map<String, String> options) throws GPUdbException {
        AdminShowClusterOperationsRequest actualRequest_ = new AdminShowClusterOperationsRequest(historyIndex, options);
        AdminShowClusterOperationsResponse actualResponse_ = new AdminShowClusterOperationsResponse();
        submitRequest("/admin/show/cluster/operations", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Get a list of the current jobs in GPUdb.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminShowJobsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminShowJobsResponse adminShowJobs(AdminShowJobsRequest request) throws GPUdbException {
        AdminShowJobsResponse actualResponse_ = new AdminShowJobsResponse();
        submitRequest("/admin/show/jobs", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Get a list of the current jobs in GPUdb.
     * 
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminShowJobsRequest.Options#SHOW_ASYNC_JOBS
     *                 SHOW_ASYNC_JOBS}: If {@code true}, then the completed
     *                 async jobs are also included in the response. By
     *                 default, once the async jobs are completed they are no
     *                 longer included in the jobs list.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminShowJobsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminShowJobsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminShowJobsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminShowJobsRequest.Options#SHOW_WORKER_INFO
     *                 SHOW_WORKER_INFO}: If {@code true}, then information is
     *                 also returned from worker ranks. By default only status
     *                 from the head rank is returned.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminShowJobsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminShowJobsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminShowJobsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminShowJobsResponse adminShowJobs(Map<String, String> options) throws GPUdbException {
        AdminShowJobsRequest actualRequest_ = new AdminShowJobsRequest(options);
        AdminShowJobsResponse actualResponse_ = new AdminShowJobsResponse();
        submitRequest("/admin/show/jobs", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Show the mapping of shards to the corresponding rank and tom.  The
     * response message contains list of 16384 (total number of shards in the
     * system) Rank and TOM numbers corresponding to each shard.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminShowShardsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminShowShardsResponse adminShowShards(AdminShowShardsRequest request) throws GPUdbException {
        AdminShowShardsResponse actualResponse_ = new AdminShowShardsResponse();
        submitRequest("/admin/show/shards", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Show the mapping of shards to the corresponding rank and tom.  The
     * response message contains list of 16384 (total number of shards in the
     * system) Rank and TOM numbers corresponding to each shard.
     * 
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminShowShardsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminShowShardsResponse adminShowShards(Map<String, String> options) throws GPUdbException {
        AdminShowShardsRequest actualRequest_ = new AdminShowShardsRequest(options);
        AdminShowShardsResponse actualResponse_ = new AdminShowShardsResponse();
        submitRequest("/admin/show/shards", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Exits the database server application.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminShutdownResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminShutdownResponse adminShutdown(AdminShutdownRequest request) throws GPUdbException {
        AdminShutdownResponse actualResponse_ = new AdminShutdownResponse();
        submitRequest("/admin/shutdown", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Exits the database server application.
     * 
     * @param exitType  Reserved for future use. User can pass an empty string.
     * @param authorization  No longer used. User can pass an empty string.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminShutdownResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminShutdownResponse adminShutdown(String exitType, String authorization, Map<String, String> options) throws GPUdbException {
        AdminShutdownRequest actualRequest_ = new AdminShutdownRequest(exitType, authorization, options);
        AdminShutdownResponse actualResponse_ = new AdminShutdownResponse();
        submitRequest("/admin/shutdown", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Manually switch over one or more processes to another host. Individual
     * ranks or entire hosts may be moved to another host.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminSwitchoverResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminSwitchoverResponse adminSwitchover(AdminSwitchoverRequest request) throws GPUdbException {
        AdminSwitchoverResponse actualResponse_ = new AdminSwitchoverResponse();
        submitRequestToHM("/admin/switchover", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Manually switch over one or more processes to another host. Individual
     * ranks or entire hosts may be moved to another host.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param processes  Indicates the process identifier to switch over to
     *                   another host. Options are
     *                   'hostN' and 'rankN' where 'N' corresponds to the
     *                   number associated with a host or rank in the
     *                   <a href="../../../../../config/#config-main-network"
     *                   target="_top">Network</a> section of the gpudb.conf
     *                   file; e.g.,
     *                   'host[N].address' or 'rank[N].host'. If 'hostN' is
     *                   provided, all processes on that host will be
     *                   moved to another host. Each entry in this array will
     *                   be switched over to the corresponding host
     *                   entry at the same index in {@code destinations}.
     * @param destinations  Indicates to which host to switch over each
     *                      corresponding process given in
     *                      {@code processes}. Each index must be specified as
     *                      'hostN' where 'N' corresponds to the number
     *                      associated with a host or rank in the <a
     *                      href="../../../../../config/#config-main-network"
     *                      target="_top">Network</a> section of the
     *                      gpudb.conf file; e.g., 'host[N].address'. Each
     *                      entry in this array will receive the corresponding
     *                      process entry at the same index in {@code
     *                      processes}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminSwitchoverRequest.Options#DRY_RUN
     *                 DRY_RUN}: If set to {@code true}, only validation checks
     *                 will be performed. Nothing is switched over.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminSwitchoverRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminSwitchoverRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminSwitchoverRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminSwitchoverResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminSwitchoverResponse adminSwitchover(List<String> processes, List<String> destinations, Map<String, String> options) throws GPUdbException {
        AdminSwitchoverRequest actualRequest_ = new AdminSwitchoverRequest(processes, destinations, options);
        AdminSwitchoverResponse actualResponse_ = new AdminSwitchoverResponse();
        submitRequestToHM("/admin/switchover", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Verify database is in a consistent state.  When inconsistencies or
     * errors are found, the verified_ok flag in the response is set to false
     * and the list of errors found is provided in the error_list.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminVerifyDbResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminVerifyDbResponse adminVerifyDb(AdminVerifyDbRequest request) throws GPUdbException {
        AdminVerifyDbResponse actualResponse_ = new AdminVerifyDbResponse();
        submitRequest("/admin/verifydb", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Verify database is in a consistent state.  When inconsistencies or
     * errors are found, the verified_ok flag in the response is set to false
     * and the list of errors found is provided in the error_list.
     * 
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#REBUILD_ON_ERROR
     *                 REBUILD_ON_ERROR}: [DEPRECATED -- Use the Rebuild DB
     *                 feature of GAdmin instead.]
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#VERIFY_NULLS
     *                 VERIFY_NULLS}: When {@code true}, verifies that null
     *                 values are set to zero
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#VERIFY_PERSIST
     *                 VERIFY_PERSIST}: When {@code true}, persistent objects
     *                 will be compared against their state in memory and
     *                 workers will be checked for orphaned table data in
     *                 persist. To check for orphaned worker data, either set
     *                 {@code concurrent_safe} in {@code options} to {@code
     *                 true} or place the database offline.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#CONCURRENT_SAFE
     *                 CONCURRENT_SAFE}: When {@code true}, allows this
     *                 endpoint to be run safely with other concurrent database
     *                 operations. Other operations may be slower while this is
     *                 running.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#VERIFY_RANK0
     *                 VERIFY_RANK0}: If {@code true}, compare rank0 table
     *                 metadata against workers' metadata
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#DELETE_ORPHANED_TABLES
     *                 DELETE_ORPHANED_TABLES}: If {@code true}, orphaned table
     *                 directories found on workers for which there is no
     *                 corresponding metadata will be deleted. Must set {@code
     *                 verify_persist} in {@code options} to {@code true}. It
     *                 is recommended to run this while the database is offline
     *                 OR set {@code concurrent_safe} in {@code options} to
     *                 {@code true}
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#VERIFY_ORPHANED_TABLES_ONLY
     *                 VERIFY_ORPHANED_TABLES_ONLY}: If {@code true}, only the
     *                 presence of orphaned table directories will be checked,
     *                 all persistence checks will be skipped
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AdminVerifyDbRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AdminVerifyDbResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AdminVerifyDbResponse adminVerifyDb(Map<String, String> options) throws GPUdbException {
        AdminVerifyDbRequest actualRequest_ = new AdminVerifyDbRequest(options);
        AdminVerifyDbResponse actualResponse_ = new AdminVerifyDbResponse();
        submitRequest("/admin/verifydb", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates and returns the convex hull for the values in a table
     * specified by {@code tableName}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateConvexHullResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateConvexHullResponse aggregateConvexHull(AggregateConvexHullRequest request) throws GPUdbException {
        AggregateConvexHullResponse actualResponse_ = new AggregateConvexHullResponse();
        submitRequest("/aggregate/convexhull", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates and returns the convex hull for the values in a table
     * specified by {@code tableName}.
     * 
     * @param tableName  Name of table on which the operation will be
     *                   performed. Must be an existing table, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param xColumnName  Name of the column containing the x coordinates of
     *                     the points for the operation being performed.
     * @param yColumnName  Name of the column containing the y coordinates of
     *                     the points for the operation being performed.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateConvexHullResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateConvexHullResponse aggregateConvexHull(String tableName, String xColumnName, String yColumnName, Map<String, String> options) throws GPUdbException {
        AggregateConvexHullRequest actualRequest_ = new AggregateConvexHullRequest(tableName, xColumnName, yColumnName, options);
        AggregateConvexHullResponse actualResponse_ = new AggregateConvexHullResponse();
        submitRequest("/aggregate/convexhull", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates unique combinations (groups) of values for the given columns
     * in a given table or view and computes aggregates on each unique
     * combination. This is somewhat analogous to an SQL-style SELECT...GROUP
     * BY.
     * <p>
     * For aggregation details and examples, see <a
     * href="../../../../../concepts/aggregation/"
     * target="_top">Aggregation</a>.  For limitations, see <a
     * href="../../../../../concepts/aggregation/#limitations"
     * target="_top">Aggregation Limitations</a>.
     * <p>
     * Any column(s) can be grouped on, and all column types except
     * unrestricted-length strings may be used for computing applicable
     * aggregates; columns marked as <a
     * href="../../../../../concepts/types/#data-handling"
     * target="_top">store-only</a> are unable to be used in grouping or
     * aggregation.
     * <p>
     * The results can be paged via the {@code offset} and {@code limit}
     * parameters. For example, to get 10 groups with the largest counts the
     * inputs would be: limit=10, options={"sort_order":"descending",
     * "sort_by":"value"}.
     * <p>
     * {@code options} can be used to customize behavior of this call e.g.
     * filtering or sorting the results.
     * <p>
     * To group by columns 'x' and 'y' and compute the number of objects within
     * each group, use:  column_names=['x','y','count(*)'].
     * <p>
     * To also compute the sum of 'z' over each group, use:
     * column_names=['x','y','count(*)','sum(z)'].
     * <p>
     * Available <a
     * href="../../../../../concepts/expressions/#aggregate-expressions"
     * target="_top">aggregation functions</a> are: count(*), sum, min, max,
     * avg, mean, stddev, stddev_pop, stddev_samp, var, var_pop, var_samp,
     * arg_min, arg_max and count_distinct.
     * <p>
     * Available grouping functions are <a
     * href="../../../../../concepts/rollup/" target="_top">Rollup</a>, <a
     * href="../../../../../concepts/cube/" target="_top">Cube</a>, and <a
     * href="../../../../../concepts/grouping_sets/" target="_top">Grouping
     * Sets</a>
     * <p>
     * This service also provides support for <a
     * href="../../../../../concepts/pivot/" target="_top">Pivot</a>
     * operations.
     * <p>
     * Filtering on aggregates is supported via expressions using <a
     * href="../../../../../concepts/expressions/#aggregate-expressions"
     * target="_top">aggregation functions</a> supplied to {@code having}.
     * <p>
     * The response is returned as a dynamic schema. For details see: <a
     * href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * <p>
     * If a {@code result_table} name is specified in the {@code options}, the
     * results are stored in a new table with that name--no results are
     * returned in the response.  Both the table name and resulting column
     * names must adhere to <a href="../../../../../concepts/tables/#table"
     * target="_top">standard naming conventions</a>; column/aggregation
     * expressions will need to be aliased.  If the source table's <a
     * href="../../../../../concepts/tables/#shard-keys" target="_top">shard
     * key</a> is used as the grouping column(s) and all result records are
     * selected ({@code offset} is 0 and {@code limit} is -9999), the result
     * table will be sharded, in all other cases it will be replicated.
     * Sorting will properly function only if the result table is replicated or
     * if there is only one processing node and should not be relied upon in
     * other cases.  Not available when any of the values of {@code
     * columnNames} is an unrestricted-length string.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RawAggregateGroupByResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RawAggregateGroupByResponse aggregateGroupByRaw(AggregateGroupByRequest request) throws GPUdbException {
        RawAggregateGroupByResponse actualResponse_ = new RawAggregateGroupByResponse();
        submitRequest("/aggregate/groupby", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates unique combinations (groups) of values for the given columns
     * in a given table or view and computes aggregates on each unique
     * combination. This is somewhat analogous to an SQL-style SELECT...GROUP
     * BY.
     * <p>
     * For aggregation details and examples, see <a
     * href="../../../../../concepts/aggregation/"
     * target="_top">Aggregation</a>.  For limitations, see <a
     * href="../../../../../concepts/aggregation/#limitations"
     * target="_top">Aggregation Limitations</a>.
     * <p>
     * Any column(s) can be grouped on, and all column types except
     * unrestricted-length strings may be used for computing applicable
     * aggregates; columns marked as <a
     * href="../../../../../concepts/types/#data-handling"
     * target="_top">store-only</a> are unable to be used in grouping or
     * aggregation.
     * <p>
     * The results can be paged via the {@code offset} and {@code limit}
     * parameters. For example, to get 10 groups with the largest counts the
     * inputs would be: limit=10, options={"sort_order":"descending",
     * "sort_by":"value"}.
     * <p>
     * {@code options} can be used to customize behavior of this call e.g.
     * filtering or sorting the results.
     * <p>
     * To group by columns 'x' and 'y' and compute the number of objects within
     * each group, use:  column_names=['x','y','count(*)'].
     * <p>
     * To also compute the sum of 'z' over each group, use:
     * column_names=['x','y','count(*)','sum(z)'].
     * <p>
     * Available <a
     * href="../../../../../concepts/expressions/#aggregate-expressions"
     * target="_top">aggregation functions</a> are: count(*), sum, min, max,
     * avg, mean, stddev, stddev_pop, stddev_samp, var, var_pop, var_samp,
     * arg_min, arg_max and count_distinct.
     * <p>
     * Available grouping functions are <a
     * href="../../../../../concepts/rollup/" target="_top">Rollup</a>, <a
     * href="../../../../../concepts/cube/" target="_top">Cube</a>, and <a
     * href="../../../../../concepts/grouping_sets/" target="_top">Grouping
     * Sets</a>
     * <p>
     * This service also provides support for <a
     * href="../../../../../concepts/pivot/" target="_top">Pivot</a>
     * operations.
     * <p>
     * Filtering on aggregates is supported via expressions using <a
     * href="../../../../../concepts/expressions/#aggregate-expressions"
     * target="_top">aggregation functions</a> supplied to {@code having}.
     * <p>
     * The response is returned as a dynamic schema. For details see: <a
     * href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * <p>
     * If a {@code result_table} name is specified in the {@code options}, the
     * results are stored in a new table with that name--no results are
     * returned in the response.  Both the table name and resulting column
     * names must adhere to <a href="../../../../../concepts/tables/#table"
     * target="_top">standard naming conventions</a>; column/aggregation
     * expressions will need to be aliased.  If the source table's <a
     * href="../../../../../concepts/tables/#shard-keys" target="_top">shard
     * key</a> is used as the grouping column(s) and all result records are
     * selected ({@code offset} is 0 and {@code limit} is -9999), the result
     * table will be sharded, in all other cases it will be replicated.
     * Sorting will properly function only if the result table is replicated or
     * if there is only one processing node and should not be relied upon in
     * other cases.  Not available when any of the values of {@code
     * columnNames} is an unrestricted-length string.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateGroupByResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateGroupByResponse aggregateGroupBy(AggregateGroupByRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawAggregateGroupByResponse actualResponse_ = new RawAggregateGroupByResponse();
        submitRequest("/aggregate/groupby", request, actualResponse_, false);
        AggregateGroupByResponse response_ = new AggregateGroupByResponse();
        response_.setDataType( Type.fromDynamicSchema( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse() ) );
        response_.setData( DynamicTableRecord.transpose( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse(), response_.getDataType() ) );
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Calculates unique combinations (groups) of values for the given columns
     * in a given table or view and computes aggregates on each unique
     * combination. This is somewhat analogous to an SQL-style SELECT...GROUP
     * BY.
     * <p>
     * For aggregation details and examples, see <a
     * href="../../../../../concepts/aggregation/"
     * target="_top">Aggregation</a>.  For limitations, see <a
     * href="../../../../../concepts/aggregation/#limitations"
     * target="_top">Aggregation Limitations</a>.
     * <p>
     * Any column(s) can be grouped on, and all column types except
     * unrestricted-length strings may be used for computing applicable
     * aggregates; columns marked as <a
     * href="../../../../../concepts/types/#data-handling"
     * target="_top">store-only</a> are unable to be used in grouping or
     * aggregation.
     * <p>
     * The results can be paged via the {@code offset} and {@code limit}
     * parameters. For example, to get 10 groups with the largest counts the
     * inputs would be: limit=10, options={"sort_order":"descending",
     * "sort_by":"value"}.
     * <p>
     * {@code options} can be used to customize behavior of this call e.g.
     * filtering or sorting the results.
     * <p>
     * To group by columns 'x' and 'y' and compute the number of objects within
     * each group, use:  column_names=['x','y','count(*)'].
     * <p>
     * To also compute the sum of 'z' over each group, use:
     * column_names=['x','y','count(*)','sum(z)'].
     * <p>
     * Available <a
     * href="../../../../../concepts/expressions/#aggregate-expressions"
     * target="_top">aggregation functions</a> are: count(*), sum, min, max,
     * avg, mean, stddev, stddev_pop, stddev_samp, var, var_pop, var_samp,
     * arg_min, arg_max and count_distinct.
     * <p>
     * Available grouping functions are <a
     * href="../../../../../concepts/rollup/" target="_top">Rollup</a>, <a
     * href="../../../../../concepts/cube/" target="_top">Cube</a>, and <a
     * href="../../../../../concepts/grouping_sets/" target="_top">Grouping
     * Sets</a>
     * <p>
     * This service also provides support for <a
     * href="../../../../../concepts/pivot/" target="_top">Pivot</a>
     * operations.
     * <p>
     * Filtering on aggregates is supported via expressions using <a
     * href="../../../../../concepts/expressions/#aggregate-expressions"
     * target="_top">aggregation functions</a> supplied to {@code having}.
     * <p>
     * The response is returned as a dynamic schema. For details see: <a
     * href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * <p>
     * If a {@code result_table} name is specified in the {@code options}, the
     * results are stored in a new table with that name--no results are
     * returned in the response.  Both the table name and resulting column
     * names must adhere to <a href="../../../../../concepts/tables/#table"
     * target="_top">standard naming conventions</a>; column/aggregation
     * expressions will need to be aliased.  If the source table's <a
     * href="../../../../../concepts/tables/#shard-keys" target="_top">shard
     * key</a> is used as the grouping column(s) and all result records are
     * selected ({@code offset} is 0 and {@code limit} is -9999), the result
     * table will be sharded, in all other cases it will be replicated.
     * Sorting will properly function only if the result table is replicated or
     * if there is only one processing node and should not be relied upon in
     * other cases.  Not available when any of the values of {@code
     * columnNames} is an unrestricted-length string.
     * 
     * @param tableName  Name of an existing table or view on which the
     *                   operation will be performed, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnNames  List of one or more column names, expressions, and
     *                     aggregate expressions.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results).  The default value is 0.The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or
     *               END_OF_SET (-9999) to indicate that the maximum number of
     *               results allowed by the server should be
     *               returned.  The number of records returned will never
     *               exceed the server's own limit, defined by the
     *               <a href="../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration.
     *               Use {@code hasMoreRecords} to see if more records exist in
     *               the result to be fetched, and
     *               {@code offset} & {@code limit} to request subsequent pages
     *               of results.  The default value is -9999.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code result_table}. If {@code
     *                 result_table_persist} is {@code false} (or unspecified),
     *                 then this is always allowed even if the caller does not
     *                 have permission to create tables. The generated name is
     *                 returned in {@code qualified_result_table_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema as part of {@code result_table} and
     *                 use {@link GPUdb#createSchema(String, Map)} to create
     *                 the schema if non-existent]  Name of a schema which is
     *                 to contain the table specified in {@code result_table}.
     *                 If the schema provided is non-existent, it will be
     *                 automatically created.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#EXPRESSION
     *                 EXPRESSION}: Filter expression to apply to the table
     *                 prior to computing the aggregate group by.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#HAVING
     *                 HAVING}: Filter expression to apply to the aggregated
     *                 results.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#SORT_ORDER
     *                 SORT_ORDER}: String indicating how the returned values
     *                 should be sorted - ascending or descending.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#ASCENDING
     *                 ASCENDING}: Indicates that the returned values should be
     *                 sorted in ascending order.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#DESCENDING
     *                 DESCENDING}: Indicates that the returned values should
     *                 be sorted in descending order.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#ASCENDING
     *                 ASCENDING}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#SORT_BY
     *                 SORT_BY}: String determining how the results are sorted.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#KEY
     *                 KEY}: Indicates that the returned values should be
     *                 sorted by key, which corresponds to the grouping
     *                 columns. If you have multiple grouping columns (and are
     *                 sorting by key), it will first sort the first grouping
     *                 column, then the second grouping column, etc.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#VALUE
     *                 VALUE}: Indicates that the returned values should be
     *                 sorted by value, which corresponds to the aggregates. If
     *                 you have multiple aggregates (and are sorting by value),
     *                 it will first sort by the first aggregate, then the
     *                 second aggregate, etc.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#VALUE
     *                 VALUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#STRATEGY_DEFINITION
     *                 STRATEGY_DEFINITION}: The <a
     *                 href="../../../../../rm/concepts/#tier-strategies"
     *                 target="_top">tier strategy</a> for the table and its
     *                 columns.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#RESULT_TABLE
     *                 RESULT_TABLE}: The name of a table used to store the
     *                 results, in [schema_name.]table_name format, using
     *                 standard <a
     *                 href="../../../../../concepts/tables/#table-name-resolution"
     *                 target="_top">name resolution rules</a> and meeting <a
     *                 href="../../../../../concepts/tables/#table-naming-criteria"
     *                 target="_top">table naming criteria</a>.  Column names
     *                 (group-by and aggregate fields) need to be given aliases
     *                 e.g. ["FChar256 as fchar256", "sum(FDouble) as sfd"].
     *                 If present, no results are returned in the response.
     *                 This option is not available if one of the grouping
     *                 attributes is an unrestricted string (i.e.; not charN)
     *                 type.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#RESULT_TABLE_PERSIST
     *                 RESULT_TABLE_PERSIST}: If {@code true}, then the result
     *                 table specified in {@code result_table} will be
     *                 persisted and will not expire unless a {@code ttl} is
     *                 specified.   If {@code false}, then the result table
     *                 will be an in-memory table and will expire unless a
     *                 {@code ttl} is specified otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#RESULT_TABLE_FORCE_REPLICATED
     *                 RESULT_TABLE_FORCE_REPLICATED}: Force the result table
     *                 to be replicated (ignores any sharding). Must be used in
     *                 combination with the {@code result_table} option.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#RESULT_TABLE_GENERATE_PK
     *                 RESULT_TABLE_GENERATE_PK}: If {@code true} then set a
     *                 primary key for the result table. Must be used in
     *                 combination with the {@code result_table} option.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#TTL
     *                 TTL}: Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the table specified in {@code
     *                 result_table}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#CHUNK_SIZE
     *                 CHUNK_SIZE}: Indicates the number of records per chunk
     *                 to be used for the result table. Must be used in
     *                 combination with the {@code result_table} option.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#CREATE_INDEXES
     *                 CREATE_INDEXES}: Comma-separated list of columns on
     *                 which to create indexes on the result table. Must be
     *                 used in combination with the {@code result_table}
     *                 option.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#VIEW_ID
     *                 VIEW_ID}: ID of view of which the result table will be a
     *                 member.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#PIVOT
     *                 PIVOT}: pivot column
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#PIVOT_VALUES
     *                 PIVOT_VALUES}: The value list provided will become the
     *                 column headers in the output. Should be the values from
     *                 the pivot_column.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#GROUPING_SETS
     *                 GROUPING_SETS}: Customize the grouping attribute sets to
     *                 compute the aggregates. These sets can include ROLLUP or
     *                 CUBE operartors. The attribute sets should be enclosed
     *                 in paranthesis and can include composite attributes. All
     *                 attributes specified in the grouping sets must present
     *                 in the groupby attributes.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#ROLLUP
     *                 ROLLUP}: This option is used to specify the multilevel
     *                 aggregates.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateGroupByRequest.Options#CUBE
     *                 CUBE}: This option is used to specify the
     *                 multidimensional aggregates.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateGroupByResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateGroupByResponse aggregateGroupBy(String tableName, List<String> columnNames, long offset, long limit, Map<String, String> options) throws GPUdbException {
        AggregateGroupByRequest actualRequest_ = new AggregateGroupByRequest(tableName, columnNames, offset, limit, null, options);
        RawAggregateGroupByResponse actualResponse_ = new RawAggregateGroupByResponse();
        submitRequest("/aggregate/groupby", actualRequest_, actualResponse_, false);
        AggregateGroupByResponse response_ = new AggregateGroupByResponse();
        response_.setDataType( Type.fromDynamicSchema( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse() ) );
        response_.setData( DynamicTableRecord.transpose( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse(), response_.getDataType() ) );
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Performs a histogram calculation given a table, a column, and an
     * interval function. The {@code interval} is used to produce bins of that
     * size
     * and the result, computed over the records falling within each bin, is
     * returned.
     * For each bin, the start value is inclusive, but the end value is
     * exclusive--except for the very last bin for which the end value is also
     * inclusive.  The value returned for each bin is the number of records in
     * it,
     * except when a column name is provided as a
     * {@code value_column}.  In this latter case the sum of the
     * values corresponding to the {@code value_column} is used as the
     * result instead.  The total number of bins requested cannot exceed
     * 10,000.
     * <p>
     * NOTE:  The Kinetica instance being accessed must be running a CUDA
     * (GPU-based)
     * build to service a request that specifies a {@code value_column}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateHistogramResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateHistogramResponse aggregateHistogram(AggregateHistogramRequest request) throws GPUdbException {
        AggregateHistogramResponse actualResponse_ = new AggregateHistogramResponse();
        submitRequest("/aggregate/histogram", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Performs a histogram calculation given a table, a column, and an
     * interval function. The {@code interval} is used to produce bins of that
     * size
     * and the result, computed over the records falling within each bin, is
     * returned.
     * For each bin, the start value is inclusive, but the end value is
     * exclusive--except for the very last bin for which the end value is also
     * inclusive.  The value returned for each bin is the number of records in
     * it,
     * except when a column name is provided as a
     * {@code value_column}.  In this latter case the sum of the
     * values corresponding to the {@code value_column} is used as the
     * result instead.  The total number of bins requested cannot exceed
     * 10,000.
     * <p>
     * NOTE:  The Kinetica instance being accessed must be running a CUDA
     * (GPU-based)
     * build to service a request that specifies a {@code value_column}.
     * 
     * @param tableName  Name of the table on which the operation will be
     *                   performed. Must be an existing table, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnName  Name of a column or an expression of one or more
     *                    column names over which the histogram will be
     *                    calculated.
     * @param start  Lower end value of the histogram interval, inclusive.
     * @param end  Upper end value of the histogram interval, inclusive.
     * @param interval  The size of each bin within the start and end
     *                  parameters.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateHistogramRequest.Options#VALUE_COLUMN
     *                 VALUE_COLUMN}: The name of the column to use when
     *                 calculating the bin values (values are summed).  The
     *                 column must be a numerical type (int, double, long,
     *                 float).
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateHistogramResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateHistogramResponse aggregateHistogram(String tableName, String columnName, double start, double end, double interval, Map<String, String> options) throws GPUdbException {
        AggregateHistogramRequest actualRequest_ = new AggregateHistogramRequest(tableName, columnName, start, end, interval, options);
        AggregateHistogramResponse actualResponse_ = new AggregateHistogramResponse();
        submitRequest("/aggregate/histogram", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * This endpoint runs the k-means algorithm - a heuristic algorithm
     * that attempts to do k-means clustering.  An ideal k-means clustering
     * algorithm
     * selects k points such that the sum of the mean squared distances of each
     * member
     * of the set to the nearest of the k points is minimized.  The k-means
     * algorithm
     * however does not necessarily produce such an ideal cluster.   It begins
     * with a
     * randomly selected set of k points and then refines the location of the
     * points
     * iteratively and settles to a local minimum.  Various parameters and
     * options are
     * provided to control the heuristic search.
     * <p>
     * NOTE:  The Kinetica instance being accessed must be running a CUDA
     * (GPU-based)
     * build to service this request.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateKMeansResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateKMeansResponse aggregateKMeans(AggregateKMeansRequest request) throws GPUdbException {
        AggregateKMeansResponse actualResponse_ = new AggregateKMeansResponse();
        submitRequest("/aggregate/kmeans", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * This endpoint runs the k-means algorithm - a heuristic algorithm
     * that attempts to do k-means clustering.  An ideal k-means clustering
     * algorithm
     * selects k points such that the sum of the mean squared distances of each
     * member
     * of the set to the nearest of the k points is minimized.  The k-means
     * algorithm
     * however does not necessarily produce such an ideal cluster.   It begins
     * with a
     * randomly selected set of k points and then refines the location of the
     * points
     * iteratively and settles to a local minimum.  Various parameters and
     * options are
     * provided to control the heuristic search.
     * <p>
     * NOTE:  The Kinetica instance being accessed must be running a CUDA
     * (GPU-based)
     * build to service this request.
     * 
     * @param tableName  Name of the table on which the operation will be
     *                   performed. Must be an existing table, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnNames  List of column names on which the operation would be
     *                     performed. If n columns are provided then each of
     *                     the k result points will have n dimensions
     *                     corresponding to the n columns.
     * @param k  The number of mean points to be determined by the algorithm.
     * @param tolerance  Stop iterating when the distances between successive
     *                   points is less than the given tolerance.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#WHITEN
     *                 WHITEN}: When set to 1 each of the columns is first
     *                 normalized by its stdv - default is not to whiten.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#MAX_ITERS
     *                 MAX_ITERS}: Number of times to try to hit the tolerance
     *                 limit before giving up - default is 10.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#NUM_TRIES
     *                 NUM_TRIES}: Number of times to run the k-means algorithm
     *                 with a different randomly selected starting points -
     *                 helps avoid local minimum. Default is 1.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code result_table}. If {@code
     *                 result_table_persist} is {@code false} (or unspecified),
     *                 then this is always allowed even if the caller does not
     *                 have permission to create tables. The generated name is
     *                 returned in {@code qualified_result_table_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#RESULT_TABLE
     *                 RESULT_TABLE}: The name of a table used to store the
     *                 results, in [schema_name.]table_name format, using
     *                 standard <a
     *                 href="../../../../../concepts/tables/#table-name-resolution"
     *                 target="_top">name resolution rules</a> and meeting <a
     *                 href="../../../../../concepts/tables/#table-naming-criteria"
     *                 target="_top">table naming criteria</a>.  If this option
     *                 is specified, the results are not returned in the
     *                 response.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#RESULT_TABLE_PERSIST
     *                 RESULT_TABLE_PERSIST}: If {@code true}, then the result
     *                 table specified in {@code result_table} will be
     *                 persisted and will not expire unless a {@code ttl} is
     *                 specified.   If {@code false}, then the result table
     *                 will be an in-memory table and will expire unless a
     *                 {@code ttl} is specified otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateKMeansRequest.Options#TTL
     *                 TTL}: Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the table specified in {@code
     *                 result_table}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateKMeansResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateKMeansResponse aggregateKMeans(String tableName, List<String> columnNames, int k, double tolerance, Map<String, String> options) throws GPUdbException {
        AggregateKMeansRequest actualRequest_ = new AggregateKMeansRequest(tableName, columnNames, k, tolerance, options);
        AggregateKMeansResponse actualResponse_ = new AggregateKMeansResponse();
        submitRequest("/aggregate/kmeans", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates and returns the minimum and maximum values of a particular
     * column in a table.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateMinMaxResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateMinMaxResponse aggregateMinMax(AggregateMinMaxRequest request) throws GPUdbException {
        AggregateMinMaxResponse actualResponse_ = new AggregateMinMaxResponse();
        submitRequest("/aggregate/minmax", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates and returns the minimum and maximum values of a particular
     * column in a table.
     * 
     * @param tableName  Name of the table on which the operation will be
     *                   performed. Must be an existing table, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnName  Name of a column or an expression of one or more
     *                    column on which the min-max will be calculated.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateMinMaxResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateMinMaxResponse aggregateMinMax(String tableName, String columnName, Map<String, String> options) throws GPUdbException {
        AggregateMinMaxRequest actualRequest_ = new AggregateMinMaxRequest(tableName, columnName, options);
        AggregateMinMaxResponse actualResponse_ = new AggregateMinMaxResponse();
        submitRequest("/aggregate/minmax", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates and returns the minimum and maximum x- and y-coordinates
     * of a particular geospatial geometry column in a table.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateMinMaxGeometryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateMinMaxGeometryResponse aggregateMinMaxGeometry(AggregateMinMaxGeometryRequest request) throws GPUdbException {
        AggregateMinMaxGeometryResponse actualResponse_ = new AggregateMinMaxGeometryResponse();
        submitRequest("/aggregate/minmax/geometry", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates and returns the minimum and maximum x- and y-coordinates
     * of a particular geospatial geometry column in a table.
     * 
     * @param tableName  Name of the table on which the operation will be
     *                   performed. Must be an existing table, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnName  Name of a geospatial geometry column on which the
     *                    min-max will be calculated.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateMinMaxGeometryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateMinMaxGeometryResponse aggregateMinMaxGeometry(String tableName, String columnName, Map<String, String> options) throws GPUdbException {
        AggregateMinMaxGeometryRequest actualRequest_ = new AggregateMinMaxGeometryRequest(tableName, columnName, options);
        AggregateMinMaxGeometryResponse actualResponse_ = new AggregateMinMaxGeometryResponse();
        submitRequest("/aggregate/minmax/geometry", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates the requested statistics of the given column(s) in a
     * given table.
     * <p>
     * The available statistics are:
     *   {@code count} (number of total objects),
     *   {@code mean},
     *   {@code stdv} (standard deviation),
     *   {@code variance},
     *   {@code skew},
     *   {@code kurtosis},
     *   {@code sum},
     *   {@code min},
     *   {@code max},
     *   {@code weighted_average},
     *   {@code cardinality} (unique count),
     *   {@code estimated_cardinality},
     *   {@code percentile}, and
     *   {@code percentile_rank}.
     * <p>
     * Estimated cardinality is calculated by using the hyperloglog
     * approximation
     * technique.
     * <p>
     * Percentiles and percentile ranks are approximate and are calculated
     * using the
     * t-digest algorithm. They must include the desired
     * {@code percentile}/{@code percentile_rank}.
     * To compute multiple percentiles each value must be specified separately
     * (i.e.
     * 'percentile(75.0),percentile(99.0),percentile_rank(1234.56),percentile_rank(-5)').
     * <p>
     * A second, comma-separated value can be added to the
     * {@code percentile} statistic to calculate percentile
     * resolution, e.g., a 50th percentile with 200 resolution would be
     * 'percentile(50,200)'.
     * <p>
     * The weighted average statistic requires a weight column to be specified
     * in
     * {@code weight_column_name}.  The weighted average is then
     * defined as the sum of the products of {@code columnName} times the
     * {@code weight_column_name} values divided by the sum of the
     * {@code weight_column_name} values.
     * <p>
     * Additional columns can be used in the calculation of statistics via
     * {@code additional_column_names}.  Values in these columns will
     * be included in the overall aggregate calculation--individual aggregates
     * will not
     * be calculated per additional column.  For instance, requesting the
     * {@code count} & {@code mean} of
     * {@code columnName} x and {@code additional_column_names}
     * y & z, where x holds the numbers 1-10, y holds 11-20, and z holds 21-30,
     * would
     * return the total number of x, y, & z values (30), and the single average
     * value
     * across all x, y, & z values (15.5).
     * <p>
     * The response includes a list of key/value pairs of each statistic
     * requested and
     * its corresponding value.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateStatisticsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateStatisticsResponse aggregateStatistics(AggregateStatisticsRequest request) throws GPUdbException {
        AggregateStatisticsResponse actualResponse_ = new AggregateStatisticsResponse();
        submitRequest("/aggregate/statistics", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates the requested statistics of the given column(s) in a
     * given table.
     * <p>
     * The available statistics are:
     *   {@code count} (number of total objects),
     *   {@code mean},
     *   {@code stdv} (standard deviation),
     *   {@code variance},
     *   {@code skew},
     *   {@code kurtosis},
     *   {@code sum},
     *   {@code min},
     *   {@code max},
     *   {@code weighted_average},
     *   {@code cardinality} (unique count),
     *   {@code estimated_cardinality},
     *   {@code percentile}, and
     *   {@code percentile_rank}.
     * <p>
     * Estimated cardinality is calculated by using the hyperloglog
     * approximation
     * technique.
     * <p>
     * Percentiles and percentile ranks are approximate and are calculated
     * using the
     * t-digest algorithm. They must include the desired
     * {@code percentile}/{@code percentile_rank}.
     * To compute multiple percentiles each value must be specified separately
     * (i.e.
     * 'percentile(75.0),percentile(99.0),percentile_rank(1234.56),percentile_rank(-5)').
     * <p>
     * A second, comma-separated value can be added to the
     * {@code percentile} statistic to calculate percentile
     * resolution, e.g., a 50th percentile with 200 resolution would be
     * 'percentile(50,200)'.
     * <p>
     * The weighted average statistic requires a weight column to be specified
     * in
     * {@code weight_column_name}.  The weighted average is then
     * defined as the sum of the products of {@code columnName} times the
     * {@code weight_column_name} values divided by the sum of the
     * {@code weight_column_name} values.
     * <p>
     * Additional columns can be used in the calculation of statistics via
     * {@code additional_column_names}.  Values in these columns will
     * be included in the overall aggregate calculation--individual aggregates
     * will not
     * be calculated per additional column.  For instance, requesting the
     * {@code count} & {@code mean} of
     * {@code columnName} x and {@code additional_column_names}
     * y & z, where x holds the numbers 1-10, y holds 11-20, and z holds 21-30,
     * would
     * return the total number of x, y, & z values (30), and the single average
     * value
     * across all x, y, & z values (15.5).
     * <p>
     * The response includes a list of key/value pairs of each statistic
     * requested and
     * its corresponding value.
     * 
     * @param tableName  Name of the table on which the statistics operation
     *                   will be performed, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnName  Name of the primary column for which the statistics
     *                    are to be calculated.
     * @param stats  Comma separated list of the statistics to calculate, e.g.
     *               "sum,mean".
     *               Supported values:
     *               <ul>
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#COUNT
     *               COUNT}: Number of objects (independent of the given
     *               column(s)).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#MEAN
     *               MEAN}: Arithmetic mean (average), equivalent to sum/count.
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#STDV
     *               STDV}: Sample standard deviation (denominator is count-1).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#VARIANCE
     *               VARIANCE}: Unbiased sample variance (denominator is
     *               count-1).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#SKEW
     *               SKEW}: Skewness (third standardized moment).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#KURTOSIS
     *               KURTOSIS}: Kurtosis (fourth standardized moment).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#SUM
     *               SUM}: Sum of all values in the column(s).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#MIN
     *               MIN}: Minimum value of the column(s).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#MAX
     *               MAX}: Maximum value of the column(s).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#WEIGHTED_AVERAGE
     *               WEIGHTED_AVERAGE}: Weighted arithmetic mean (using the
     *               option {@code weight_column_name} as the weighting
     *               column).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#CARDINALITY
     *               CARDINALITY}: Number of unique values in the column(s).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#ESTIMATED_CARDINALITY
     *               ESTIMATED_CARDINALITY}: Estimate (via hyperloglog
     *               technique) of the number of unique values in the
     *               column(s).
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#PERCENTILE
     *               PERCENTILE}: Estimate (via t-digest) of the given
     *               percentile of the column(s) (percentile(50.0) will be an
     *               approximation of the median). Add a second,
     *               comma-separated value to calculate percentile resolution,
     *               e.g., 'percentile(75,150)'
     *                       <li> {@link
     *               com.gpudb.protocol.AggregateStatisticsRequest.Stats#PERCENTILE_RANK
     *               PERCENTILE_RANK}: Estimate (via t-digest) of the
     *               percentile rank of the given value in the column(s) (if
     *               the given value is the median of the column(s),
     *               percentile_rank(<median>) will return approximately 50.0).
     *               </ul>
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateStatisticsRequest.Options#ADDITIONAL_COLUMN_NAMES
     *                 ADDITIONAL_COLUMN_NAMES}: A list of comma separated
     *                 column names over which statistics can be accumulated
     *                 along with the primary column.  All columns listed and
     *                 {@code columnName} must be of the same type.  Must not
     *                 include the column specified in {@code columnName} and
     *                 no column can be listed twice.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateStatisticsRequest.Options#WEIGHT_COLUMN_NAME
     *                 WEIGHT_COLUMN_NAME}: Name of column used as weighting
     *                 attribute for the weighted average statistic.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateStatisticsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateStatisticsResponse aggregateStatistics(String tableName, String columnName, String stats, Map<String, String> options) throws GPUdbException {
        AggregateStatisticsRequest actualRequest_ = new AggregateStatisticsRequest(tableName, columnName, stats, options);
        AggregateStatisticsResponse actualResponse_ = new AggregateStatisticsResponse();
        submitRequest("/aggregate/statistics", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Divides the given set into bins and calculates statistics of the
     * values of a value-column in each bin.  The bins are based on the values
     * of a
     * given binning-column.  The statistics that may be requested are mean,
     * stdv
     * (standard deviation), variance, skew, kurtosis, sum, min, max, first,
     * last and
     * weighted average. In addition to the requested statistics the count of
     * total
     * samples in each bin is returned. This counts vector is just the
     * histogram of the
     * column used to divide the set members into bins. The weighted average
     * statistic
     * requires a weight column to be specified in
     * {@code weight_column_name}. The weighted average is then
     * defined as the sum of the products of the value column times the weight
     * column
     * divided by the sum of the weight column.
     * <p>
     * There are two methods for binning the set members. In the first, which
     * can be
     * used for numeric valued binning-columns, a min, max and interval are
     * specified.
     * The number of bins, nbins, is the integer upper bound of
     * (max-min)/interval.
     * Values that fall in the range [min+n*interval,min+(n+1)*interval) are
     * placed in
     * the nth bin where n ranges from 0..nbin-2. The final bin is
     * [min+(nbin-1)*interval,max]. In the second method,
     * {@code bin_values} specifies a list of binning column values.
     * Binning-columns whose value matches the nth member of the
     * {@code bin_values} list are placed in the nth bin. When a list
     * is provided, the binning-column must be of type string or int.
     * <p>
     * NOTE:  The Kinetica instance being accessed must be running a CUDA
     * (GPU-based)
     * build to service this request.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateStatisticsByRangeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateStatisticsByRangeResponse aggregateStatisticsByRange(AggregateStatisticsByRangeRequest request) throws GPUdbException {
        AggregateStatisticsByRangeResponse actualResponse_ = new AggregateStatisticsByRangeResponse();
        submitRequest("/aggregate/statistics/byrange", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Divides the given set into bins and calculates statistics of the
     * values of a value-column in each bin.  The bins are based on the values
     * of a
     * given binning-column.  The statistics that may be requested are mean,
     * stdv
     * (standard deviation), variance, skew, kurtosis, sum, min, max, first,
     * last and
     * weighted average. In addition to the requested statistics the count of
     * total
     * samples in each bin is returned. This counts vector is just the
     * histogram of the
     * column used to divide the set members into bins. The weighted average
     * statistic
     * requires a weight column to be specified in
     * {@code weight_column_name}. The weighted average is then
     * defined as the sum of the products of the value column times the weight
     * column
     * divided by the sum of the weight column.
     * <p>
     * There are two methods for binning the set members. In the first, which
     * can be
     * used for numeric valued binning-columns, a min, max and interval are
     * specified.
     * The number of bins, nbins, is the integer upper bound of
     * (max-min)/interval.
     * Values that fall in the range [min+n*interval,min+(n+1)*interval) are
     * placed in
     * the nth bin where n ranges from 0..nbin-2. The final bin is
     * [min+(nbin-1)*interval,max]. In the second method,
     * {@code bin_values} specifies a list of binning column values.
     * Binning-columns whose value matches the nth member of the
     * {@code bin_values} list are placed in the nth bin. When a list
     * is provided, the binning-column must be of type string or int.
     * <p>
     * NOTE:  The Kinetica instance being accessed must be running a CUDA
     * (GPU-based)
     * build to service this request.
     * 
     * @param tableName  Name of the table on which the ranged-statistics
     *                   operation will be performed, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param selectExpression  For a non-empty expression statistics are
     *                          calculated for those records for which the
     *                          expression is true.  The default value is ''.
     * @param columnName  Name of the binning-column used to divide the set
     *                    samples into bins.
     * @param valueColumnName  Name of the value-column for which statistics
     *                         are to be computed.
     * @param stats  A string of comma separated list of the statistics to
     *               calculate, e.g. 'sum,mean'. Available statistics: mean,
     *               stdv (standard deviation), variance, skew, kurtosis, sum.
     * @param start  The lower bound of the binning-column.
     * @param end  The upper bound of the binning-column.
     * @param interval  The interval of a bin. Set members fall into bin i if
     *                  the binning-column falls in the range
     *                  [start+interval*i, start+interval*(i+1)).
     * @param options  Map of optional parameters:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateStatisticsByRangeRequest.Options#ADDITIONAL_COLUMN_NAMES
     *                 ADDITIONAL_COLUMN_NAMES}: A list of comma separated
     *                 value-column names over which statistics can be
     *                 accumulated along with the primary value_column.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateStatisticsByRangeRequest.Options#BIN_VALUES
     *                 BIN_VALUES}: A list of comma separated binning-column
     *                 values. Values that match the nth bin_values value are
     *                 placed in the nth bin.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateStatisticsByRangeRequest.Options#WEIGHT_COLUMN_NAME
     *                 WEIGHT_COLUMN_NAME}: Name of the column used as
     *                 weighting column for the weighted_average statistic.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateStatisticsByRangeRequest.Options#ORDER_COLUMN_NAME
     *                 ORDER_COLUMN_NAME}: Name of the column used for
     *                 candlestick charting techniques.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateStatisticsByRangeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateStatisticsByRangeResponse aggregateStatisticsByRange(String tableName, String selectExpression, String columnName, String valueColumnName, String stats, double start, double end, double interval, Map<String, String> options) throws GPUdbException {
        AggregateStatisticsByRangeRequest actualRequest_ = new AggregateStatisticsByRangeRequest(tableName, selectExpression, columnName, valueColumnName, stats, start, end, interval, options);
        AggregateStatisticsByRangeResponse actualResponse_ = new AggregateStatisticsByRangeResponse();
        submitRequest("/aggregate/statistics/byrange", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Returns all the unique values from a particular column
     * (specified by {@code columnName}) of a particular table or view
     * (specified by {@code tableName}). If {@code columnName} is a numeric
     * column,
     * the values will be in {@code binaryEncodedResponse}. Otherwise if
     * {@code columnName} is a string column, the values will be in
     * {@code jsonEncodedResponse}.  The results can be paged via {@code
     * offset}
     * and {@code limit} parameters.
     * <p>
     * Columns marked as <a href="../../../../../concepts/types/#data-handling"
     * target="_top">store-only</a>
     * are unable to be used with this function.
     * <p>
     * To get the first 10 unique values sorted in descending order {@code
     * options}
     * would be::
     * <p>
     * {"limit":"10","sort_order":"descending"}.
     * <p>
     * The response is returned as a dynamic schema. For details see:
     * <a href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * <p>
     * If a {@code result_table} name is specified in the
     * {@code options}, the results are stored in a new table with that
     * name--no
     * results are returned in the response.  Both the table name and resulting
     * column
     * name must adhere to
     * <a href="../../../../../concepts/tables/#table" target="_top">standard
     * naming conventions</a>;
     * any column expression will need to be aliased.  If the source table's
     * <a href="../../../../../concepts/tables/#shard-keys" target="_top">shard
     * key</a> is used as the
     * {@code columnName}, the result table will be sharded, in all other cases
     * it
     * will be replicated.  Sorting will properly function only if the result
     * table is
     * replicated or if there is only one processing node and should not be
     * relied upon
     * in other cases.  Not available if the value of {@code columnName} is an
     * unrestricted-length string.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RawAggregateUniqueResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RawAggregateUniqueResponse aggregateUniqueRaw(AggregateUniqueRequest request) throws GPUdbException {
        RawAggregateUniqueResponse actualResponse_ = new RawAggregateUniqueResponse();
        submitRequest("/aggregate/unique", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Returns all the unique values from a particular column
     * (specified by {@code columnName}) of a particular table or view
     * (specified by {@code tableName}). If {@code columnName} is a numeric
     * column,
     * the values will be in {@code binaryEncodedResponse}. Otherwise if
     * {@code columnName} is a string column, the values will be in
     * {@code jsonEncodedResponse}.  The results can be paged via {@code
     * offset}
     * and {@code limit} parameters.
     * <p>
     * Columns marked as <a href="../../../../../concepts/types/#data-handling"
     * target="_top">store-only</a>
     * are unable to be used with this function.
     * <p>
     * To get the first 10 unique values sorted in descending order {@code
     * options}
     * would be::
     * <p>
     * {"limit":"10","sort_order":"descending"}.
     * <p>
     * The response is returned as a dynamic schema. For details see:
     * <a href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * <p>
     * If a {@code result_table} name is specified in the
     * {@code options}, the results are stored in a new table with that
     * name--no
     * results are returned in the response.  Both the table name and resulting
     * column
     * name must adhere to
     * <a href="../../../../../concepts/tables/#table" target="_top">standard
     * naming conventions</a>;
     * any column expression will need to be aliased.  If the source table's
     * <a href="../../../../../concepts/tables/#shard-keys" target="_top">shard
     * key</a> is used as the
     * {@code columnName}, the result table will be sharded, in all other cases
     * it
     * will be replicated.  Sorting will properly function only if the result
     * table is
     * replicated or if there is only one processing node and should not be
     * relied upon
     * in other cases.  Not available if the value of {@code columnName} is an
     * unrestricted-length string.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateUniqueResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateUniqueResponse aggregateUnique(AggregateUniqueRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawAggregateUniqueResponse actualResponse_ = new RawAggregateUniqueResponse();
        submitRequest("/aggregate/unique", request, actualResponse_, false);
        AggregateUniqueResponse response_ = new AggregateUniqueResponse();
        response_.setTableName(actualResponse_.getTableName());
        response_.setDataType( Type.fromDynamicSchema( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse() ) );
        response_.setData( DynamicTableRecord.transpose( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse(), response_.getDataType() ) );
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Returns all the unique values from a particular column
     * (specified by {@code columnName}) of a particular table or view
     * (specified by {@code tableName}). If {@code columnName} is a numeric
     * column,
     * the values will be in {@code binaryEncodedResponse}. Otherwise if
     * {@code columnName} is a string column, the values will be in
     * {@code jsonEncodedResponse}.  The results can be paged via {@code
     * offset}
     * and {@code limit} parameters.
     * <p>
     * Columns marked as <a href="../../../../../concepts/types/#data-handling"
     * target="_top">store-only</a>
     * are unable to be used with this function.
     * <p>
     * To get the first 10 unique values sorted in descending order {@code
     * options}
     * would be::
     * <p>
     * {"limit":"10","sort_order":"descending"}.
     * <p>
     * The response is returned as a dynamic schema. For details see:
     * <a href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * <p>
     * If a {@code result_table} name is specified in the
     * {@code options}, the results are stored in a new table with that
     * name--no
     * results are returned in the response.  Both the table name and resulting
     * column
     * name must adhere to
     * <a href="../../../../../concepts/tables/#table" target="_top">standard
     * naming conventions</a>;
     * any column expression will need to be aliased.  If the source table's
     * <a href="../../../../../concepts/tables/#shard-keys" target="_top">shard
     * key</a> is used as the
     * {@code columnName}, the result table will be sharded, in all other cases
     * it
     * will be replicated.  Sorting will properly function only if the result
     * table is
     * replicated or if there is only one processing node and should not be
     * relied upon
     * in other cases.  Not available if the value of {@code columnName} is an
     * unrestricted-length string.
     * 
     * @param tableName  Name of an existing table or view on which the
     *                   operation will be performed, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnName  Name of the column or an expression containing one or
     *                    more column names on which the unique function would
     *                    be applied.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results).  The default value is 0.The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or
     *               END_OF_SET (-9999) to indicate that the maximum number of
     *               results allowed by the server should be
     *               returned.  The number of records returned will never
     *               exceed the server's own limit, defined by the
     *               <a href="../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration.
     *               Use {@code hasMoreRecords} to see if more records exist in
     *               the result to be fetched, and
     *               {@code offset} & {@code limit} to request subsequent pages
     *               of results.  The default value is -9999.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code result_table}. If {@code
     *                 result_table_persist} is {@code false} (or unspecified),
     *                 then this is always allowed even if the caller does not
     *                 have permission to create tables. The generated name is
     *                 returned in {@code qualified_result_table_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema as part of {@code result_table} and
     *                 use {@link GPUdb#createSchema(String, Map)} to create
     *                 the schema if non-existent]  Name of a schema which is
     *                 to contain the table specified in {@code result_table}.
     *                 If the schema provided is non-existent, it will be
     *                 automatically created.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#EXPRESSION
     *                 EXPRESSION}: Optional filter expression to apply to the
     *                 table.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#SORT_ORDER
     *                 SORT_ORDER}: String indicating how the returned values
     *                 should be sorted.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#ASCENDING
     *                 ASCENDING}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#DESCENDING
     *                 DESCENDING}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#ASCENDING
     *                 ASCENDING}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#RESULT_TABLE
     *                 RESULT_TABLE}: The name of the table used to store the
     *                 results, in [schema_name.]table_name format, using
     *                 standard <a
     *                 href="../../../../../concepts/tables/#table-name-resolution"
     *                 target="_top">name resolution rules</a> and meeting <a
     *                 href="../../../../../concepts/tables/#table-naming-criteria"
     *                 target="_top">table naming criteria</a>.  If present, no
     *                 results are returned in the response.  Not available if
     *                 {@code columnName} is an unrestricted-length string.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#RESULT_TABLE_PERSIST
     *                 RESULT_TABLE_PERSIST}: If {@code true}, then the result
     *                 table specified in {@code result_table} will be
     *                 persisted and will not expire unless a {@code ttl} is
     *                 specified.   If {@code false}, then the result table
     *                 will be an in-memory table and will expire unless a
     *                 {@code ttl} is specified otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#RESULT_TABLE_FORCE_REPLICATED
     *                 RESULT_TABLE_FORCE_REPLICATED}: Force the result table
     *                 to be replicated (ignores any sharding). Must be used in
     *                 combination with the {@code result_table} option.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#RESULT_TABLE_GENERATE_PK
     *                 RESULT_TABLE_GENERATE_PK}: If {@code true} then set a
     *                 primary key for the result table. Must be used in
     *                 combination with the {@code result_table} option.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#TTL
     *                 TTL}: Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the table specified in {@code
     *                 result_table}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#CHUNK_SIZE
     *                 CHUNK_SIZE}: Indicates the number of records per chunk
     *                 to be used for the result table. Must be used in
     *                 combination with the {@code result_table} option.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUniqueRequest.Options#VIEW_ID
     *                 VIEW_ID}: ID of view of which the result table will be a
     *                 member.  The default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateUniqueResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateUniqueResponse aggregateUnique(String tableName, String columnName, long offset, long limit, Map<String, String> options) throws GPUdbException {
        AggregateUniqueRequest actualRequest_ = new AggregateUniqueRequest(tableName, columnName, offset, limit, null, options);
        RawAggregateUniqueResponse actualResponse_ = new RawAggregateUniqueResponse();
        submitRequest("/aggregate/unique", actualRequest_, actualResponse_, false);
        AggregateUniqueResponse response_ = new AggregateUniqueResponse();
        response_.setTableName(actualResponse_.getTableName());
        response_.setDataType( Type.fromDynamicSchema( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse() ) );
        response_.setData( DynamicTableRecord.transpose( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse(), response_.getDataType() ) );
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Rotate the column values into rows values.
     * <p>
     * For unpivot details and examples, see
     * <a href="../../../../../concepts/unpivot/" target="_top">Unpivot</a>.
     * For limitations, see
     * <a href="../../../../../concepts/unpivot/#limitations"
     * target="_top">Unpivot Limitations</a>.
     * <p>
     * Unpivot is used to normalize tables that are built for cross tabular
     * reporting
     * purposes. The unpivot operator rotates the column values for all the
     * pivoted
     * columns. A variable column, value column and all columns from the source
     * table
     * except the unpivot columns are projected into the result table. The
     * variable
     * column and value columns in the result table indicate the pivoted column
     * name
     * and values respectively.
     * <p>
     * The response is returned as a dynamic schema. For details see:
     * <a href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RawAggregateUnpivotResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RawAggregateUnpivotResponse aggregateUnpivotRaw(AggregateUnpivotRequest request) throws GPUdbException {
        RawAggregateUnpivotResponse actualResponse_ = new RawAggregateUnpivotResponse();
        submitRequest("/aggregate/unpivot", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Rotate the column values into rows values.
     * <p>
     * For unpivot details and examples, see
     * <a href="../../../../../concepts/unpivot/" target="_top">Unpivot</a>.
     * For limitations, see
     * <a href="../../../../../concepts/unpivot/#limitations"
     * target="_top">Unpivot Limitations</a>.
     * <p>
     * Unpivot is used to normalize tables that are built for cross tabular
     * reporting
     * purposes. The unpivot operator rotates the column values for all the
     * pivoted
     * columns. A variable column, value column and all columns from the source
     * table
     * except the unpivot columns are projected into the result table. The
     * variable
     * column and value columns in the result table indicate the pivoted column
     * name
     * and values respectively.
     * <p>
     * The response is returned as a dynamic schema. For details see:
     * <a href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateUnpivotResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateUnpivotResponse aggregateUnpivot(AggregateUnpivotRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawAggregateUnpivotResponse actualResponse_ = new RawAggregateUnpivotResponse();
        submitRequest("/aggregate/unpivot", request, actualResponse_, false);
        AggregateUnpivotResponse response_ = new AggregateUnpivotResponse();
        response_.setTableName(actualResponse_.getTableName());
        response_.setDataType( Type.fromDynamicSchema( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse() ) );
        response_.setData( DynamicTableRecord.transpose( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse(), response_.getDataType() ) );
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Rotate the column values into rows values.
     * <p>
     * For unpivot details and examples, see
     * <a href="../../../../../concepts/unpivot/" target="_top">Unpivot</a>.
     * For limitations, see
     * <a href="../../../../../concepts/unpivot/#limitations"
     * target="_top">Unpivot Limitations</a>.
     * <p>
     * Unpivot is used to normalize tables that are built for cross tabular
     * reporting
     * purposes. The unpivot operator rotates the column values for all the
     * pivoted
     * columns. A variable column, value column and all columns from the source
     * table
     * except the unpivot columns are projected into the result table. The
     * variable
     * column and value columns in the result table indicate the pivoted column
     * name
     * and values respectively.
     * <p>
     * The response is returned as a dynamic schema. For details see:
     * <a href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * 
     * @param tableName  Name of the table on which the operation will be
     *                   performed. Must be an existing table/view, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnNames  List of column names or expressions. A wildcard '*'
     *                     can be used to include all the non-pivoted columns
     *                     from the source table.
     * @param variableColumnName  Specifies the variable/parameter column name.
     *                            The default value is ''.
     * @param valueColumnName  Specifies the value column name.  The default
     *                         value is ''.
     * @param pivotedColumns  List of one or more values typically the column
     *                        names of the input table. All the columns in the
     *                        source table must have the same data type.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code result_table}. If {@code
     *                 result_table_persist} is {@code false} (or unspecified),
     *                 then this is always allowed even if the caller does not
     *                 have permission to create tables. The generated name is
     *                 returned in {@code qualified_result_table_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema as part of {@code result_table} and
     *                 use {@link GPUdb#createSchema(String, Map)} to create
     *                 the schema if non-existent]  Name of a schema which is
     *                 to contain the table specified in {@code result_table}.
     *                 If the schema is non-existent, it will be automatically
     *                 created.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#RESULT_TABLE
     *                 RESULT_TABLE}: The name of a table used to store the
     *                 results, in [schema_name.]table_name format, using
     *                 standard <a
     *                 href="../../../../../concepts/tables/#table-name-resolution"
     *                 target="_top">name resolution rules</a> and meeting <a
     *                 href="../../../../../concepts/tables/#table-naming-criteria"
     *                 target="_top">table naming criteria</a>. If present, no
     *                 results are returned in the response.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#RESULT_TABLE_PERSIST
     *                 RESULT_TABLE_PERSIST}: If {@code true}, then the result
     *                 table specified in {@code result_table} will be
     *                 persisted and will not expire unless a {@code ttl} is
     *                 specified.   If {@code false}, then the result table
     *                 will be an in-memory table and will expire unless a
     *                 {@code ttl} is specified otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#EXPRESSION
     *                 EXPRESSION}: Filter expression to apply to the table
     *                 prior to unpivot processing.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#ORDER_BY
     *                 ORDER_BY}: Comma-separated list of the columns to be
     *                 sorted by; e.g. 'timestamp asc, x desc'.  The columns
     *                 specified must be present in input table.  If any alias
     *                 is given for any column name, the alias must be used,
     *                 rather than the original column name.  The default value
     *                 is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#CHUNK_SIZE
     *                 CHUNK_SIZE}: Indicates the number of records per chunk
     *                 to be used for the result table. Must be used in
     *                 combination with the {@code result_table} option.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#LIMIT
     *                 LIMIT}: The number of records to keep.  The default
     *                 value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#TTL
     *                 TTL}: Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the table specified in {@code
     *                 result_table}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#VIEW_ID
     *                 VIEW_ID}: view this result table is part of.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#CREATE_INDEXES
     *                 CREATE_INDEXES}: Comma-separated list of columns on
     *                 which to create indexes on the table specified in {@code
     *                 result_table}. The columns specified must be present in
     *                 output column names.  If any alias is given for any
     *                 column name, the alias must be used, rather than the
     *                 original column name.
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#RESULT_TABLE_FORCE_REPLICATED
     *                 RESULT_TABLE_FORCE_REPLICATED}: Force the result table
     *                 to be replicated (ignores any sharding). Must be used in
     *                 combination with the {@code result_table} option.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AggregateUnpivotRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AggregateUnpivotResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AggregateUnpivotResponse aggregateUnpivot(String tableName, List<String> columnNames, String variableColumnName, String valueColumnName, List<String> pivotedColumns, Map<String, String> options) throws GPUdbException {
        AggregateUnpivotRequest actualRequest_ = new AggregateUnpivotRequest(tableName, columnNames, variableColumnName, valueColumnName, pivotedColumns, null, options);
        RawAggregateUnpivotResponse actualResponse_ = new RawAggregateUnpivotResponse();
        submitRequest("/aggregate/unpivot", actualRequest_, actualResponse_, false);
        AggregateUnpivotResponse response_ = new AggregateUnpivotResponse();
        response_.setTableName(actualResponse_.getTableName());
        response_.setDataType( Type.fromDynamicSchema( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse() ) );
        response_.setData( DynamicTableRecord.transpose( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse(), response_.getDataType() ) );
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Alter the properties of an existing <a
     * href="../../../../../concepts/credentials/"
     * target="_top">credential</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterCredentialResponse alterCredential(AlterCredentialRequest request) throws GPUdbException {
        AlterCredentialResponse actualResponse_ = new AlterCredentialResponse();
        submitRequest("/alter/credential", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alter the properties of an existing <a
     * href="../../../../../concepts/credentials/"
     * target="_top">credential</a>.
     * 
     * @param credentialName  Name of the credential to be altered. Must be an
     *                        existing credential.
     * @param credentialUpdatesMap  Map containing the properties of the
     *                              credential to be updated. Error if empty.
     *                              <ul>
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#TYPE
     *                              TYPE}: New type for the credential.
     *                              Supported values:
     *                              <ul>
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#AWS_ACCESS_KEY
     *                              AWS_ACCESS_KEY}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#AWS_IAM_ROLE
     *                              AWS_IAM_ROLE}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#AZURE_AD
     *                              AZURE_AD}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#AZURE_OAUTH
     *                              AZURE_OAUTH}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#AZURE_SAS
     *                              AZURE_SAS}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#AZURE_STORAGE_KEY
     *                              AZURE_STORAGE_KEY}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#DOCKER
     *                              DOCKER}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#GCS_SERVICE_ACCOUNT_ID
     *                              GCS_SERVICE_ACCOUNT_ID}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#GCS_SERVICE_ACCOUNT_KEYS
     *                              GCS_SERVICE_ACCOUNT_KEYS}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#HDFS
     *                              HDFS}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#KAFKA
     *                              KAFKA}
     *                              </ul>
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#IDENTITY
     *                              IDENTITY}: New user for the credential
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#SECRET
     *                              SECRET}: New password for the credential
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterCredentialRequest.CredentialUpdatesMap#SCHEMA_NAME
     *                              SCHEMA_NAME}: Updates the schema name.  If
     *                              {@code schema_name}
     *                              doesn't exist, an error will be thrown. If
     *                              {@code schema_name} is empty, then the
     *                              user's
     *                              default schema will be used.
     *                              </ul>
     * @param options  Optional parameters.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterCredentialResponse alterCredential(String credentialName, Map<String, String> credentialUpdatesMap, Map<String, String> options) throws GPUdbException {
        AlterCredentialRequest actualRequest_ = new AlterCredentialRequest(credentialName, credentialUpdatesMap, options);
        AlterCredentialResponse actualResponse_ = new AlterCredentialResponse();
        submitRequest("/alter/credential", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters the properties of an existing <a
     * href="../../../../../concepts/data_sinks/" target="_top">data sink</a>
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterDatasinkResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterDatasinkResponse alterDatasink(AlterDatasinkRequest request) throws GPUdbException {
        AlterDatasinkResponse actualResponse_ = new AlterDatasinkResponse();
        submitRequest("/alter/datasink", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters the properties of an existing <a
     * href="../../../../../concepts/data_sinks/" target="_top">data sink</a>
     * 
     * @param name  Name of the data sink to be altered. Must be an existing
     *              data sink.
     * @param datasinkUpdatesMap  Map containing the properties of the data
     *                            sink to be updated. Error if empty.
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#DESTINATION
     *                            DESTINATION}: Destination for the output data
     *                            in format 'destination_type://path[:port]'.
     *                            Supported destination types are 'http',
     *                            'https' and 'kafka'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#CONNECTION_TIMEOUT
     *                            CONNECTION_TIMEOUT}: Timeout in seconds for
     *                            connecting to this sink
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#WAIT_TIMEOUT
     *                            WAIT_TIMEOUT}: Timeout in seconds for waiting
     *                            for a response from this sink
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#CREDENTIAL
     *                            CREDENTIAL}: Name of the <a
     *                            href="../../../../../concepts/credentials/"
     *                            target="_top">credential</a> object to be
     *                            used in this data sink
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#S3_BUCKET_NAME
     *                            S3_BUCKET_NAME}: Name of the Amazon S3 bucket
     *                            to use as the data sink
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#S3_REGION
     *                            S3_REGION}: Name of the Amazon S3 region
     *                            where the given bucket is located
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#S3_AWS_ROLE_ARN
     *                            S3_AWS_ROLE_ARN}: Amazon IAM Role ARN which
     *                            has required S3 permissions that can be
     *                            assumed for the given S3 IAM user
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#HDFS_KERBEROS_KEYTAB
     *                            HDFS_KERBEROS_KEYTAB}: Kerberos keytab file
     *                            location for the given HDFS user.  This may
     *                            be a KIFS file.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#HDFS_DELEGATION_TOKEN
     *                            HDFS_DELEGATION_TOKEN}: Delegation token for
     *                            the given HDFS user
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#HDFS_USE_KERBEROS
     *                            HDFS_USE_KERBEROS}: Use kerberos
     *                            authentication for the given HDFS cluster
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#AZURE_STORAGE_ACCOUNT_NAME
     *                            AZURE_STORAGE_ACCOUNT_NAME}: Name of the
     *                            Azure storage account to use as the data
     *                            sink, this is valid only if tenant_id is
     *                            specified
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#AZURE_CONTAINER_NAME
     *                            AZURE_CONTAINER_NAME}: Name of the Azure
     *                            storage container to use as the data sink
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#AZURE_TENANT_ID
     *                            AZURE_TENANT_ID}: Active Directory tenant ID
     *                            (or directory ID)
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#AZURE_SAS_TOKEN
     *                            AZURE_SAS_TOKEN}: Shared access signature
     *                            token for Azure storage account to use as the
     *                            data sink
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#AZURE_OAUTH_TOKEN
     *                            AZURE_OAUTH_TOKEN}: Oauth token to access
     *                            given storage container
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#GCS_BUCKET_NAME
     *                            GCS_BUCKET_NAME}: Name of the Google Cloud
     *                            Storage bucket to use as the data sink
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#GCS_PROJECT_ID
     *                            GCS_PROJECT_ID}: Name of the Google Cloud
     *                            project to use as the data sink
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#GCS_SERVICE_ACCOUNT_KEYS
     *                            GCS_SERVICE_ACCOUNT_KEYS}: Google Cloud
     *                            service account keys to use for
     *                            authenticating the data sink
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#KAFKA_URL
     *                            KAFKA_URL}: The publicly-accessible full path
     *                            URL to the kafka broker, e.g.,
     *                            'http://172.123.45.67:9300'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#KAFKA_TOPIC_NAME
     *                            KAFKA_TOPIC_NAME}: Name of the Kafka topic to
     *                            use for this data sink, if it references a
     *                            Kafka broker
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#ANONYMOUS
     *                            ANONYMOUS}: Create an anonymous connection to
     *                            the storage provider--DEPRECATED: this is now
     *                            the default.  Specify use_managed_credentials
     *                            for non-anonymous connection
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#TRUE
     *                            TRUE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#USE_MANAGED_CREDENTIALS
     *                            USE_MANAGED_CREDENTIALS}: When no credentials
     *                            are supplied, we use anonymous access by
     *                            default.  If this is set, we will use cloud
     *                            provider user settings.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#USE_HTTPS
     *                            USE_HTTPS}: Use https to connect to datasink
     *                            if true, otherwise use http
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#TRUE
     *                            TRUE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#MAX_BATCH_SIZE
     *                            MAX_BATCH_SIZE}: Maximum number of records
     *                            per notification message.  The default value
     *                            is '1'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#MAX_MESSAGE_SIZE
     *                            MAX_MESSAGE_SIZE}: Maximum size in bytes of
     *                            each notification message.  The default value
     *                            is '1000000'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#JSON_FORMAT
     *                            JSON_FORMAT}: The desired format of JSON
     *                            encoded notifications message.
     *                            If {@code nested}, records are returned as an
     *                            array.
     *                            Otherwise, only a single record per messages
     *                            is returned.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#FLAT
     *                            FLAT}
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#NESTED
     *                            NESTED}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#FLAT
     *                            FLAT}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#SKIP_VALIDATION
     *                            SKIP_VALIDATION}: Bypass validation of
     *                            connection to this data sink.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterDatasinkRequest.DatasinkUpdatesMap#SCHEMA_NAME
     *                            SCHEMA_NAME}: Updates the schema name.  If
     *                            {@code schema_name}
     *                            doesn't exist, an error will be thrown. If
     *                            {@code schema_name} is empty, then the user's
     *                            default schema will be used.
     *                            </ul>
     * @param options  Optional parameters.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterDatasinkResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterDatasinkResponse alterDatasink(String name, Map<String, String> datasinkUpdatesMap, Map<String, String> options) throws GPUdbException {
        AlterDatasinkRequest actualRequest_ = new AlterDatasinkRequest(name, datasinkUpdatesMap, options);
        AlterDatasinkResponse actualResponse_ = new AlterDatasinkResponse();
        submitRequest("/alter/datasink", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters the properties of an existing <a
     * href="../../../../../concepts/data_sources/" target="_top">data
     * source</a>
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterDatasourceResponse alterDatasource(AlterDatasourceRequest request) throws GPUdbException {
        AlterDatasourceResponse actualResponse_ = new AlterDatasourceResponse();
        submitRequest("/alter/datasource", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters the properties of an existing <a
     * href="../../../../../concepts/data_sources/" target="_top">data
     * source</a>
     * 
     * @param name  Name of the data source to be altered. Must be an existing
     *              data source.
     * @param datasourceUpdatesMap  Map containing the properties of the data
     *                              source to be updated. Error if empty.
     *                              <ul>
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#LOCATION
     *                              LOCATION}: Location of the remote storage
     *                              in
     *                              'storage_provider_type://[storage_path[:storage_port]]'
     *                              format.
     *                              Supported storage provider types are
     *                              'azure','gcs','hdfs','kafka' and 's3'.
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#USER_NAME
     *                              USER_NAME}: Name of the remote system user;
     *                              may be an empty string
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#PASSWORD
     *                              PASSWORD}: Password for the remote system
     *                              user; may be an empty string
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#SKIP_VALIDATION
     *                              SKIP_VALIDATION}: Bypass validation of
     *                              connection to remote source.
     *                              Supported values:
     *                              <ul>
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#TRUE
     *                              TRUE}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#FALSE
     *                              FALSE}
     *                              </ul>
     *                              The default value is {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#FALSE
     *                              FALSE}.
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#CONNECTION_TIMEOUT
     *                              CONNECTION_TIMEOUT}: Timeout in seconds for
     *                              connecting to this storage provider
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#WAIT_TIMEOUT
     *                              WAIT_TIMEOUT}: Timeout in seconds for
     *                              reading from this storage provider
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#CREDENTIAL
     *                              CREDENTIAL}: Name of the <a
     *                              href="../../../../../concepts/credentials"
     *                              target="_top">credential</a> object to be
     *                              used in data source
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#S3_BUCKET_NAME
     *                              S3_BUCKET_NAME}: Name of the Amazon S3
     *                              bucket to use as the data source
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#S3_REGION
     *                              S3_REGION}: Name of the Amazon S3 region
     *                              where the given bucket is located
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#S3_AWS_ROLE_ARN
     *                              S3_AWS_ROLE_ARN}: Amazon IAM Role ARN which
     *                              has required S3 permissions that can be
     *                              assumed for the given S3 IAM user
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#S3_ENCRYPTION_CUSTOMER_ALGORITHM
     *                              S3_ENCRYPTION_CUSTOMER_ALGORITHM}: Customer
     *                              encryption algorithm used encrypting data
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#S3_ENCRYPTION_CUSTOMER_KEY
     *                              S3_ENCRYPTION_CUSTOMER_KEY}: Customer
     *                              encryption key to encrypt or decrypt data
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#HDFS_KERBEROS_KEYTAB
     *                              HDFS_KERBEROS_KEYTAB}: Kerberos keytab file
     *                              location for the given HDFS user.  This may
     *                              be a KIFS file.
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#HDFS_DELEGATION_TOKEN
     *                              HDFS_DELEGATION_TOKEN}: Delegation token
     *                              for the given HDFS user
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#HDFS_USE_KERBEROS
     *                              HDFS_USE_KERBEROS}: Use kerberos
     *                              authentication for the given HDFS cluster
     *                              Supported values:
     *                              <ul>
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#TRUE
     *                              TRUE}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#FALSE
     *                              FALSE}
     *                              </ul>
     *                              The default value is {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#FALSE
     *                              FALSE}.
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#AZURE_STORAGE_ACCOUNT_NAME
     *                              AZURE_STORAGE_ACCOUNT_NAME}: Name of the
     *                              Azure storage account to use as the data
     *                              source, this is valid only if tenant_id is
     *                              specified
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#AZURE_CONTAINER_NAME
     *                              AZURE_CONTAINER_NAME}: Name of the Azure
     *                              storage container to use as the data source
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#AZURE_TENANT_ID
     *                              AZURE_TENANT_ID}: Active Directory tenant
     *                              ID (or directory ID)
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#AZURE_SAS_TOKEN
     *                              AZURE_SAS_TOKEN}: Shared access signature
     *                              token for Azure storage account to use as
     *                              the data source
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#AZURE_OAUTH_TOKEN
     *                              AZURE_OAUTH_TOKEN}: OAuth token to access
     *                              given storage container
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#GCS_BUCKET_NAME
     *                              GCS_BUCKET_NAME}: Name of the Google Cloud
     *                              Storage bucket to use as the data source
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#GCS_PROJECT_ID
     *                              GCS_PROJECT_ID}: Name of the Google Cloud
     *                              project to use as the data source
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#GCS_SERVICE_ACCOUNT_KEYS
     *                              GCS_SERVICE_ACCOUNT_KEYS}: Google Cloud
     *                              service account keys to use for
     *                              authenticating the data source
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#KAFKA_URL
     *                              KAFKA_URL}: The publicly-accessible full
     *                              path URL to the Kafka broker, e.g.,
     *                              'http://172.123.45.67:9300'.
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#KAFKA_TOPIC_NAME
     *                              KAFKA_TOPIC_NAME}: Name of the Kafka topic
     *                              to use as the data source
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#JDBC_DRIVER_JAR_PATH
     *                              JDBC_DRIVER_JAR_PATH}: JDBC driver jar file
     *                              location.  This may be a KIFS file.
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#JDBC_DRIVER_CLASS_NAME
     *                              JDBC_DRIVER_CLASS_NAME}: Name of the JDBC
     *                              driver class
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#ANONYMOUS
     *                              ANONYMOUS}: Create an anonymous connection
     *                              to the storage provider--DEPRECATED: this
     *                              is now the default.  Specify
     *                              use_managed_credentials for non-anonymous
     *                              connection
     *                              Supported values:
     *                              <ul>
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#TRUE
     *                              TRUE}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#FALSE
     *                              FALSE}
     *                              </ul>
     *                              The default value is {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#TRUE
     *                              TRUE}.
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#USE_MANAGED_CREDENTIALS
     *                              USE_MANAGED_CREDENTIALS}: When no
     *                              credentials are supplied, we use anonymous
     *                              access by default.  If this is set, we will
     *                              use cloud provider user settings.
     *                              Supported values:
     *                              <ul>
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#TRUE
     *                              TRUE}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#FALSE
     *                              FALSE}
     *                              </ul>
     *                              The default value is {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#FALSE
     *                              FALSE}.
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#USE_HTTPS
     *                              USE_HTTPS}: Use https to connect to
     *                              datasource if true, otherwise use http
     *                              Supported values:
     *                              <ul>
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#TRUE
     *                              TRUE}
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#FALSE
     *                              FALSE}
     *                              </ul>
     *                              The default value is {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#TRUE
     *                              TRUE}.
     *                                      <li> {@link
     *                              com.gpudb.protocol.AlterDatasourceRequest.DatasourceUpdatesMap#SCHEMA_NAME
     *                              SCHEMA_NAME}: Updates the schema name.  If
     *                              {@code schema_name}
     *                              doesn't exist, an error will be thrown. If
     *                              {@code schema_name} is empty, then the
     *                              user's
     *                              default schema will be used.
     *                              </ul>
     * @param options  Optional parameters.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterDatasourceResponse alterDatasource(String name, Map<String, String> datasourceUpdatesMap, Map<String, String> options) throws GPUdbException {
        AlterDatasourceRequest actualRequest_ = new AlterDatasourceRequest(name, datasourceUpdatesMap, options);
        AlterDatasourceResponse actualResponse_ = new AlterDatasourceResponse();
        submitRequest("/alter/datasource", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters an existing directory in <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterDirectoryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterDirectoryResponse alterDirectory(AlterDirectoryRequest request) throws GPUdbException {
        AlterDirectoryResponse actualResponse_ = new AlterDirectoryResponse();
        submitRequest("/alter/directory", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters an existing directory in <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>.
     * 
     * @param directoryName  Name of the directory in KiFS to be altered.
     * @param directoryUpdatesMap  Map containing the properties of the
     *                             directory to be altered. Error if empty.
     *                             <ul>
     *                                     <li> {@link
     *                             com.gpudb.protocol.AlterDirectoryRequest.DirectoryUpdatesMap#DATA_LIMIT
     *                             DATA_LIMIT}: The maximum capacity, in bytes,
     *                             to apply to the directory. Set to -1 to
     *                             indicate no upper limit.
     *                             </ul>
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterDirectoryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterDirectoryResponse alterDirectory(String directoryName, Map<String, String> directoryUpdatesMap, Map<String, String> options) throws GPUdbException {
        AlterDirectoryRequest actualRequest_ = new AlterDirectoryRequest(directoryName, directoryUpdatesMap, options);
        AlterDirectoryResponse actualResponse_ = new AlterDirectoryResponse();
        submitRequest("/alter/directory", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters an existing environment which can be referenced by a <a
     * href="../../../../../concepts/udf/" target="_top">user-defined
     * function</a> (UDF).
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterEnvironmentResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterEnvironmentResponse alterEnvironment(AlterEnvironmentRequest request) throws GPUdbException {
        AlterEnvironmentResponse actualResponse_ = new AlterEnvironmentResponse();
        submitRequest("/alter/environment", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters an existing environment which can be referenced by a <a
     * href="../../../../../concepts/udf/" target="_top">user-defined
     * function</a> (UDF).
     * 
     * @param environmentName  Name of the environment to be altered.
     * @param action  Modification operation to be applied
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.AlterEnvironmentRequest.Action#INSTALL_PACKAGE
     *                INSTALL_PACKAGE}: Install a python package from PyPI, an
     *                external data source or KiFS
     *                        <li> {@link
     *                com.gpudb.protocol.AlterEnvironmentRequest.Action#INSTALL_REQUIREMENTS
     *                INSTALL_REQUIREMENTS}: Install packages from a
     *                requirements file
     *                        <li> {@link
     *                com.gpudb.protocol.AlterEnvironmentRequest.Action#UNINSTALL_PACKAGE
     *                UNINSTALL_PACKAGE}: Uninstall a python package.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterEnvironmentRequest.Action#UNINSTALL_REQUIREMENTS
     *                UNINSTALL_REQUIREMENTS}: Uninstall packages from a
     *                requirements file
     *                        <li> {@link
     *                com.gpudb.protocol.AlterEnvironmentRequest.Action#RESET
     *                RESET}: Uninstalls all packages in the environment and
     *                resets it to the original state at time of creation
     *                        <li> {@link
     *                com.gpudb.protocol.AlterEnvironmentRequest.Action#REBUILD
     *                REBUILD}: Recreates the environment and re-installs all
     *                packages, upgrades the packages if necessary based on
     *                dependencies
     *                </ul>
     * @param value  The value of the modification, depending on {@code
     *               action}.  For example, if {@code action} is {@code
     *               install_package}, this would be the python package name.
     *               If {@code action} is {@code install_requirements}, this
     *               would be the path of a requirements file from which to
     *               install packages.
     *               If an external data source is specified in {@code
     *               datasource_name}, this can be the path to a wheel file or
     *               source archive.
     *               Alternatively, if installing from a file (wheel or source
     *               archive), the value may be a reference to a file in <a
     *               href="../../../../../tools/kifs/" target="_top">KiFS</a>.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterEnvironmentRequest.Options#DATASOURCE_NAME
     *                 DATASOURCE_NAME}: Name of an existing external data
     *                 source from which packages specified in {@code value}
     *                 can be loaded
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterEnvironmentResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterEnvironmentResponse alterEnvironment(String environmentName, String action, String value, Map<String, String> options) throws GPUdbException {
        AlterEnvironmentRequest actualRequest_ = new AlterEnvironmentRequest(environmentName, action, value, options);
        AlterEnvironmentResponse actualResponse_ = new AlterEnvironmentResponse();
        submitRequest("/alter/environment", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public AlterGraphResponse alterGraph(AlterGraphRequest request) throws GPUdbException {
        AlterGraphResponse actualResponse_ = new AlterGraphResponse();
        submitRequest("/alter/graph", request, actualResponse_, false);
        return actualResponse_;
    }



    public AlterGraphResponse alterGraph(String graphName, String action, String actionArg, Map<String, String> options) throws GPUdbException {
        AlterGraphRequest actualRequest_ = new AlterGraphRequest(graphName, action, actionArg, options);
        AlterGraphResponse actualResponse_ = new AlterGraphResponse();
        submitRequest("/alter/graph", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public AlterModelResponse alterModel(AlterModelRequest request) throws GPUdbException {
        AlterModelResponse actualResponse_ = new AlterModelResponse();
        submitRequest("/alter/model", request, actualResponse_, false);
        return actualResponse_;
    }



    public AlterModelResponse alterModel(String modelName, String action, String value, Map<String, String> options) throws GPUdbException {
        AlterModelRequest actualRequest_ = new AlterModelRequest(modelName, action, value, options);
        AlterModelResponse actualResponse_ = new AlterModelResponse();
        submitRequest("/alter/model", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters the properties of an exisiting resource group to facilitate
     * resource management.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterResourceGroupResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterResourceGroupResponse alterResourceGroup(AlterResourceGroupRequest request) throws GPUdbException {
        AlterResourceGroupResponse actualResponse_ = new AlterResourceGroupResponse();
        submitRequest("/alter/resourcegroup", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters the properties of an exisiting resource group to facilitate
     * resource management.
     * 
     * @param name  Name of the group to be altered. Must be an existing
     *              resource group name or an empty string when used
     *              inconjunction with the is_default_group option.
     * @param tierAttributes  Optional map containing tier names and their
     *                        respective attribute group limits.  The only
     *                        valid attribute limit that can be set is
     *                        max_memory (in bytes) for the VRAM & RAM tiers.
     *                        For instance, to set max VRAM capacity to 1GB and
     *                        max RAM capacity to 10GB, use:
     *                        {'VRAM':{'max_memory':'1000000000'},
     *                        'RAM':{'max_memory':'10000000000'}}
     *                        <ul>
     *                                <li> {@link
     *                        com.gpudb.protocol.AlterResourceGroupRequest.TierAttributes#MAX_MEMORY
     *                        MAX_MEMORY}: Maximum amount of memory usable in
     *                        the given tier at one time for this group.
     *                        </ul>
     *                        The default value is an empty {@link Map}.
     * @param ranking  If the resource group ranking is to be updated, this
     *                 indicates the relative ranking among existing resource
     *                 groups where this resource group will be moved; leave
     *                 blank if not changing the ranking.  When using {@code
     *                 before} or {@code after}, specify which resource group
     *                 this one will be inserted before or after in {@code
     *                 adjoiningResourceGroup}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Ranking#EMPTY_STRING
     *                 EMPTY_STRING}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Ranking#FIRST
     *                 FIRST}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Ranking#LAST
     *                 LAST}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Ranking#BEFORE
     *                 BEFORE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Ranking#AFTER
     *                 AFTER}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Ranking#EMPTY_STRING
     *                 EMPTY_STRING}.
     * @param adjoiningResourceGroup  If {@code ranking} is {@code before} or
     *                                {@code after}, this field indicates the
     *                                resource group before or after which the
     *                                current group will be placed; otherwise,
     *                                leave blank.  The default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#MAX_CPU_CONCURRENCY
     *                 MAX_CPU_CONCURRENCY}: Maximum number of simultaneous
     *                 threads that will be used to execute a request for this
     *                 group.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#MAX_DATA
     *                 MAX_DATA}: Maximum amount of cumulative ram usage
     *                 regardless of tier status for this group.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#MAX_SCHEDULING_PRIORITY
     *                 MAX_SCHEDULING_PRIORITY}: Maximum priority of a
     *                 scheduled task for this group.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#MAX_TIER_PRIORITY
     *                 MAX_TIER_PRIORITY}: Maximum priority of a tiered object
     *                 for this group.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#IS_DEFAULT_GROUP
     *                 IS_DEFAULT_GROUP}: If {@code true}, this request applies
     *                 to the global default resource group. It is an error for
     *                 this field to be {@code true} when the {@code name}
     *                 field is also populated.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#PERSIST
     *                 PERSIST}: If {@code true} and a system-level change was
     *                 requested, the system configuration will be written to
     *                 disk upon successful application of this request. This
     *                 will commit the changes from this request and any
     *                 additional in-memory modifications.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AlterResourceGroupRequest.Options#TRUE
     *                 TRUE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterResourceGroupResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterResourceGroupResponse alterResourceGroup(String name, Map<String, Map<String, String>> tierAttributes, String ranking, String adjoiningResourceGroup, Map<String, String> options) throws GPUdbException {
        AlterResourceGroupRequest actualRequest_ = new AlterResourceGroupRequest(name, tierAttributes, ranking, adjoiningResourceGroup, options);
        AlterResourceGroupResponse actualResponse_ = new AlterResourceGroupResponse();
        submitRequest("/alter/resourcegroup", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters a Role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterRoleResponse alterRole(AlterRoleRequest request) throws GPUdbException {
        AlterRoleResponse actualResponse_ = new AlterRoleResponse();
        submitRequest("/alter/role", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters a Role.
     * 
     * @param name  Name of the role to be altered. Must be an existing role.
     * @param action  Modification operation to be applied to the role.
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.AlterRoleRequest.Action#SET_RESOURCE_GROUP
     *                SET_RESOURCE_GROUP}: Sets the resource group for an
     *                internal role. The resource group must exist, otherwise,
     *                an empty string assigns the role to the default resource
     *                group.
     *                </ul>
     * @param value  The value of the modification, depending on {@code
     *               action}.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterRoleResponse alterRole(String name, String action, String value, Map<String, String> options) throws GPUdbException {
        AlterRoleRequest actualRequest_ = new AlterRoleRequest(name, action, value, options);
        AlterRoleResponse actualResponse_ = new AlterRoleResponse();
        submitRequest("/alter/role", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Used to change the name of a SQL-style <a
     * href="../../../../../concepts/schemas/" target="_top">schema</a>,
     * specified in {@code schemaName}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterSchemaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterSchemaResponse alterSchema(AlterSchemaRequest request) throws GPUdbException {
        AlterSchemaResponse actualResponse_ = new AlterSchemaResponse();
        submitRequest("/alter/schema", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Used to change the name of a SQL-style <a
     * href="../../../../../concepts/schemas/" target="_top">schema</a>,
     * specified in {@code schemaName}.
     * 
     * @param schemaName  Name of the schema to be altered.
     * @param action  Modification operation to be applied
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.AlterSchemaRequest.Action#RENAME_SCHEMA
     *                RENAME_SCHEMA}: Renames a schema to {@code value}. Has
     *                the same naming restrictions as <a
     *                href="../../../../../concepts/tables/"
     *                target="_top">tables</a>.
     *                </ul>
     * @param value  The value of the modification, depending on {@code
     *               action}.  For now the only value of {@code action} is
     *               {@code rename_schema}.  In this case the value is the new
     *               name of the schema.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterSchemaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterSchemaResponse alterSchema(String schemaName, String action, String value, Map<String, String> options) throws GPUdbException {
        AlterSchemaRequest actualRequest_ = new AlterSchemaRequest(schemaName, action, value, options);
        AlterSchemaResponse actualResponse_ = new AlterSchemaResponse();
        submitRequest("/alter/schema", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * The {@link GPUdb#alterSystemProperties(AlterSystemPropertiesRequest)}
     * endpoint is primarily used to simplify the testing of the system and is
     * not expected to be used during normal execution.  Commands are given
     * through the {@code propertyUpdatesMap} whose keys are commands and
     * values are strings representing integer values (for example '8000') or
     * boolean values ('true' or 'false').
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterSystemPropertiesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterSystemPropertiesResponse alterSystemProperties(AlterSystemPropertiesRequest request) throws GPUdbException {
        AlterSystemPropertiesResponse actualResponse_ = new AlterSystemPropertiesResponse();
        submitRequest("/alter/system/properties", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * The {@link GPUdb#alterSystemProperties(Map, Map)} endpoint is primarily
     * used to simplify the testing of the system and is not expected to be
     * used during normal execution.  Commands are given through the {@code
     * propertyUpdatesMap} whose keys are commands and values are strings
     * representing integer values (for example '8000') or boolean values
     * ('true' or 'false').
     * 
     * @param propertyUpdatesMap  Map containing the properties of the system
     *                            to be updated. Error if empty.
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#SM_OMP_THREADS
     *                            SM_OMP_THREADS}: Set the number of OpenMP
     *                            threads that will be used to service filter &
     *                            aggregation requests to the specified integer
     *                            value.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#KERNEL_OMP_THREADS
     *                            KERNEL_OMP_THREADS}: Set the number of kernel
     *                            OpenMP threads to the specified integer
     *                            value.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#CONCURRENT_KERNEL_EXECUTION
     *                            CONCURRENT_KERNEL_EXECUTION}: Enables
     *                            concurrent kernel execution if the value is
     *                            {@code true} and disables it if the value is
     *                            {@code false}.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#FALSE
     *                            FALSE}
     *                            </ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#SUBTASK_CONCURRENCY_LIMIT
     *                            SUBTASK_CONCURRENCY_LIMIT}: Sets the maximum
     *                            number of simultaneous threads allocated to a
     *                            given request, on each rank. Note that thread
     *                            allocation may also be limted by resource
     *                            group limits and/or system load.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#CHUNK_SIZE
     *                            CHUNK_SIZE}: Sets the number of records per
     *                            chunk to be used for all new tables.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#EVICT_COLUMNS
     *                            EVICT_COLUMNS}: Attempts to evict columns
     *                            from memory to the persistent store.  Value
     *                            string is a semicolon separated list of
     *                            entries, each entry being a table name
     *                            optionally followed by a comma and a comma
     *                            separated list of column names to attempt to
     *                            evict.  An empty value string will attempt to
     *                            evict all tables and columns.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#EXECUTION_MODE
     *                            EXECUTION_MODE}: Sets the execution_mode for
     *                            kernel executions to the specified string
     *                            value. Possible values are host, device,
     *                            default (engine decides) or an integer value
     *                            that indicates max chunk size to exec on host
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#EXTERNAL_FILES_DIRECTORY
     *                            EXTERNAL_FILES_DIRECTORY}: Sets the root
     *                            directory path where external table data
     *                            files are accessed from.  Path must exist on
     *                            the head node
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#FLUSH_TO_DISK
     *                            FLUSH_TO_DISK}: Flushes any changes to any
     *                            tables to the persistent store.  These
     *                            changes include updates to the vector store,
     *                            object store, and text search store, Value
     *                            string is ignored
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#CLEAR_CACHE
     *                            CLEAR_CACHE}: Clears cached results.  Useful
     *                            to allow repeated timing of endpoints.  Value
     *                            string is the name of the table for which to
     *                            clear the cached results, or an empty string
     *                            to clear the cached results for all tables.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#COMMUNICATOR_TEST
     *                            COMMUNICATOR_TEST}: Invoke the communicator
     *                            test and report timing results. Value string
     *                            is a semicolon separated list of
     *                            [key]=[value] expressions.  Expressions are:
     *                            num_transactions=[num] where num is the
     *                            number of request reply transactions to
     *                            invoke per test; message_size=[bytes] where
     *                            bytes is the size in bytes of the messages to
     *                            send; check_values=[enabled] where if enabled
     *                            is true the value of the messages received
     *                            are verified.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#NETWORK_SPEED
     *                            NETWORK_SPEED}: Invoke the network speed test
     *                            and report timing results. Value string is a
     *                            semicolon-separated list of [key]=[value]
     *                            expressions.  Valid expressions are:
     *                            seconds=[time] where time is the time in
     *                            seconds to run the test; data_size=[bytes]
     *                            where bytes is the size in bytes of the block
     *                            to be transferred; threads=[number of
     *                            threads]; to_ranks=[space-separated list of
     *                            ranks] where the list of ranks is the ranks
     *                            that rank 0 will send data to and get data
     *                            from. If to_ranks is unspecified then all
     *                            worker ranks are used.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#REQUEST_TIMEOUT
     *                            REQUEST_TIMEOUT}: Number of minutes after
     *                            which filtering (e.g., {@link
     *                            GPUdb#filter(String, String, String, Map)})
     *                            and aggregating (e.g., {@link
     *                            GPUdb#aggregateGroupByRaw(AggregateGroupByRequest)})
     *                            queries will timeout.  The default value is
     *                            '20'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#MAX_GET_RECORDS_SIZE
     *                            MAX_GET_RECORDS_SIZE}: The maximum number of
     *                            records the database will serve for a given
     *                            data retrieval call.  The default value is
     *                            '20000'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#MAX_GRBC_BATCH_SIZE
     *                            MAX_GRBC_BATCH_SIZE}: <DEVELOPER>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#ENABLE_AUDIT
     *                            ENABLE_AUDIT}: Enable or disable auditing.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#AUDIT_HEADERS
     *                            AUDIT_HEADERS}: Enable or disable auditing of
     *                            request headers.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#AUDIT_BODY
     *                            AUDIT_BODY}: Enable or disable auditing of
     *                            request bodies.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#AUDIT_DATA
     *                            AUDIT_DATA}: Enable or disable auditing of
     *                            request data.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#AUDIT_RESPONSE
     *                            AUDIT_RESPONSE}: Enable or disable auditing
     *                            of response information.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#SHADOW_AGG_SIZE
     *                            SHADOW_AGG_SIZE}: Size of the shadow
     *                            aggregate chunk cache in bytes.  The default
     *                            value is '10000000'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#SHADOW_FILTER_SIZE
     *                            SHADOW_FILTER_SIZE}: Size of the shadow
     *                            filter chunk cache in bytes.  The default
     *                            value is '10000000'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#SYNCHRONOUS_COMPRESSION
     *                            SYNCHRONOUS_COMPRESSION}: compress vector on
     *                            set_compression (instead of waiting for
     *                            background thread).  The default value is
     *                            'false'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#ENABLE_OVERLAPPED_EQUI_JOIN
     *                            ENABLE_OVERLAPPED_EQUI_JOIN}: Enable
     *                            overlapped-equi-join filter.  The default
     *                            value is 'true'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#KAFKA_BATCH_SIZE
     *                            KAFKA_BATCH_SIZE}: Maximum number of records
     *                            to be ingested in a single batch.  The
     *                            default value is '1000'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#KAFKA_POLL_TIMEOUT
     *                            KAFKA_POLL_TIMEOUT}: Maximum time
     *                            (milliseconds) for each poll to get records
     *                            from kafka.  The default value is '0'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#KAFKA_WAIT_TIME
     *                            KAFKA_WAIT_TIME}: Maximum time (seconds) to
     *                            buffer records received from kafka before
     *                            ingestion.  The default value is '30'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#EGRESS_PARQUET_COMPRESSION
     *                            EGRESS_PARQUET_COMPRESSION}: Parquet file
     *                            compression type
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#UNCOMPRESSED
     *                            UNCOMPRESSED}
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#SNAPPY
     *                            SNAPPY}
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#GZIP
     *                            GZIP}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#SNAPPY
     *                            SNAPPY}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#EGRESS_SINGLE_FILE_MAX_SIZE
     *                            EGRESS_SINGLE_FILE_MAX_SIZE}: Max file size
     *                            (in MB) to allow saving to a single file. May
     *                            be overridden by target limitations.  The
     *                            default value is '10000'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#MAX_CONCURRENT_KERNELS
     *                            MAX_CONCURRENT_KERNELS}: Sets the
     *                            max_concurrent_kernels value of the conf.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#TCS_PER_TOM
     *                            TCS_PER_TOM}: Sets the tcs_per_tom value of
     *                            the conf.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#TPS_PER_TOM
     *                            TPS_PER_TOM}: Sets the tps_per_tom value of
     *                            the conf.
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#AI_API_PROVIDER
     *                            AI_API_PROVIDER}: AI API provider type
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#AI_API_URL
     *                            AI_API_URL}: AI API URL
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#AI_API_KEY
     *                            AI_API_KEY}: AI API key
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#AI_API_CONNECTION_TIMEOUT
     *                            AI_API_CONNECTION_TIMEOUT}: AI API connection
     *                            timeout in seconds
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#POSTGRES_PROXY_IDLE_CONNECTION_TIMEOUT
     *                            POSTGRES_PROXY_IDLE_CONNECTION_TIMEOUT}: Idle
     *                            connection timeout in seconds
     *                                    <li> {@link
     *                            com.gpudb.protocol.AlterSystemPropertiesRequest.PropertyUpdatesMap#POSTGRES_PROXY_KEEP_ALIVE
     *                            POSTGRES_PROXY_KEEP_ALIVE}: Enable  postgres
     *                            proxy keep alive.  The default value is
     *                            'false'.
     *                            </ul>
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterSystemPropertiesRequest.Options#EVICT_TO_COLD
     *                 EVICT_TO_COLD}: If {@code true} and evict_columns is
     *                 specified, the given objects will be evicted to cold
     *                 storage (if such a tier exists).
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterSystemPropertiesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterSystemPropertiesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterSystemPropertiesRequest.Options#PERSIST
     *                 PERSIST}: If {@code true} the system configuration will
     *                 be written to disk upon successful application of this
     *                 request. This will commit the changes from this request
     *                 and any additional in-memory modifications.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterSystemPropertiesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterSystemPropertiesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AlterSystemPropertiesRequest.Options#TRUE
     *                 TRUE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterSystemPropertiesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterSystemPropertiesResponse alterSystemProperties(Map<String, String> propertyUpdatesMap, Map<String, String> options) throws GPUdbException {
        AlterSystemPropertiesRequest actualRequest_ = new AlterSystemPropertiesRequest(propertyUpdatesMap, options);
        AlterSystemPropertiesResponse actualResponse_ = new AlterSystemPropertiesResponse();
        submitRequest("/alter/system/properties", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Apply various modifications to a table or view.  The
     * available modifications include the following:
     * <p>
     * Manage a table's columns--a column can be added, removed, or have its
     * <a href="../../../../../concepts/types/" target="_top">type and
     * properties</a> modified, including whether it is
     * <a href="../../../../../concepts/dictionary_encoding/"
     * target="_top">dictionary encoded</a> or not.
     * <p>
     * External tables cannot be modified except for their refresh method.
     * <p>
     * Create or delete a <a
     * href="../../../../../concepts/indexes/#column-index"
     * target="_top">column</a>,
     * <a href="../../../../../concepts/indexes/#chunk-skip-index"
     * target="_top">chunk skip</a>, or
     * <a href="../../../../../concepts/indexes/#geospatial-index"
     * target="_top">geospatial</a> index. This can speed up
     * certain operations when using expressions containing equality or
     * relational
     * operators on indexed columns. This only applies to tables.
     * <p>
     * Create or delete a <a href="../../../../../concepts/tables/#foreign-key"
     * target="_top">foreign key</a>
     * on a particular column.
     * <p>
     * Manage a
     * <a href="../../../../../concepts/tables/#partitioning-by-range"
     * target="_top">range-partitioned</a> or a
     * <a href="../../../../../concepts/tables/#partitioning-by-list-manual"
     * target="_top">manual list-partitioned</a>
     * table's partitions.
     * <p>
     * Set (or reset) the <a href="../../../../../rm/concepts/#tier-strategies"
     * target="_top">tier strategy</a>
     * of a table or view.
     * <p>
     * Refresh and manage the refresh mode of a
     * <a href="../../../../../concepts/materialized_views/"
     * target="_top">materialized view</a> or an
     * <a href="../../../../../concepts/external_tables/"
     * target="_top">external table</a>.
     * <p>
     * Set the <a href="../../../../../concepts/ttl/"
     * target="_top">time-to-live (TTL)</a>. This can be applied
     * to tables or views.
     * <p>
     * Set the global access mode (i.e. locking) for a table. This setting
     * trumps any
     * role-based access controls that may be in place; e.g., a user with write
     * access
     * to a table marked read-only will not be able to insert records into it.
     * The mode
     * can be set to read-only, write-only, read/write, and no access.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterTableResponse alterTable(AlterTableRequest request) throws GPUdbException {
        AlterTableResponse actualResponse_ = new AlterTableResponse();
        submitRequest("/alter/table", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Apply various modifications to a table or view.  The
     * available modifications include the following:
     * <p>
     * Manage a table's columns--a column can be added, removed, or have its
     * <a href="../../../../../concepts/types/" target="_top">type and
     * properties</a> modified, including whether it is
     * <a href="../../../../../concepts/dictionary_encoding/"
     * target="_top">dictionary encoded</a> or not.
     * <p>
     * External tables cannot be modified except for their refresh method.
     * <p>
     * Create or delete a <a
     * href="../../../../../concepts/indexes/#column-index"
     * target="_top">column</a>,
     * <a href="../../../../../concepts/indexes/#chunk-skip-index"
     * target="_top">chunk skip</a>, or
     * <a href="../../../../../concepts/indexes/#geospatial-index"
     * target="_top">geospatial</a> index. This can speed up
     * certain operations when using expressions containing equality or
     * relational
     * operators on indexed columns. This only applies to tables.
     * <p>
     * Create or delete a <a href="../../../../../concepts/tables/#foreign-key"
     * target="_top">foreign key</a>
     * on a particular column.
     * <p>
     * Manage a
     * <a href="../../../../../concepts/tables/#partitioning-by-range"
     * target="_top">range-partitioned</a> or a
     * <a href="../../../../../concepts/tables/#partitioning-by-list-manual"
     * target="_top">manual list-partitioned</a>
     * table's partitions.
     * <p>
     * Set (or reset) the <a href="../../../../../rm/concepts/#tier-strategies"
     * target="_top">tier strategy</a>
     * of a table or view.
     * <p>
     * Refresh and manage the refresh mode of a
     * <a href="../../../../../concepts/materialized_views/"
     * target="_top">materialized view</a> or an
     * <a href="../../../../../concepts/external_tables/"
     * target="_top">external table</a>.
     * <p>
     * Set the <a href="../../../../../concepts/ttl/"
     * target="_top">time-to-live (TTL)</a>. This can be applied
     * to tables or views.
     * <p>
     * Set the global access mode (i.e. locking) for a table. This setting
     * trumps any
     * role-based access controls that may be in place; e.g., a user with write
     * access
     * to a table marked read-only will not be able to insert records into it.
     * The mode
     * can be set to read-only, write-only, read/write, and no access.
     * 
     * @param tableName  Table on which the operation will be performed, in
     *                   [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     *                   Must be an existing table or view.
     * @param action  Modification operation to be applied
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#ALLOW_HOMOGENEOUS_TABLES
     *                ALLOW_HOMOGENEOUS_TABLES}: No longer supported; action
     *                will be ignored.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#CREATE_INDEX
     *                CREATE_INDEX}: Creates a <a
     *                href="../../../../../concepts/indexes/#column-index"
     *                target="_top">column (attribute) index</a>,
     *                <a
     *                href="../../../../../concepts/indexes/#chunk-skip-index"
     *                target="_top">chunk skip index</a>, or
     *                <a
     *                href="../../../../../concepts/indexes/#geospatial-index"
     *                target="_top">geospatial index</a>
     *                (depending on the specified {@code index_type}), on the
     *                column name specified in {@code value}.
     *                If this column already has the specified index, an error
     *                will be returned.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#DELETE_INDEX
     *                DELETE_INDEX}: Deletes a <a
     *                href="../../../../../concepts/indexes/#column-index"
     *                target="_top">column (attribute) index</a>,
     *                <a
     *                href="../../../../../concepts/indexes/#chunk-skip-index"
     *                target="_top">chunk skip index</a>, or
     *                <a
     *                href="../../../../../concepts/indexes/#geospatial-index"
     *                target="_top">geospatial index</a>
     *                (depending on the specified {@code index_type}), on the
     *                column name specified in {@code value}.
     *                If this column does not have the specified index, an
     *                error will be returned.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#MOVE_TO_COLLECTION
     *                MOVE_TO_COLLECTION}: [DEPRECATED--please use {@code
     *                move_to_schema} and use {@link GPUdb#createSchema(String,
     *                Map)} to create the schema if non-existent]  Moves a
     *                table or view into a schema named {@code value}.  If the
     *                schema provided is non-existent, it will be automatically
     *                created.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#MOVE_TO_SCHEMA
     *                MOVE_TO_SCHEMA}: Moves a table or view into a schema
     *                named {@code value}.
     *                If the schema provided is nonexistent, an error will be
     *                thrown.
     *                If {@code value} is empty, then the table or view will be
     *                placed in the user's default schema.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#PROTECTED
     *                PROTECTED}: No longer used.  Previously set whether the
     *                given {@code tableName} should be protected or not. The
     *                {@code value} would have been either 'true' or 'false'.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#RENAME_TABLE
     *                RENAME_TABLE}: Renames a table or view within its current
     *                schema to {@code value}. Has the same naming restrictions
     *                as <a href="../../../../../concepts/tables/"
     *                target="_top">tables</a>.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#TTL TTL}:
     *                Sets the <a href="../../../../../concepts/ttl/"
     *                target="_top">time-to-live</a> in minutes of the table or
     *                view specified in {@code tableName}.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#ADD_COLUMN
     *                ADD_COLUMN}: Adds the column specified in {@code value}
     *                to the table specified in {@code tableName}.
     *                Use {@code column_type} and {@code column_properties} in
     *                {@code options}
     *                to set the column's type and properties, respectively.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#CHANGE_COLUMN
     *                CHANGE_COLUMN}: Changes type and properties of the column
     *                specified in {@code value}.
     *                Use {@code column_type} and {@code column_properties} in
     *                {@code options} to set
     *                the column's type and properties, respectively. Note that
     *                primary key and/or shard key columns cannot be changed.
     *                All unchanging column properties must be listed for the
     *                change to take place, e.g., to add dictionary encoding to
     *                an existing 'char4' column, both 'char4' and 'dict' must
     *                be specified in the {@code options} map.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#SET_COLUMN_COMPRESSION
     *                SET_COLUMN_COMPRESSION}: No longer supported; action will
     *                be ignored.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#DELETE_COLUMN
     *                DELETE_COLUMN}: Deletes the column specified in {@code
     *                value} from the table specified in {@code tableName}.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#CREATE_FOREIGN_KEY
     *                CREATE_FOREIGN_KEY}: Creates a <a
     *                href="../../../../../concepts/tables/#foreign-key"
     *                target="_top">foreign key</a> specified in {@code value}
     *                using the format '(source_column_name [, ...]) references
     *                target_table_name(primary_key_column_name [, ...]) [as
     *                foreign_key_name]'.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#DELETE_FOREIGN_KEY
     *                DELETE_FOREIGN_KEY}: Deletes a <a
     *                href="../../../../../concepts/tables/#foreign-key"
     *                target="_top">foreign key</a>.  The {@code value} should
     *                be the foreign_key_name specified when creating the key
     *                or the complete string used to define it.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#ADD_PARTITION
     *                ADD_PARTITION}: Adds the partition specified in {@code
     *                value}, to either a <a
     *                href="../../../../../concepts/tables/#partitioning-by-range"
     *                target="_top">range-partitioned</a> or <a
     *                href="../../../../../concepts/tables/#partitioning-by-list-manual"
     *                target="_top">manual list-partitioned</a> table.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#REMOVE_PARTITION
     *                REMOVE_PARTITION}: Removes the partition specified in
     *                {@code value} (and relocates all of its data to the
     *                default partition) from either a <a
     *                href="../../../../../concepts/tables/#partitioning-by-range"
     *                target="_top">range-partitioned</a> or <a
     *                href="../../../../../concepts/tables/#partitioning-by-list-manual"
     *                target="_top">manual list-partitioned</a> table.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#DELETE_PARTITION
     *                DELETE_PARTITION}: Deletes the partition specified in
     *                {@code value} (and all of its data) from either a <a
     *                href="../../../../../concepts/tables/#partitioning-by-range"
     *                target="_top">range-partitioned</a> or <a
     *                href="../../../../../concepts/tables/#partitioning-by-list-manual"
     *                target="_top">manual list-partitioned</a> table.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#SET_GLOBAL_ACCESS_MODE
     *                SET_GLOBAL_ACCESS_MODE}: Sets the global access mode
     *                (i.e. locking) for the table specified in {@code
     *                tableName}. Specify the access mode in {@code value}.
     *                Valid modes are 'no_access', 'read_only', 'write_only'
     *                and 'read_write'.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#REFRESH
     *                REFRESH}: For a <a
     *                href="../../../../../concepts/materialized_views/"
     *                target="_top">materialized view</a>, replays all the
     *                table creation commands required to create the view.  For
     *                an <a href="../../../../../concepts/external_tables/"
     *                target="_top">external table</a>, reloads all data in the
     *                table from its associated source files or <a
     *                href="../../../../../concepts/data_sources/"
     *                target="_top">data source</a>.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#SET_REFRESH_METHOD
     *                SET_REFRESH_METHOD}: For a <a
     *                href="../../../../../concepts/materialized_views/"
     *                target="_top">materialized view</a>, sets the method by
     *                which the view is refreshed to the method specified in
     *                {@code value} - one of 'manual', 'periodic', or
     *                'on_change'.  For an <a
     *                href="../../../../../concepts/external_tables/"
     *                target="_top">external table</a>, sets the method by
     *                which the table is refreshed to the method specified in
     *                {@code value} - either 'manual' or 'on_start'.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#SET_REFRESH_START_TIME
     *                SET_REFRESH_START_TIME}: Sets the time to start periodic
     *                refreshes of this <a
     *                href="../../../../../concepts/materialized_views/"
     *                target="_top">materialized view</a> to the datetime
     *                string specified in {@code value} with format 'YYYY-MM-DD
     *                HH:MM:SS'.  Subsequent refreshes occur at the specified
     *                time + N * the refresh period.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#SET_REFRESH_STOP_TIME
     *                SET_REFRESH_STOP_TIME}: Sets the time to stop periodic
     *                refreshes of this <a
     *                href="../../../../../concepts/materialized_views/"
     *                target="_top">materialized view</a> to the datetime
     *                string specified in {@code value} with format 'YYYY-MM-DD
     *                HH:MM:SS'.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#SET_REFRESH_PERIOD
     *                SET_REFRESH_PERIOD}: Sets the time interval in seconds at
     *                which to refresh this <a
     *                href="../../../../../concepts/materialized_views/"
     *                target="_top">materialized view</a> to the value
     *                specified in {@code value}.  Also, sets the refresh
     *                method to periodic if not already set.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#SET_REFRESH_SPAN
     *                SET_REFRESH_SPAN}: Sets the future time-offset(in
     *                seconds) for the view refresh to stop.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#SET_REFRESH_EXECUTE_AS
     *                SET_REFRESH_EXECUTE_AS}: Sets the user name to refresh
     *                this <a
     *                href="../../../../../concepts/materialized_views/"
     *                target="_top">materialized view</a> to the value
     *                specified in {@code value}.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#REMOVE_TEXT_SEARCH_ATTRIBUTES
     *                REMOVE_TEXT_SEARCH_ATTRIBUTES}: Removes <a
     *                href="../../../../../concepts/full_text_search/"
     *                target="_top">text search</a> attribute from all columns.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#REMOVE_SHARD_KEYS
     *                REMOVE_SHARD_KEYS}: Removes the shard key property from
     *                all columns, so that the table will be considered
     *                randomly sharded.  The data is not moved.  The {@code
     *                value} is ignored.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#SET_STRATEGY_DEFINITION
     *                SET_STRATEGY_DEFINITION}: Sets the <a
     *                href="../../../../../rm/concepts/#tier-strategies"
     *                target="_top">tier strategy</a> for the table and its
     *                columns to the one specified in {@code value}, replacing
     *                the existing tier strategy in its entirety.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#CANCEL_DATASOURCE_SUBSCRIPTION
     *                CANCEL_DATASOURCE_SUBSCRIPTION}: Permanently unsubscribe
     *                a data source that is loading continuously as a stream.
     *                The data source can be Kafka / S3 / Azure.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#PAUSE_DATASOURCE_SUBSCRIPTION
     *                PAUSE_DATASOURCE_SUBSCRIPTION}: Temporarily unsubscribe a
     *                data source that is loading continuously as a stream. The
     *                data source can be Kafka / S3 / Azure.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#RESUME_DATASOURCE_SUBSCRIPTION
     *                RESUME_DATASOURCE_SUBSCRIPTION}: Resubscribe to a paused
     *                data source subscription. The data source can be Kafka /
     *                S3 / Azure.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterTableRequest.Action#CHANGE_OWNER
     *                CHANGE_OWNER}: Change the owner resource group of the
     *                table.
     *                </ul>
     * @param value  The value of the modification, depending on {@code
     *               action}.
     *               For example, if {@code action} is {@code add_column}, this
     *               would be the column name;
     *               while the column's definition would be covered by the
     *               {@code column_type},
     *               {@code column_properties}, {@code column_default_value},
     *               and {@code add_column_expression} in {@code options}.
     *               If {@code action} is {@code ttl}, it would be the number
     *               of minutes for the new TTL.
     *               If {@code action} is {@code refresh}, this field would be
     *               blank.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#ACTION
     *                 ACTION}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#COLUMN_NAME
     *                 COLUMN_NAME}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#TABLE_NAME
     *                 TABLE_NAME}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#COLUMN_DEFAULT_VALUE
     *                 COLUMN_DEFAULT_VALUE}: When adding a column, set a
     *                 default value for existing records.  For nullable
     *                 columns, the default value will be null, regardless of
     *                 data type.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#COLUMN_PROPERTIES
     *                 COLUMN_PROPERTIES}: When adding or changing a column,
     *                 set the column properties (strings, separated by a
     *                 comma: data, store_only, text_search, char8, int8 etc).
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#COLUMN_TYPE
     *                 COLUMN_TYPE}: When adding or changing a column, set the
     *                 column type (strings, separated by a comma: int, double,
     *                 string, null etc).
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#COMPRESSION_TYPE
     *                 COMPRESSION_TYPE}: No longer supported; option will be
     *                 ignored.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#NONE NONE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#SNAPPY
     *                 SNAPPY}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#LZ4 LZ4}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#LZ4HC
     *                 LZ4HC}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#SNAPPY
     *                 SNAPPY}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#COPY_VALUES_FROM_COLUMN
     *                 COPY_VALUES_FROM_COLUMN}: [DEPRECATED--please use {@code
     *                 add_column_expression} instead.]
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#RENAME_COLUMN
     *                 RENAME_COLUMN}: When changing a column, specify new
     *                 column name.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#VALIDATE_CHANGE_COLUMN
     *                 VALIDATE_CHANGE_COLUMN}: When changing a column,
     *                 validate the change before applying it (or not).
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#TRUE TRUE}:
     *                 Validate all values. A value too large (or too long) for
     *                 the new type will prevent any change.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#FALSE
     *                 FALSE}: When a value is too large or long, it will be
     *                 truncated.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#UPDATE_LAST_ACCESS_TIME
     *                 UPDATE_LAST_ACCESS_TIME}: Indicates whether the <a
     *                 href="../../../../../concepts/ttl/"
     *                 target="_top">time-to-live</a> (TTL) expiration
     *                 countdown timer should be reset to the table's TTL.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#TRUE TRUE}:
     *                 Reset the expiration countdown timer to the table's
     *                 configured TTL.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#FALSE
     *                 FALSE}: Don't reset the timer; expiration countdown will
     *                 continue from where it is, as if the table had not been
     *                 accessed.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#ADD_COLUMN_EXPRESSION
     *                 ADD_COLUMN_EXPRESSION}: When adding a column, an
     *                 optional expression to use for the new column's values.
     *                 Any valid expression may be used, including one
     *                 containing references to existing columns in the same
     *                 table.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#STRATEGY_DEFINITION
     *                 STRATEGY_DEFINITION}: Optional parameter for specifying
     *                 the <a
     *                 href="../../../../../rm/concepts/#tier-strategies"
     *                 target="_top">tier strategy</a> for the table and its
     *                 columns when {@code action} is {@code
     *                 set_strategy_definition}, replacing the existing tier
     *                 strategy in its entirety.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#INDEX_TYPE
     *                 INDEX_TYPE}: Type of index to create, when {@code
     *                 action} is {@code create_index},
     *                 or to delete, when {@code action} is {@code
     *                 delete_index}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#COLUMN
     *                 COLUMN}: Create or delete a <a
     *                 href="../../../../../concepts/indexes/#column-index"
     *                 target="_top">column (attribute) index</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#CHUNK_SKIP
     *                 CHUNK_SKIP}: Create or delete a <a
     *                 href="../../../../../concepts/indexes/#chunk-skip-index"
     *                 target="_top">chunk skip index</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#GEOSPATIAL
     *                 GEOSPATIAL}: Create or delete a geospatial index
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AlterTableRequest.Options#COLUMN
     *                 COLUMN}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterTableResponse alterTable(String tableName, String action, String value, Map<String, String> options) throws GPUdbException {
        AlterTableRequest actualRequest_ = new AlterTableRequest(tableName, action, value, options);
        AlterTableResponse actualResponse_ = new AlterTableResponse();
        submitRequest("/alter/table", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Apply various modifications to columns in a table, view.  The available
     * modifications include the following:
     * <p>
     * Create or delete an <a
     * href="../../../../../concepts/indexes/#column-index"
     * target="_top">index</a> on a
     * particular column. This can speed up certain operations when using
     * expressions
     * containing equality or relational operators on indexed columns. This
     * only
     * applies to tables.
     * <p>
     * Manage a table's columns--a column can be added, removed, or have its
     * <a href="../../../../../concepts/types/" target="_top">type and
     * properties</a> modified, including whether it is
     * <a href="../../../../../concepts/dictionary_encoding/"
     * target="_top">dictionary encoded</a> or not.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterTableColumnsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterTableColumnsResponse alterTableColumns(AlterTableColumnsRequest request) throws GPUdbException {
        AlterTableColumnsResponse actualResponse_ = new AlterTableColumnsResponse();
        submitRequest("/alter/table/columns", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Apply various modifications to columns in a table, view.  The available
     * modifications include the following:
     * <p>
     * Create or delete an <a
     * href="../../../../../concepts/indexes/#column-index"
     * target="_top">index</a> on a
     * particular column. This can speed up certain operations when using
     * expressions
     * containing equality or relational operators on indexed columns. This
     * only
     * applies to tables.
     * <p>
     * Manage a table's columns--a column can be added, removed, or have its
     * <a href="../../../../../concepts/types/" target="_top">type and
     * properties</a> modified, including whether it is
     * <a href="../../../../../concepts/dictionary_encoding/"
     * target="_top">dictionary encoded</a> or not.
     * 
     * @param tableName  Table on which the operation will be performed. Must
     *                   be an existing table or view, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnAlterations  List of alter table add/delete/change column
     *                           requests - all for the same table. Each
     *                           request is a map that includes 'column_name',
     *                           'action' and the options specific for the
     *                           action. Note that the same options as in alter
     *                           table requests but in the same map as the
     *                           column name and the action. For example:
     *                           [{'column_name':'col_1','action':'change_column','rename_column':'col_2'},{'column_name':'col_1','action':'add_column',
     *                           'type':'int','default_value':'1'}]
     * @param options  Optional parameters.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterTableColumnsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterTableColumnsResponse alterTableColumns(String tableName, List<Map<String, String>> columnAlterations, Map<String, String> options) throws GPUdbException {
        AlterTableColumnsRequest actualRequest_ = new AlterTableColumnsRequest(tableName, columnAlterations, options);
        AlterTableColumnsResponse actualResponse_ = new AlterTableColumnsResponse();
        submitRequest("/alter/table/columns", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Updates (adds or changes) metadata for tables. The metadata key and
     * values must both be strings. This is an easy way to annotate whole
     * tables rather
     * than single records within tables.  Some examples of metadata are owner
     * of the
     * table, table creation timestamp etc.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterTableMetadataResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterTableMetadataResponse alterTableMetadata(AlterTableMetadataRequest request) throws GPUdbException {
        AlterTableMetadataResponse actualResponse_ = new AlterTableMetadataResponse();
        submitRequest("/alter/table/metadata", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Updates (adds or changes) metadata for tables. The metadata key and
     * values must both be strings. This is an easy way to annotate whole
     * tables rather
     * than single records within tables.  Some examples of metadata are owner
     * of the
     * table, table creation timestamp etc.
     * 
     * @param tableNames  Names of the tables whose metadata will be updated,
     *                    in [schema_name.]table_name format, using standard <a
     *                    href="../../../../../concepts/tables/#table-name-resolution"
     *                    target="_top">name resolution rules</a>.  All
     *                    specified tables must exist, or an error will be
     *                    returned.
     * @param metadataMap  A map which contains the metadata of the tables that
     *                     are to be updated. Note that only one map is
     *                     provided for all the tables; so the change will be
     *                     applied to every table. If the provided map is
     *                     empty, then all existing metadata for the table(s)
     *                     will be cleared.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterTableMetadataResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterTableMetadataResponse alterTableMetadata(List<String> tableNames, Map<String, String> metadataMap, Map<String, String> options) throws GPUdbException {
        AlterTableMetadataRequest actualRequest_ = new AlterTableMetadataRequest(tableNames, metadataMap, options);
        AlterTableMetadataResponse actualResponse_ = new AlterTableMetadataResponse();
        submitRequest("/alter/table/metadata", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters a table monitor previously created with {@link
     * GPUdb#createTableMonitor(CreateTableMonitorRequest)}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterTableMonitorResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterTableMonitorResponse alterTableMonitor(AlterTableMonitorRequest request) throws GPUdbException {
        AlterTableMonitorResponse actualResponse_ = new AlterTableMonitorResponse();
        submitRequest("/alter/tablemonitor", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters a table monitor previously created with {@link
     * GPUdb#createTableMonitor(String, Map)}.
     * 
     * @param topicId  The topic ID returned by {@link
     *                 GPUdb#createTableMonitor(String, Map)}.
     * @param monitorUpdatesMap  Map containing the properties of the table
     *                           monitor to be updated. Error if empty.
     *                           <ul>
     *                                   <li> {@link
     *                           com.gpudb.protocol.AlterTableMonitorRequest.MonitorUpdatesMap#SCHEMA_NAME
     *                           SCHEMA_NAME}: Updates the schema name.  If
     *                           {@code schema_name}
     *                           doesn't exist, an error will be thrown. If
     *                           {@code schema_name} is empty, then the user's
     *                           default schema will be used.
     *                           </ul>
     * @param options  Optional parameters.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterTableMonitorResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterTableMonitorResponse alterTableMonitor(String topicId, Map<String, String> monitorUpdatesMap, Map<String, String> options) throws GPUdbException {
        AlterTableMonitorRequest actualRequest_ = new AlterTableMonitorRequest(topicId, monitorUpdatesMap, options);
        AlterTableMonitorResponse actualResponse_ = new AlterTableMonitorResponse();
        submitRequest("/alter/tablemonitor", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters properties of an exisiting
     * <a href="../../../../../rm/concepts/#storage-tiers"
     * target="_top">tier</a> to facilitate
     * <a href="../../../../../rm/concepts/" target="_top">resource
     * management</a>.
     * <p>
     * To disable
     * <a href="../../../../../rm/concepts/#watermark-based-eviction"
     * target="_top">watermark-based eviction</a>,
     * set both {@code high_watermark} and
     * {@code low_watermark} to 100.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterTierResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterTierResponse alterTier(AlterTierRequest request) throws GPUdbException {
        AlterTierResponse actualResponse_ = new AlterTierResponse();
        submitRequest("/alter/tier", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters properties of an exisiting
     * <a href="../../../../../rm/concepts/#storage-tiers"
     * target="_top">tier</a> to facilitate
     * <a href="../../../../../rm/concepts/" target="_top">resource
     * management</a>.
     * <p>
     * To disable
     * <a href="../../../../../rm/concepts/#watermark-based-eviction"
     * target="_top">watermark-based eviction</a>,
     * set both {@code high_watermark} and
     * {@code low_watermark} to 100.
     * 
     * @param name  Name of the tier to be altered. Must be an existing tier
     *              group name.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTierRequest.Options#CAPACITY
     *                 CAPACITY}: Maximum size in bytes this tier may hold at
     *                 once.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTierRequest.Options#HIGH_WATERMARK
     *                 HIGH_WATERMARK}: Threshold of usage of this tier's
     *                 resource that once exceeded, will trigger
     *                 watermark-based eviction from this tier.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTierRequest.Options#LOW_WATERMARK
     *                 LOW_WATERMARK}: Threshold of resource usage that once
     *                 fallen below after crossing the {@code high_watermark},
     *                 will cease watermark-based eviction from this tier.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTierRequest.Options#WAIT_TIMEOUT
     *                 WAIT_TIMEOUT}: Timeout in seconds for reading from or
     *                 writing to this resource. Applies to cold storage tiers
     *                 only.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTierRequest.Options#PERSIST
     *                 PERSIST}: If {@code true} the system configuration will
     *                 be written to disk upon successful application of this
     *                 request. This will commit the changes from this request
     *                 and any additional in-memory modifications.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTierRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTierRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AlterTierRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterTierRequest.Options#RANK RANK}:
     *                 Apply the requested change only to a specific rank.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterTierResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterTierResponse alterTier(String name, Map<String, String> options) throws GPUdbException {
        AlterTierRequest actualRequest_ = new AlterTierRequest(name, options);
        AlterTierResponse actualResponse_ = new AlterTierResponse();
        submitRequest("/alter/tier", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters a user.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterUserResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterUserResponse alterUser(AlterUserRequest request) throws GPUdbException {
        AlterUserResponse actualResponse_ = new AlterUserResponse();
        submitRequest("/alter/user", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters a user.
     * 
     * @param name  Name of the user to be altered. Must be an existing user.
     * @param action  Modification operation to be applied to the user.
     *                Supported values:
     *                <ul>
     *                        <li> {@link
     *                com.gpudb.protocol.AlterUserRequest.Action#SET_PASSWORD
     *                SET_PASSWORD}: Sets the password of the user. The user
     *                must be an internal user.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterUserRequest.Action#SET_RESOURCE_GROUP
     *                SET_RESOURCE_GROUP}: Sets the resource group for an
     *                internal user. The resource group must exist, otherwise,
     *                an empty string assigns the user to the default resource
     *                group.
     *                        <li> {@link
     *                com.gpudb.protocol.AlterUserRequest.Action#SET_DEFAULT_SCHEMA
     *                SET_DEFAULT_SCHEMA}: Set the default_schema for an
     *                internal user. An empty string means the user will have
     *                no default schema.
     *                </ul>
     * @param value  The value of the modification, depending on {@code
     *               action}.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterUserResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterUserResponse alterUser(String name, String action, String value, Map<String, String> options) throws GPUdbException {
        AlterUserRequest actualRequest_ = new AlterUserRequest(name, action, value, options);
        AlterUserResponse actualResponse_ = new AlterUserResponse();
        submitRequest("/alter/user", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters a video.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterVideoResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterVideoResponse alterVideo(AlterVideoRequest request) throws GPUdbException {
        AlterVideoResponse actualResponse_ = new AlterVideoResponse();
        submitRequest("/alter/video", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Alters a video.
     * 
     * @param path  Fully-qualified <a href="../../../../../tools/kifs/"
     *              target="_top">KiFS</a> path to the video to be altered.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AlterVideoRequest.Options#TTL TTL}:
     *                 Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the video.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AlterVideoResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AlterVideoResponse alterVideo(String path, Map<String, String> options) throws GPUdbException {
        AlterVideoRequest actualRequest_ = new AlterVideoRequest(path, options);
        AlterVideoResponse actualResponse_ = new AlterVideoResponse();
        submitRequest("/alter/video", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Append (or insert) all records from a source table
     * (specified by {@code sourceTableName}) to a particular target table
     * (specified by {@code tableName}). The field map
     * (specified by {@code fieldMap}) holds the user specified map of target
     * table
     * column names with their mapped source column names.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AppendRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AppendRecordsResponse appendRecords(AppendRecordsRequest request) throws GPUdbException {
        AppendRecordsResponse actualResponse_ = new AppendRecordsResponse();
        submitRequest("/append/records", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Append (or insert) all records from a source table
     * (specified by {@code sourceTableName}) to a particular target table
     * (specified by {@code tableName}). The field map
     * (specified by {@code fieldMap}) holds the user specified map of target
     * table
     * column names with their mapped source column names.
     * 
     * @param tableName  The table name for the records to be appended, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table.
     * @param sourceTableName  The source table name to get records from, in
     *                         [schema_name.]table_name format, using standard
     *                         <a
     *                         href="../../../../../concepts/tables/#table-name-resolution"
     *                         target="_top">name resolution rules</a>.  Must
     *                         be an existing table name.
     * @param fieldMap  Contains the mapping of column names from the target
     *                  table (specified by {@code tableName}) as the keys, and
     *                  corresponding column names or expressions (e.g.,
     *                  'col_name+1') from the source table (specified by
     *                  {@code sourceTableName}). Must be existing column names
     *                  in source table and target table, and their types must
     *                  be matched. For details on using expressions, see <a
     *                  href="../../../../../concepts/expressions/"
     *                  target="_top">Expressions</a>.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#OFFSET
     *                 OFFSET}: A positive integer indicating the number of
     *                 initial results to skip from {@code sourceTableName}.
     *                 Default is 0. The minimum allowed value is 0. The
     *                 maximum allowed value is MAX_INT.  The default value is
     *                 '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#LIMIT
     *                 LIMIT}: A positive integer indicating the maximum number
     *                 of results to be returned from {@code sourceTableName}.
     *                 Or END_OF_SET (-9999) to indicate that the max number of
     *                 results should be returned.  The default value is
     *                 '-9999'.
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#EXPRESSION
     *                 EXPRESSION}: Optional filter expression to apply to the
     *                 {@code sourceTableName}.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#ORDER_BY
     *                 ORDER_BY}: Comma-separated list of the columns to be
     *                 sorted by from source table (specified by {@code
     *                 sourceTableName}), e.g., 'timestamp asc, x desc'. The
     *                 {@code order_by} columns do not have to be present in
     *                 {@code fieldMap}.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for inserting source table
     *                 records (specified by {@code sourceTableName}) into a
     *                 target table
     *                 (specified by {@code tableName}) with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>. If
     *                 set to {@code true}, any existing table record with
     *                 primary key values that match those of a source table
     *                 record being inserted will be replaced by that
     *                 new record (the new data will be "upserted"). If set to
     *                 {@code false}, any existing table record with primary
     *                 key values that match those of a source table record
     *                 being inserted will remain unchanged, while the
     *                 source record will be rejected and an error handled as
     *                 determined by
     *                 {@code ignore_existing_pk}.  If the specified table does
     *                 not have a primary key,
     *                 then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#TRUE
     *                 TRUE}: Upsert new records when primary keys match
     *                 existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#FALSE
     *                 FALSE}: Reject new records when primary keys match
     *                 existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 inserting source table records (specified by {@code
     *                 sourceTableName}) into a target table
     *                 (specified by {@code tableName}) with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only
     *                 used when not in upsert mode (upsert mode is disabled
     *                 when
     *                 {@code update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any source table record being inserted
     *                 that
     *                 is rejected for having primary key values that match
     *                 those of an existing target table record will
     *                 be ignored with no error generated.  If {@code false},
     *                 the rejection of any source table record for having
     *                 primary key values matching an existing target
     *                 table record will result in an error being raised.  If
     *                 the specified table does not have a primary
     *                 key or if upsert mode is in effect ({@code
     *                 update_on_existing_pk} is
     *                 {@code true}), then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#TRUE
     *                 TRUE}: Ignore source table records whose primary key
     *                 values collide with those of target table records
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#FALSE
     *                 FALSE}: Raise an error for any source table record whose
     *                 primary key values collide with those of a target table
     *                 record
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, it allows
     *                 inserting longer strings into smaller charN string
     *                 columns by truncating the longer strings to fit.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.AppendRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  AppendRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public AppendRecordsResponse appendRecords(String tableName, String sourceTableName, Map<String, String> fieldMap, Map<String, String> options) throws GPUdbException {
        AppendRecordsRequest actualRequest_ = new AppendRecordsRequest(tableName, sourceTableName, fieldMap, options);
        AppendRecordsResponse actualResponse_ = new AppendRecordsResponse();
        submitRequest("/append/records", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Clears statistics (cardinality, mean value, etc.) for a column in a
     * specified table.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ClearStatisticsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ClearStatisticsResponse clearStatistics(ClearStatisticsRequest request) throws GPUdbException {
        ClearStatisticsResponse actualResponse_ = new ClearStatisticsResponse();
        submitRequest("/clear/statistics", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Clears statistics (cardinality, mean value, etc.) for a column in a
     * specified table.
     * 
     * @param tableName  Name of a table, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>. Must be an
     *                   existing table.  The default value is ''.
     * @param columnName  Name of the column in {@code tableName} for which to
     *                    clear statistics. The column must be from an existing
     *                    table. An empty string clears statistics for all
     *                    columns in the table.  The default value is ''.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ClearStatisticsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ClearStatisticsResponse clearStatistics(String tableName, String columnName, Map<String, String> options) throws GPUdbException {
        ClearStatisticsRequest actualRequest_ = new ClearStatisticsRequest(tableName, columnName, options);
        ClearStatisticsResponse actualResponse_ = new ClearStatisticsResponse();
        submitRequest("/clear/statistics", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Clears (drops) one or all tables in the database cluster. The
     * operation is synchronous meaning that the table will be cleared before
     * the
     * function returns. The response payload returns the status of the
     * operation along
     * with the name of the table that was cleared.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ClearTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ClearTableResponse clearTable(ClearTableRequest request) throws GPUdbException {
        ClearTableResponse actualResponse_ = new ClearTableResponse();
        submitRequest("/clear/table", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Clears (drops) one or all tables in the database cluster. The
     * operation is synchronous meaning that the table will be cleared before
     * the
     * function returns. The response payload returns the status of the
     * operation along
     * with the name of the table that was cleared.
     * 
     * @param tableName  Name of the table to be cleared, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>. Must be an
     *                   existing table. Empty string clears all available
     *                   tables, though this behavior is be prevented by
     *                   default via gpudb.conf parameter 'disable_clear_all'.
     *                   The default value is ''.
     * @param authorization  No longer used. User can pass an empty string.
     *                       The default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ClearTableRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code true} and if the
     *                 table specified in {@code tableName} does not exist no
     *                 error is returned. If {@code false} and if the table
     *                 specified in {@code tableName} does not exist then an
     *                 error is returned.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ClearTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ClearTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ClearTableRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ClearTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ClearTableResponse clearTable(String tableName, String authorization, Map<String, String> options) throws GPUdbException {
        ClearTableRequest actualRequest_ = new ClearTableRequest(tableName, authorization, options);
        ClearTableResponse actualResponse_ = new ClearTableResponse();
        submitRequest("/clear/table", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deactivates a table monitor previously created with {@link
     * GPUdb#createTableMonitor(CreateTableMonitorRequest)}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ClearTableMonitorResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ClearTableMonitorResponse clearTableMonitor(ClearTableMonitorRequest request) throws GPUdbException {
        ClearTableMonitorResponse actualResponse_ = new ClearTableMonitorResponse();
        submitRequest("/clear/tablemonitor", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deactivates a table monitor previously created with {@link
     * GPUdb#createTableMonitor(String, Map)}.
     * 
     * @param topicId  The topic ID returned by {@link
     *                 GPUdb#createTableMonitor(String, Map)}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ClearTableMonitorRequest.Options#KEEP_AUTOGENERATED_SINK
     *                 KEEP_AUTOGENERATED_SINK}: If {@code true}, the
     *                 auto-generated <a
     *                 href="../../../../../concepts/data_sinks/"
     *                 target="_top">datasink</a> associated with this monitor,
     *                 if there is one, will be retained for further use. If
     *                 {@code false}, then the auto-generated sink will be
     *                 dropped if there are no other monitors referencing it.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ClearTableMonitorRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ClearTableMonitorRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ClearTableMonitorRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ClearTableMonitorRequest.Options#CLEAR_ALL_REFERENCES
     *                 CLEAR_ALL_REFERENCES}: If {@code true}, all references
     *                 that share the same {@code topicId} will be cleared.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ClearTableMonitorRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ClearTableMonitorRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ClearTableMonitorRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ClearTableMonitorResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ClearTableMonitorResponse clearTableMonitor(String topicId, Map<String, String> options) throws GPUdbException {
        ClearTableMonitorRequest actualRequest_ = new ClearTableMonitorRequest(topicId, options);
        ClearTableMonitorResponse actualResponse_ = new ClearTableMonitorResponse();
        submitRequest("/clear/tablemonitor", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Clears or cancels the trigger identified by the specified handle. The
     * output returns the handle of the trigger cleared as well as indicating
     * success or failure of the trigger deactivation.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ClearTriggerResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ClearTriggerResponse clearTrigger(ClearTriggerRequest request) throws GPUdbException {
        ClearTriggerResponse actualResponse_ = new ClearTriggerResponse();
        submitRequest("/clear/trigger", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Clears or cancels the trigger identified by the specified handle. The
     * output returns the handle of the trigger cleared as well as indicating
     * success or failure of the trigger deactivation.
     * 
     * @param triggerId  ID for the trigger to be deactivated.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ClearTriggerResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ClearTriggerResponse clearTrigger(String triggerId, Map<String, String> options) throws GPUdbException {
        ClearTriggerRequest actualRequest_ = new ClearTriggerRequest(triggerId, options);
        ClearTriggerResponse actualResponse_ = new ClearTriggerResponse();
        submitRequest("/clear/trigger", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Collect statistics for a column(s) in a specified table.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CollectStatisticsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CollectStatisticsResponse collectStatistics(CollectStatisticsRequest request) throws GPUdbException {
        CollectStatisticsResponse actualResponse_ = new CollectStatisticsResponse();
        submitRequest("/collect/statistics", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Collect statistics for a column(s) in a specified table.
     * 
     * @param tableName  Name of a table, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table.
     * @param columnNames  List of one or more column names in {@code
     *                     tableName} for which to collect statistics
     *                     (cardinality, mean value, etc.).
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CollectStatisticsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CollectStatisticsResponse collectStatistics(String tableName, List<String> columnNames, Map<String, String> options) throws GPUdbException {
        CollectStatisticsRequest actualRequest_ = new CollectStatisticsRequest(tableName, columnNames, options);
        CollectStatisticsResponse actualResponse_ = new CollectStatisticsResponse();
        submitRequest("/collect/statistics", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public CreateContainerRegistryResponse createContainerRegistry(CreateContainerRegistryRequest request) throws GPUdbException {
        CreateContainerRegistryResponse actualResponse_ = new CreateContainerRegistryResponse();
        submitRequest("/create/container/registry", request, actualResponse_, false);
        return actualResponse_;
    }



    public CreateContainerRegistryResponse createContainerRegistry(String registryName, String uri, String credential, Map<String, String> options) throws GPUdbException {
        CreateContainerRegistryRequest actualRequest_ = new CreateContainerRegistryRequest(registryName, uri, credential, options);
        CreateContainerRegistryResponse actualResponse_ = new CreateContainerRegistryResponse();
        submitRequest("/create/container/registry", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Create a new <a href="../../../../../concepts/credentials/"
     * target="_top">credential</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateCredentialResponse createCredential(CreateCredentialRequest request) throws GPUdbException {
        CreateCredentialResponse actualResponse_ = new CreateCredentialResponse();
        submitRequest("/create/credential", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Create a new <a href="../../../../../concepts/credentials/"
     * target="_top">credential</a>.
     * 
     * @param credentialName  Name of the credential to be created. Must
     *                        contain only letters, digits, and underscores,
     *                        and cannot begin with a digit. Must not match an
     *                        existing credential name.
     * @param type  Type of the credential to be created.
     *              Supported values:
     *              <ul>
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#AWS_ACCESS_KEY
     *              AWS_ACCESS_KEY}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#AWS_IAM_ROLE
     *              AWS_IAM_ROLE}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#AZURE_AD
     *              AZURE_AD}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#AZURE_OAUTH
     *              AZURE_OAUTH}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#AZURE_SAS
     *              AZURE_SAS}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#AZURE_STORAGE_KEY
     *              AZURE_STORAGE_KEY}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#DOCKER
     *              DOCKER}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#GCS_SERVICE_ACCOUNT_ID
     *              GCS_SERVICE_ACCOUNT_ID}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#GCS_SERVICE_ACCOUNT_KEYS
     *              GCS_SERVICE_ACCOUNT_KEYS}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#HDFS HDFS}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#JDBC JDBC}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#KAFKA
     *              KAFKA}
     *                      <li> {@link
     *              com.gpudb.protocol.CreateCredentialRequest.Type#CONFLUENT
     *              CONFLUENT}
     *              </ul>
     * @param identity  User of the credential to be created.
     * @param secret  Password of the credential to be created.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateCredentialResponse createCredential(String credentialName, String type, String identity, String secret, Map<String, String> options) throws GPUdbException {
        CreateCredentialRequest actualRequest_ = new CreateCredentialRequest(credentialName, type, identity, secret, options);
        CreateCredentialResponse actualResponse_ = new CreateCredentialResponse();
        submitRequest("/create/credential", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a <a href="../../../../../concepts/data_sinks/"
     * target="_top">data sink</a>, which contains the
     * destination information for a data sink that is external to the
     * database.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateDatasinkResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateDatasinkResponse createDatasink(CreateDatasinkRequest request) throws GPUdbException {
        CreateDatasinkResponse actualResponse_ = new CreateDatasinkResponse();
        submitRequest("/create/datasink", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a <a href="../../../../../concepts/data_sinks/"
     * target="_top">data sink</a>, which contains the
     * destination information for a data sink that is external to the
     * database.
     * 
     * @param name  Name of the data sink to be created.
     * @param destination  Destination for the output data in format
     *                     'storage_provider_type://path[:port]'.
     *                     Supported storage provider types are 'azure', 'gcs',
     *                     'hdfs', 'http', 'https', 'jdbc', 'kafka' and 's3'.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#CONNECTION_TIMEOUT
     *                 CONNECTION_TIMEOUT}: Timeout in seconds for connecting
     *                 to this data sink
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#WAIT_TIMEOUT
     *                 WAIT_TIMEOUT}: Timeout in seconds for waiting for a
     *                 response from this data sink
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#CREDENTIAL
     *                 CREDENTIAL}: Name of the <a
     *                 href="../../../../../concepts/credentials/"
     *                 target="_top">credential</a> object to be used in this
     *                 data sink
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#S3_BUCKET_NAME
     *                 S3_BUCKET_NAME}: Name of the Amazon S3 bucket to use as
     *                 the data sink
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#S3_REGION
     *                 S3_REGION}: Name of the Amazon S3 region where the given
     *                 bucket is located
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#S3_VERIFY_SSL
     *                 S3_VERIFY_SSL}: Set to false for testing purposes or
     *                 when necessary to bypass TLS errors (e.g. self-signed
     *                 certificates). This value is true by default.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#S3_USE_VIRTUAL_ADDRESSING
     *                 S3_USE_VIRTUAL_ADDRESSING}: When true (default), the
     *                 requests URI should be specified in virtual-hosted-style
     *                 format where the bucket name is part of the domain name
     *                 in the URL.
     *                 Otherwise set to false to use path-style URI for
     *                 requests.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#S3_AWS_ROLE_ARN
     *                 S3_AWS_ROLE_ARN}: Amazon IAM Role ARN which has required
     *                 S3 permissions that can be assumed for the given S3 IAM
     *                 user
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#S3_ENCRYPTION_CUSTOMER_ALGORITHM
     *                 S3_ENCRYPTION_CUSTOMER_ALGORITHM}: Customer encryption
     *                 algorithm used encrypting data
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#S3_ENCRYPTION_CUSTOMER_KEY
     *                 S3_ENCRYPTION_CUSTOMER_KEY}: Customer encryption key to
     *                 encrypt or decrypt data
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#S3_ENCRYPTION_TYPE
     *                 S3_ENCRYPTION_TYPE}: Server side encryption type
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#S3_KMS_KEY_ID
     *                 S3_KMS_KEY_ID}: KMS key
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#HDFS_KERBEROS_KEYTAB
     *                 HDFS_KERBEROS_KEYTAB}: Kerberos keytab file location for
     *                 the given HDFS user.  This may be a KIFS file.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#HDFS_DELEGATION_TOKEN
     *                 HDFS_DELEGATION_TOKEN}: Delegation token for the given
     *                 HDFS user
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#HDFS_USE_KERBEROS
     *                 HDFS_USE_KERBEROS}: Use kerberos authentication for the
     *                 given HDFS cluster
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#AZURE_STORAGE_ACCOUNT_NAME
     *                 AZURE_STORAGE_ACCOUNT_NAME}: Name of the Azure storage
     *                 account to use as the data sink, this is valid only if
     *                 tenant_id is specified
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#AZURE_CONTAINER_NAME
     *                 AZURE_CONTAINER_NAME}: Name of the Azure storage
     *                 container to use as the data sink
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#AZURE_TENANT_ID
     *                 AZURE_TENANT_ID}: Active Directory tenant ID (or
     *                 directory ID)
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#AZURE_SAS_TOKEN
     *                 AZURE_SAS_TOKEN}: Shared access signature token for
     *                 Azure storage account to use as the data sink
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#AZURE_OAUTH_TOKEN
     *                 AZURE_OAUTH_TOKEN}: Oauth token to access given storage
     *                 container
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#GCS_BUCKET_NAME
     *                 GCS_BUCKET_NAME}: Name of the Google Cloud Storage
     *                 bucket to use as the data sink
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#GCS_PROJECT_ID
     *                 GCS_PROJECT_ID}: Name of the Google Cloud project to use
     *                 as the data sink
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#GCS_SERVICE_ACCOUNT_KEYS
     *                 GCS_SERVICE_ACCOUNT_KEYS}: Google Cloud service account
     *                 keys to use for authenticating the data sink
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#JDBC_DRIVER_JAR_PATH
     *                 JDBC_DRIVER_JAR_PATH}: JDBC driver jar file location
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#JDBC_DRIVER_CLASS_NAME
     *                 JDBC_DRIVER_CLASS_NAME}: Name of the JDBC driver class
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#KAFKA_TOPIC_NAME
     *                 KAFKA_TOPIC_NAME}: Name of the Kafka topic to publish to
     *                 if {@code destination} is a Kafka broker
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#MAX_BATCH_SIZE
     *                 MAX_BATCH_SIZE}: Maximum number of records per
     *                 notification message.  The default value is '1'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#MAX_MESSAGE_SIZE
     *                 MAX_MESSAGE_SIZE}: Maximum size in bytes of each
     *                 notification message.  The default value is '1000000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#JSON_FORMAT
     *                 JSON_FORMAT}: The desired format of JSON encoded
     *                 notifications message.
     *                 If {@code nested}, records are returned as an array.
     *                 Otherwise, only a single record per messages is
     *                 returned.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FLAT
     *                 FLAT}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#NESTED
     *                 NESTED}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FLAT
     *                 FLAT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#USE_MANAGED_CREDENTIALS
     *                 USE_MANAGED_CREDENTIALS}: When no credentials are
     *                 supplied, we use anonymous access by default.  If this
     *                 is set, we will use cloud provider user settings.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#USE_HTTPS
     *                 USE_HTTPS}: Use https to connect to datasink if true,
     *                 otherwise use http
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#SKIP_VALIDATION
     *                 SKIP_VALIDATION}: Bypass validation of connection to
     *                 this data sink.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasinkRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateDatasinkResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateDatasinkResponse createDatasink(String name, String destination, Map<String, String> options) throws GPUdbException {
        CreateDatasinkRequest actualRequest_ = new CreateDatasinkRequest(name, destination, options);
        CreateDatasinkResponse actualResponse_ = new CreateDatasinkResponse();
        submitRequest("/create/datasink", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a <a href="../../../../../concepts/data_sources/"
     * target="_top">data source</a>, which contains the
     * location and connection information for a data store that is external to
     * the database.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateDatasourceResponse createDatasource(CreateDatasourceRequest request) throws GPUdbException {
        CreateDatasourceResponse actualResponse_ = new CreateDatasourceResponse();
        submitRequest("/create/datasource", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a <a href="../../../../../concepts/data_sources/"
     * target="_top">data source</a>, which contains the
     * location and connection information for a data store that is external to
     * the database.
     * 
     * @param name  Name of the data source to be created.
     * @param location  Location of the remote storage in
     *                  'storage_provider_type://[storage_path[:storage_port]]'
     *                  format.
     *                  Supported storage provider types are
     *                  'azure','gcs','hdfs','jdbc','kafka', 'confluent' and
     *                  's3'.
     * @param userName  Name of the remote system user; may be an empty string
     * @param password  Password for the remote system user; may be an empty
     *                  string
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#SKIP_VALIDATION
     *                 SKIP_VALIDATION}: Bypass validation of connection to
     *                 remote source.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#CONNECTION_TIMEOUT
     *                 CONNECTION_TIMEOUT}: Timeout in seconds for connecting
     *                 to this storage provider
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#WAIT_TIMEOUT
     *                 WAIT_TIMEOUT}: Timeout in seconds for reading from this
     *                 storage provider
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#CREDENTIAL
     *                 CREDENTIAL}: Name of the <a
     *                 href="../../../../../concepts/credentials"
     *                 target="_top">credential</a> object to be used in data
     *                 source
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#S3_BUCKET_NAME
     *                 S3_BUCKET_NAME}: Name of the Amazon S3 bucket to use as
     *                 the data source
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#S3_REGION
     *                 S3_REGION}: Name of the Amazon S3 region where the given
     *                 bucket is located
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#S3_VERIFY_SSL
     *                 S3_VERIFY_SSL}: Set to false for testing purposes or
     *                 when necessary to bypass TLS errors (e.g. self-signed
     *                 certificates). This value is true by default.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#S3_USE_VIRTUAL_ADDRESSING
     *                 S3_USE_VIRTUAL_ADDRESSING}: Whether to use virtual
     *                 addressing when referencing the Amazon S3 source
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}: The requests URI should be specified in
     *                 virtual-hosted-style format where the bucket name is
     *                 part of the domain name in the URL.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}: Use path-style URI for requests.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#S3_AWS_ROLE_ARN
     *                 S3_AWS_ROLE_ARN}: Amazon IAM Role ARN which has required
     *                 S3 permissions that can be assumed for the given S3 IAM
     *                 user
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#S3_ENCRYPTION_CUSTOMER_ALGORITHM
     *                 S3_ENCRYPTION_CUSTOMER_ALGORITHM}: Customer encryption
     *                 algorithm used encrypting data
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#S3_ENCRYPTION_CUSTOMER_KEY
     *                 S3_ENCRYPTION_CUSTOMER_KEY}: Customer encryption key to
     *                 encrypt or decrypt data
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#HDFS_KERBEROS_KEYTAB
     *                 HDFS_KERBEROS_KEYTAB}: Kerberos keytab file location for
     *                 the given HDFS user.  This may be a KIFS file.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#HDFS_DELEGATION_TOKEN
     *                 HDFS_DELEGATION_TOKEN}: Delegation token for the given
     *                 HDFS user
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#HDFS_USE_KERBEROS
     *                 HDFS_USE_KERBEROS}: Use kerberos authentication for the
     *                 given HDFS cluster
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#AZURE_STORAGE_ACCOUNT_NAME
     *                 AZURE_STORAGE_ACCOUNT_NAME}: Name of the Azure storage
     *                 account to use as the data source, this is valid only if
     *                 tenant_id is specified
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#AZURE_CONTAINER_NAME
     *                 AZURE_CONTAINER_NAME}: Name of the Azure storage
     *                 container to use as the data source
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#AZURE_TENANT_ID
     *                 AZURE_TENANT_ID}: Active Directory tenant ID (or
     *                 directory ID)
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#AZURE_SAS_TOKEN
     *                 AZURE_SAS_TOKEN}: Shared access signature token for
     *                 Azure storage account to use as the data source
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#AZURE_OAUTH_TOKEN
     *                 AZURE_OAUTH_TOKEN}: OAuth token to access given storage
     *                 container
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#GCS_BUCKET_NAME
     *                 GCS_BUCKET_NAME}: Name of the Google Cloud Storage
     *                 bucket to use as the data source
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#GCS_PROJECT_ID
     *                 GCS_PROJECT_ID}: Name of the Google Cloud project to use
     *                 as the data source
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#GCS_SERVICE_ACCOUNT_KEYS
     *                 GCS_SERVICE_ACCOUNT_KEYS}: Google Cloud service account
     *                 keys to use for authenticating the data source
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#IS_STREAM
     *                 IS_STREAM}: To load from Azure/GCS/S3 as a stream
     *                 continuously.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#KAFKA_TOPIC_NAME
     *                 KAFKA_TOPIC_NAME}: Name of the Kafka topic to use as the
     *                 data source
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#JDBC_DRIVER_JAR_PATH
     *                 JDBC_DRIVER_JAR_PATH}: JDBC driver jar file location.
     *                 This may be a KIFS file.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#JDBC_DRIVER_CLASS_NAME
     *                 JDBC_DRIVER_CLASS_NAME}: Name of the JDBC driver class
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#ANONYMOUS
     *                 ANONYMOUS}: Use anonymous connection to storage
     *                 provider--DEPRECATED: this is now the default.  Specify
     *                 use_managed_credentials for non-anonymous connection.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#USE_MANAGED_CREDENTIALS
     *                 USE_MANAGED_CREDENTIALS}: When no credentials are
     *                 supplied, we use anonymous access by default.  If this
     *                 is set, we will use cloud provider user settings.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#USE_HTTPS
     *                 USE_HTTPS}: Use https to connect to datasource if true,
     *                 otherwise use http
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#SCHEMA_REGISTRY_LOCATION
     *                 SCHEMA_REGISTRY_LOCATION}: Location of Confluent Schema
     *                 Registry in '[storage_path[:storage_port]]' format.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#SCHEMA_REGISTRY_CREDENTIAL
     *                 SCHEMA_REGISTRY_CREDENTIAL}: Confluent Schema Registry
     *                 <a href="../../../../../concepts/credentials"
     *                 target="_top">credential</a> object name.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDatasourceRequest.Options#SCHEMA_REGISTRY_PORT
     *                 SCHEMA_REGISTRY_PORT}: Confluent Schema Registry port
     *                 (optional).
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateDatasourceResponse createDatasource(String name, String location, String userName, String password, Map<String, String> options) throws GPUdbException {
        CreateDatasourceRequest actualRequest_ = new CreateDatasourceRequest(name, location, userName, password, options);
        CreateDatasourceResponse actualResponse_ = new CreateDatasourceResponse();
        submitRequest("/create/datasource", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public CreateDeltaTableResponse createDeltaTable(CreateDeltaTableRequest request) throws GPUdbException {
        CreateDeltaTableResponse actualResponse_ = new CreateDeltaTableResponse();
        submitRequest("/create/deltatable", request, actualResponse_, false);
        return actualResponse_;
    }



    public CreateDeltaTableResponse createDeltaTable(String deltaTableName, String tableName, Map<String, String> options) throws GPUdbException {
        CreateDeltaTableRequest actualRequest_ = new CreateDeltaTableRequest(deltaTableName, tableName, options);
        CreateDeltaTableResponse actualResponse_ = new CreateDeltaTableResponse();
        submitRequest("/create/deltatable", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new directory in <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>. The new
     * directory serves as a location in which the user can upload files using
     * {@link GPUdb#uploadFiles(UploadFilesRequest)}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateDirectoryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateDirectoryResponse createDirectory(CreateDirectoryRequest request) throws GPUdbException {
        CreateDirectoryResponse actualResponse_ = new CreateDirectoryResponse();
        submitRequest("/create/directory", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new directory in <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>. The new
     * directory serves as a location in which the user can upload files using
     * {@link GPUdb#uploadFiles(List, List, Map)}.
     * 
     * @param directoryName  Name of the directory in KiFS to be created.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDirectoryRequest.Options#CREATE_HOME_DIRECTORY
     *                 CREATE_HOME_DIRECTORY}: When set, a home directory is
     *                 created for the user name provided in the value. The
     *                 {@code directoryName} must be an empty string in this
     *                 case. The user must exist.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDirectoryRequest.Options#DATA_LIMIT
     *                 DATA_LIMIT}: The maximum capacity, in bytes, to apply to
     *                 the created directory. Set to -1 to indicate no upper
     *                 limit. If empty, the system default limit is applied.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDirectoryRequest.Options#NO_ERROR_IF_EXISTS
     *                 NO_ERROR_IF_EXISTS}: If {@code true}, does not return an
     *                 error if the directory already exists
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDirectoryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateDirectoryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateDirectoryRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateDirectoryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateDirectoryResponse createDirectory(String directoryName, Map<String, String> options) throws GPUdbException {
        CreateDirectoryRequest actualRequest_ = new CreateDirectoryRequest(directoryName, options);
        CreateDirectoryResponse actualResponse_ = new CreateDirectoryResponse();
        submitRequest("/create/directory", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new environment which can be used by <a
     * href="../../../../../concepts/udf/" target="_top">user-defined
     * functions</a> (UDF).
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateEnvironmentResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateEnvironmentResponse createEnvironment(CreateEnvironmentRequest request) throws GPUdbException {
        CreateEnvironmentResponse actualResponse_ = new CreateEnvironmentResponse();
        submitRequest("/create/environment", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new environment which can be used by <a
     * href="../../../../../concepts/udf/" target="_top">user-defined
     * functions</a> (UDF).
     * 
     * @param environmentName  Name of the environment to be created.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateEnvironmentResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateEnvironmentResponse createEnvironment(String environmentName, Map<String, String> options) throws GPUdbException {
        CreateEnvironmentRequest actualRequest_ = new CreateEnvironmentRequest(environmentName, options);
        CreateEnvironmentResponse actualResponse_ = new CreateEnvironmentResponse();
        submitRequest("/create/environment", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new graph network using given nodes, edges, weights, and
     * restrictions.

     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, the
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>,
     * and/or some <a href="../../../../../guide-tags/graph/"
     * target="_top">graph examples</a> before
     * using this endpoint.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateGraphResponse createGraph(CreateGraphRequest request) throws GPUdbException {
        CreateGraphResponse actualResponse_ = new CreateGraphResponse();
        submitRequest("/create/graph", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new graph network using given nodes, edges, weights, and
     * restrictions.

     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, the
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>,
     * and/or some <a href="../../../../../guide-tags/graph/"
     * target="_top">graph examples</a> before
     * using this endpoint.
     * 
     * @param graphName  Name of the graph resource to generate.
     * @param directedGraph  If set to {@code true}, the graph will be
     *                       directed. If set to {@code false}, the graph will
     *                       not be directed. Consult <a
     *                       href="../../../../../graph_solver/network_graph_solver/#directed-graphs"
     *                       target="_top">Directed Graphs</a> for more
     *                       details.
     *                       Supported values:
     *                       <ul>
     *                               <li> {@link
     *                       com.gpudb.protocol.CreateGraphRequest.DirectedGraph#TRUE
     *                       TRUE}
     *                               <li> {@link
     *                       com.gpudb.protocol.CreateGraphRequest.DirectedGraph#FALSE
     *                       FALSE}
     *                       </ul>
     *                       The default value is {@link
     *                       com.gpudb.protocol.CreateGraphRequest.DirectedGraph#TRUE
     *                       TRUE}.
     * @param nodes  Nodes represent fundamental topological units of a graph.
     *               Nodes must be specified using
     *               <a
     *               href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *               target="_top">identifiers</a>;
     *               identifiers are grouped as
     *               <a
     *               href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *               target="_top">combinations</a>.
     *               Identifiers can be used with existing column names, e.g.,
     *               'table.column AS NODE_ID', expressions, e.g.,
     *               'ST_MAKEPOINT(column1, column2) AS NODE_WKTPOINT', or
     *               constant values, e.g.,
     *               '{9, 10, 11} AS NODE_ID'.
     *               If using constant values in an identifier combination, the
     *               number of values
     *               specified must match across the combination.
     * @param edges  Edges represent the required fundamental topological unit
     *               of
     *               a graph that typically connect nodes. Edges must be
     *               specified using
     *               <a
     *               href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *               target="_top">identifiers</a>;
     *               identifiers are grouped as
     *               <a
     *               href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *               target="_top">combinations</a>.
     *               Identifiers can be used with existing column names, e.g.,
     *               'table.column AS EDGE_ID', expressions, e.g.,
     *               'SUBSTR(column, 1, 6) AS EDGE_NODE1_NAME', or constant
     *               values, e.g.,
     *               "{'family', 'coworker'} AS EDGE_LABEL".
     *               If using constant values in an identifier combination, the
     *               number of values
     *               specified must match across the combination.
     * @param weights  Weights represent a method of informing the graph solver
     *                 of
     *                 the cost of including a given edge in a solution.
     *                 Weights must be specified
     *                 using
     *                 <a
     *                 href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *                 target="_top">identifiers</a>;
     *                 identifiers are grouped as
     *                 <a
     *                 href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *                 target="_top">combinations</a>.
     *                 Identifiers can be used with existing column names,
     *                 e.g.,
     *                 'table.column AS WEIGHTS_EDGE_ID', expressions, e.g.,
     *                 'ST_LENGTH(wkt) AS WEIGHTS_VALUESPECIFIED', or constant
     *                 values, e.g.,
     *                 '{4, 15} AS WEIGHTS_VALUESPECIFIED'.
     *                 If using constant values in an identifier combination,
     *                 the number of values specified
     *                 must match across the combination.
     * @param restrictions  Restrictions represent a method of informing the
     *                      graph
     *                      solver which edges and/or nodes should be ignored
     *                      for the solution. Restrictions
     *                      must be specified using
     *                      <a
     *                      href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *                      target="_top">identifiers</a>;
     *                      identifiers are grouped as
     *                      <a
     *                      href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *                      target="_top">combinations</a>.
     *                      Identifiers can be used with existing column names,
     *                      e.g.,
     *                      'table.column AS RESTRICTIONS_EDGE_ID',
     *                      expressions, e.g.,
     *                      'column/2 AS RESTRICTIONS_VALUECOMPARED', or
     *                      constant values, e.g.,
     *                      '{0, 0, 0, 1} AS RESTRICTIONS_ONOFFCOMPARED'.
     *                      If using constant values in an identifier
     *                      combination, the number of values
     *                      specified must match across the combination.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#MERGE_TOLERANCE
     *                 MERGE_TOLERANCE}: If node geospatial positions are input
     *                 (e.g., WKTPOINT, X, Y), determines the minimum
     *                 separation allowed between unique nodes. If nodes are
     *                 within the tolerance of each other, they will be merged
     *                 as a single node.  The default value is '1.0E-5'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#RECREATE
     *                 RECREATE}: If set to {@code true} and the graph (using
     *                 {@code graphName}) already exists, the graph is deleted
     *                 and recreated.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#SAVE_PERSIST
     *                 SAVE_PERSIST}: If set to {@code true}, the graph will be
     *                 saved in the persist directory (see the <a
     *                 href="../../../../../config/#config-main-persistence"
     *                 target="_top">config reference</a> for more
     *                 information). If set to {@code false}, the graph will be
     *                 removed when the graph server is shutdown.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#ADD_TABLE_MONITOR
     *                 ADD_TABLE_MONITOR}: Adds a table monitor to every table
     *                 used in the creation of the graph; this table monitor
     *                 will trigger the graph to update dynamically upon
     *                 inserts to the source table(s). Note that upon database
     *                 restart, if {@code save_persist} is also set to {@code
     *                 true}, the graph will be fully reconstructed and the
     *                 table monitors will be reattached. For more details on
     *                 table monitors, see {@link
     *                 GPUdb#createTableMonitor(String, Map)}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#GRAPH_TABLE
     *                 GRAPH_TABLE}: If specified, the created graph is also
     *                 created as a table with the given name, in
     *                 [schema_name.]table_name format, using standard <a
     *                 href="../../../../../concepts/tables/#table-name-resolution"
     *                 target="_top">name resolution rules</a> and meeting <a
     *                 href="../../../../../concepts/tables/#table-naming-criteria"
     *                 target="_top">table naming criteria</a>.  The table will
     *                 have the following identifier columns: 'EDGE_ID',
     *                 'EDGE_NODE1_ID', 'EDGE_NODE2_ID'. If left blank, no
     *                 table is created.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#ADD_TURNS
     *                 ADD_TURNS}: Adds dummy 'pillowed' edges around
     *                 intersection nodes where there are more than three edges
     *                 so that additional weight penalties can be imposed by
     *                 the solve endpoints. (increases the total number of
     *                 edges).
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#IS_PARTITIONED
     *                 IS_PARTITIONED}:
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#SERVER_ID
     *                 SERVER_ID}: Indicates which graph server(s) to send the
     *                 request to. Default is to send to the server with the
     *                 most available memory.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#USE_RTREE
     *                 USE_RTREE}: Use an range tree structure to accelerate
     *                 and improve the accuracy of snapping, especially to
     *                 edges.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#LABEL_DELIMITER
     *                 LABEL_DELIMITER}: If provided the label string will be
     *                 split according to this delimiter and each sub-string
     *                 will be applied as a separate label onto the specified
     *                 edge.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#ALLOW_MULTIPLE_EDGES
     *                 ALLOW_MULTIPLE_EDGES}: Multigraph choice; allowing
     *                 multiple edges with the same node pairs if set to true,
     *                 otherwise, new edges with existing same node pairs will
     *                 not be inserted.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateGraphRequest.Options#TRUE
     *                 TRUE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateGraphResponse createGraph(String graphName, boolean directedGraph, List<String> nodes, List<String> edges, List<String> weights, List<String> restrictions, Map<String, String> options) throws GPUdbException {
        CreateGraphRequest actualRequest_ = new CreateGraphRequest(graphName, directedGraph, nodes, edges, weights, restrictions, options);
        CreateGraphResponse actualResponse_ = new CreateGraphResponse();
        submitRequest("/create/graph", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Create a job which will run asynchronously. The response returns a job
     * ID, which can be used to query the status and result of the job. The
     * status and the result of the job upon completion can be requested by
     * {@link GPUdb#getJob(GetJobRequest)}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateJobResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateJobResponse createJob(CreateJobRequest request) throws GPUdbException {
        CreateJobResponse actualResponse_ = new CreateJobResponse();
        submitRequest("/create/job", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Create a job which will run asynchronously. The response returns a job
     * ID, which can be used to query the status and result of the job. The
     * status and the result of the job upon completion can be requested by
     * {@link GPUdb#getJob(long, Map)}.
     * 
     * @param endpoint  Indicates which endpoint to execute, e.g.
     *                  '/alter/table'.
     * @param requestEncoding  The encoding of the request payload for the job.
     *                         Supported values:
     *                         <ul>
     *                                 <li> {@link
     *                         com.gpudb.protocol.CreateJobRequest.RequestEncoding#BINARY
     *                         BINARY}
     *                                 <li> {@link
     *                         com.gpudb.protocol.CreateJobRequest.RequestEncoding#JSON
     *                         JSON}
     *                                 <li> {@link
     *                         com.gpudb.protocol.CreateJobRequest.RequestEncoding#SNAPPY
     *                         SNAPPY}
     *                         </ul>
     *                         The default value is {@link
     *                         com.gpudb.protocol.CreateJobRequest.RequestEncoding#BINARY
     *                         BINARY}.
     * @param data  Binary-encoded payload for the job to be run
     *              asynchronously.  The payload must contain the relevant
     *              input parameters for the endpoint indicated in {@code
     *              endpoint}.  Please see the documentation for the
     *              appropriate endpoint to see what values must (or can) be
     *              specified.  If this parameter is used, then {@code
     *              requestEncoding} must be {@code binary} or {@code snappy}.
     * @param dataStr  JSON-encoded payload for the job to be run
     *                 asynchronously.  The payload must contain the relevant
     *                 input parameters for the endpoint indicated in {@code
     *                 endpoint}.  Please see the documentation for the
     *                 appropriate endpoint to see what values must (or can) be
     *                 specified.  If this parameter is used, then {@code
     *                 requestEncoding} must be {@code json}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJobRequest.Options#REMOVE_JOB_ON_COMPLETE
     *                 REMOVE_JOB_ON_COMPLETE}:
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJobRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJobRequest.Options#FALSE FALSE}
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJobRequest.Options#JOB_TAG
     *                 JOB_TAG}: Tag to use for submitted job. The same tag
     *                 could be used on backup cluster to retrieve response for
     *                 the job. Tags can use letter, numbers, '_' and '-'
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateJobResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateJobResponse createJob(String endpoint, String requestEncoding, ByteBuffer data, String dataStr, Map<String, String> options) throws GPUdbException {
        CreateJobRequest actualRequest_ = new CreateJobRequest(endpoint, requestEncoding, data, dataStr, options);
        CreateJobResponse actualResponse_ = new CreateJobResponse();
        submitRequest("/create/job", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a table that is the result of a SQL JOIN.
     * <p>
     * For join details and examples see: <a
     * href="../../../../../concepts/joins/" target="_top">Joins</a>.  For
     * limitations, see <a
     * href="../../../../../concepts/joins/#limitations-cautions"
     * target="_top">Join Limitations and Cautions</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateJoinTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateJoinTableResponse createJoinTable(CreateJoinTableRequest request) throws GPUdbException {
        CreateJoinTableResponse actualResponse_ = new CreateJoinTableResponse();
        submitRequest("/create/jointable", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a table that is the result of a SQL JOIN.
     * <p>
     * For join details and examples see: <a
     * href="../../../../../concepts/joins/" target="_top">Joins</a>.  For
     * limitations, see <a
     * href="../../../../../concepts/joins/#limitations-cautions"
     * target="_top">Join Limitations and Cautions</a>.
     * 
     * @param joinTableName  Name of the join table to be created, in
     *                       [schema_name.]table_name format, using standard <a
     *                       href="../../../../../concepts/tables/#table-name-resolution"
     *                       target="_top">name resolution rules</a> and
     *                       meeting <a
     *                       href="../../../../../concepts/tables/#table-naming-criteria"
     *                       target="_top">table naming criteria</a>.
     * @param tableNames  The list of table names composing the join, each in
     *                    [schema_name.]table_name format, using standard <a
     *                    href="../../../../../concepts/tables/#table-name-resolution"
     *                    target="_top">name resolution rules</a>.  Corresponds
     *                    to a SQL statement FROM clause.
     * @param columnNames  List of member table columns or column expressions
     *                     to be included in the join. Columns can be prefixed
     *                     with 'table_id.column_name', where 'table_id' is the
     *                     table name or alias.  Columns can be aliased via the
     *                     syntax 'column_name as alias'. Wild cards '*' can be
     *                     used to include all columns across member tables or
     *                     'table_id.*' for all of a single table's columns.
     *                     Columns and column expressions composing the join
     *                     must be uniquely named or aliased--therefore, the
     *                     '*' wild card cannot be used if column names aren't
     *                     unique across all tables.
     * @param expressions  An optional list of expressions to combine and
     *                     filter the joined tables.  Corresponds to a SQL
     *                     statement WHERE clause. For details see: <a
     *                     href="../../../../../concepts/expressions/"
     *                     target="_top">expressions</a>.  The default value is
     *                     an empty {@link List}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code joinTableName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_join_table_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the join as part of {@code
     *                 joinTableName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the join. If the schema is non-existent, it
     *                 will be automatically created.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#MAX_QUERY_DIMENSIONS
     *                 MAX_QUERY_DIMENSIONS}: No longer used.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#OPTIMIZE_LOOKUPS
     *                 OPTIMIZE_LOOKUPS}: Use more memory to speed up the
     *                 joining of tables.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#STRATEGY_DEFINITION
     *                 STRATEGY_DEFINITION}: The <a
     *                 href="../../../../../rm/concepts/#tier-strategies"
     *                 target="_top">tier strategy</a> for the table and its
     *                 columns.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#TTL
     *                 TTL}: Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the join table specified in
     *                 {@code joinTableName}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#VIEW_ID
     *                 VIEW_ID}: view this projection is part of.  The default
     *                 value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#NO_COUNT
     *                 NO_COUNT}: Return a count of 0 for the join table for
     *                 logging and for {@link GPUdb#showTable(String, Map)};
     *                 optimization needed for large overlapped equi-join
     *                 stencils.  The default value is 'false'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateJoinTableRequest.Options#CHUNK_SIZE
     *                 CHUNK_SIZE}: Maximum number of records per joined-chunk
     *                 for this table. Defaults to the gpudb.conf file chunk
     *                 size
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateJoinTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateJoinTableResponse createJoinTable(String joinTableName, List<String> tableNames, List<String> columnNames, List<String> expressions, Map<String, String> options) throws GPUdbException {
        CreateJoinTableRequest actualRequest_ = new CreateJoinTableRequest(joinTableName, tableNames, columnNames, expressions, options);
        CreateJoinTableResponse actualResponse_ = new CreateJoinTableResponse();
        submitRequest("/create/jointable", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Initiates the process of creating a materialized view, reserving the
     * view's name to prevent other views or tables from being created with
     * that name.
     * <p>
     * For materialized view details and examples, see
     * <a href="../../../../../concepts/materialized_views/"
     * target="_top">Materialized Views</a>.
     * <p>
     * The response contains {@code viewId}, which is used to tag each
     * subsequent
     * operation (projection, union, aggregation, filter, or join) that will
     * compose
     * the view.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateMaterializedViewResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateMaterializedViewResponse createMaterializedView(CreateMaterializedViewRequest request) throws GPUdbException {
        CreateMaterializedViewResponse actualResponse_ = new CreateMaterializedViewResponse();
        submitRequest("/create/materializedview", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Initiates the process of creating a materialized view, reserving the
     * view's name to prevent other views or tables from being created with
     * that name.
     * <p>
     * For materialized view details and examples, see
     * <a href="../../../../../concepts/materialized_views/"
     * target="_top">Materialized Views</a>.
     * <p>
     * The response contains {@code viewId}, which is used to tag each
     * subsequent
     * operation (projection, union, aggregation, filter, or join) that will
     * compose
     * the view.
     * 
     * @param tableName  Name of the table to be created that is the top-level
     *                   table of the materialized view, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a> and meeting <a
     *                   href="../../../../../concepts/tables/#table-naming-criteria"
     *                   target="_top">table naming criteria</a>.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the materialized view as part of
     *                 {@code tableName} and use {@link
     *                 GPUdb#createSchema(String, Map)} to create the schema if
     *                 non-existent]  Name of a schema which is to contain the
     *                 newly created view. If the schema provided is
     *                 non-existent, it will be automatically created.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#EXECUTE_AS
     *                 EXECUTE_AS}: User name to use to run the refresh job
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#PERSIST
     *                 PERSIST}: If {@code true}, then the materialized view
     *                 specified in {@code tableName} will be persisted and
     *                 will not expire unless a {@code ttl} is specified.   If
     *                 {@code false}, then the materialized view will be an
     *                 in-memory table and will expire unless a {@code ttl} is
     *                 specified otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#REFRESH_SPAN
     *                 REFRESH_SPAN}: Sets the future time-offset(in seconds)
     *                 at which periodic refresh stops
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#REFRESH_STOP_TIME
     *                 REFRESH_STOP_TIME}: When {@code refresh_method} is
     *                 {@code periodic}, specifies the time at which a periodic
     *                 refresh is stopped.  Value is a datetime string with
     *                 format 'YYYY-MM-DD HH:MM:SS'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#REFRESH_METHOD
     *                 REFRESH_METHOD}: Method by which the join can be
     *                 refreshed when the data in underlying member tables have
     *                 changed.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#MANUAL
     *                 MANUAL}: Refresh only occurs when manually requested by
     *                 calling {@link GPUdb#alterTable(String, String, String,
     *                 Map)} with an 'action' of 'refresh'
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#ON_QUERY
     *                 ON_QUERY}: Refresh any time the view is queried.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#ON_CHANGE
     *                 ON_CHANGE}: If possible, incrementally refresh (refresh
     *                 just those records added) whenever an insert, update,
     *                 delete or refresh of input table is done.  A full
     *                 refresh is done if an incremental refresh is not
     *                 possible.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#PERIODIC
     *                 PERIODIC}: Refresh table periodically at rate specified
     *                 by {@code refresh_period}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#MANUAL
     *                 MANUAL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#REFRESH_PERIOD
     *                 REFRESH_PERIOD}: When {@code refresh_method} is {@code
     *                 periodic}, specifies the period in seconds at which
     *                 refresh occurs
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#REFRESH_START_TIME
     *                 REFRESH_START_TIME}: When {@code refresh_method} is
     *                 {@code periodic}, specifies the first time at which a
     *                 refresh is to be done.  Value is a datetime string with
     *                 format 'YYYY-MM-DD HH:MM:SS'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateMaterializedViewRequest.Options#TTL
     *                 TTL}: Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the table specified in {@code
     *                 tableName}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateMaterializedViewResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateMaterializedViewResponse createMaterializedView(String tableName, Map<String, String> options) throws GPUdbException {
        CreateMaterializedViewRequest actualRequest_ = new CreateMaterializedViewRequest(tableName, options);
        CreateMaterializedViewResponse actualResponse_ = new CreateMaterializedViewResponse();
        submitRequest("/create/materializedview", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates an instance (proc) of the
     * <a href="../../../../../concepts/udf/" target="_top">user-defined
     * functions</a> (UDF) specified by the
     * given command, options, and files, and makes it available for execution.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateProcResponse createProc(CreateProcRequest request) throws GPUdbException {
        CreateProcResponse actualResponse_ = new CreateProcResponse();
        submitRequest("/create/proc", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates an instance (proc) of the
     * <a href="../../../../../concepts/udf/" target="_top">user-defined
     * functions</a> (UDF) specified by the
     * given command, options, and files, and makes it available for execution.
     * 
     * @param procName  Name of the proc to be created. Must not be the name of
     *                  a currently existing proc.
     * @param executionMode  The execution mode of the proc.
     *                       Supported values:
     *                       <ul>
     *                               <li> {@link
     *                       com.gpudb.protocol.CreateProcRequest.ExecutionMode#DISTRIBUTED
     *                       DISTRIBUTED}: Input table data will be divided
     *                       into data
     *                       segments that are distributed across all nodes in
     *                       the cluster, and the proc
     *                       command will be invoked once per data segment in
     *                       parallel. Output table data
     *                       from each invocation will be saved to the same
     *                       node as the corresponding input
     *                       data.
     *                               <li> {@link
     *                       com.gpudb.protocol.CreateProcRequest.ExecutionMode#NONDISTRIBUTED
     *                       NONDISTRIBUTED}: The proc command will be invoked
     *                       only once per
     *                       execution, and will not have direct access to any
     *                       tables named as input or
     *                       output table parameters in the call to {@link
     *                       GPUdb#executeProc(String, Map, Map, List, Map,
     *                       List, Map)}.  It will,
     *                       however, be able to access the database using
     *                       native API calls.
     *                       </ul>
     *                       The default value is {@link
     *                       com.gpudb.protocol.CreateProcRequest.ExecutionMode#DISTRIBUTED
     *                       DISTRIBUTED}.
     * @param files  A map of the files that make up the proc. The keys of the
     *               map are file names, and the values are the binary contents
     *               of the files. The
     *               file names may include subdirectory names (e.g.
     *               'subdir/file') but must not
     *               resolve to a directory above the root for the proc.
     *               Files may be loaded from existing files in KiFS. Those
     *               file names should be
     *               prefixed with the uri kifs:// and the values in the map
     *               should be empty.  The default value is an empty {@link
     *               Map}.
     * @param command  The command (excluding arguments) that will be invoked
     *                 when
     *                 the proc is executed. It will be invoked from the
     *                 directory containing the proc
     *                 {@code files} and may be any command that can be
     *                 resolved from that directory.
     *                 It need not refer to a file actually in that directory;
     *                 for example, it could be
     *                 'java' if the proc is a Java application; however, any
     *                 necessary external
     *                 programs must be preinstalled on every database node. If
     *                 the command refers to a
     *                 file in that directory, it must be preceded with './' as
     *                 per Linux convention.
     *                 If not specified, and exactly one file is provided in
     *                 {@code files}, that file
     *                 will be invoked.  The default value is ''.
     * @param args  An array of command-line arguments that will be passed to
     *              {@code command} when the proc is executed.  The default
     *              value is an empty {@link List}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProcRequest.Options#MAX_CONCURRENCY_PER_NODE
     *                 MAX_CONCURRENCY_PER_NODE}: The maximum number of
     *                 concurrent instances of the proc that will be executed
     *                 per node. 0 allows unlimited concurrency.  The default
     *                 value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProcRequest.Options#SET_ENVIRONMENT
     *                 SET_ENVIRONMENT}: A python environment to use when
     *                 executing the proc. Must be an existing environment,
     *                 else an error will be returned.  The default value is
     *                 ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateProcResponse createProc(String procName, String executionMode, Map<String, ByteBuffer> files, String command, List<String> args, Map<String, String> options) throws GPUdbException {
        CreateProcRequest actualRequest_ = new CreateProcRequest(procName, executionMode, files, command, args, options);
        CreateProcResponse actualResponse_ = new CreateProcResponse();
        submitRequest("/create/proc", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new <a href="../../../../../concepts/projections/"
     * target="_top">projection</a> of
     * an existing table. A projection represents a subset of the columns
     * (potentially
     * including derived columns) of a table.
     * <p>
     * For projection details and examples, see
     * <a href="../../../../../concepts/projections/"
     * target="_top">Projections</a>.  For limitations, see
     * <a href="../../../../../concepts/projections/#limitations-and-cautions"
     * target="_top">Projection Limitations and Cautions</a>.
     * <p>
     * <a href="../../../../../concepts/window/" target="_top">Window
     * functions</a>, which can perform
     * operations like moving averages, are available through this endpoint as
     * well as
     * {@link GPUdb#getRecordsByColumnRaw(GetRecordsByColumnRequest)}.
     * <p>
     * A projection can be created with a different
     * <a href="../../../../../concepts/tables/#shard-keys" target="_top">shard
     * key</a> than the source table.
     * By specifying {@code shard_key}, the projection will be sharded
     * according to the specified columns, regardless of how the source table
     * is
     * sharded.  The source table can even be unsharded or replicated.
     * <p>
     * If {@code tableName} is empty, selection is performed against a
     * single-row
     * virtual table.  This can be useful in executing temporal
     * (<a href="../../../../../concepts/expressions/#date-time-functions"
     * target="_top">NOW()</a>), identity
     * (<a href="../../../../../concepts/expressions/#user-security-functions"
     * target="_top">USER()</a>), or
     * constant-based functions
     * (<a href="../../../../../concepts/expressions/#scalar-functions"
     * target="_top">GEODIST(-77.11, 38.88, -71.06, 42.36)</a>).
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateProjectionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateProjectionResponse createProjection(CreateProjectionRequest request) throws GPUdbException {
        CreateProjectionResponse actualResponse_ = new CreateProjectionResponse();
        submitRequest("/create/projection", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new <a href="../../../../../concepts/projections/"
     * target="_top">projection</a> of
     * an existing table. A projection represents a subset of the columns
     * (potentially
     * including derived columns) of a table.
     * <p>
     * For projection details and examples, see
     * <a href="../../../../../concepts/projections/"
     * target="_top">Projections</a>.  For limitations, see
     * <a href="../../../../../concepts/projections/#limitations-and-cautions"
     * target="_top">Projection Limitations and Cautions</a>.
     * <p>
     * <a href="../../../../../concepts/window/" target="_top">Window
     * functions</a>, which can perform
     * operations like moving averages, are available through this endpoint as
     * well as
     * {@link GPUdb#getRecordsByColumnRaw(GetRecordsByColumnRequest)}.
     * <p>
     * A projection can be created with a different
     * <a href="../../../../../concepts/tables/#shard-keys" target="_top">shard
     * key</a> than the source table.
     * By specifying {@code shard_key}, the projection will be sharded
     * according to the specified columns, regardless of how the source table
     * is
     * sharded.  The source table can even be unsharded or replicated.
     * <p>
     * If {@code tableName} is empty, selection is performed against a
     * single-row
     * virtual table.  This can be useful in executing temporal
     * (<a href="../../../../../concepts/expressions/#date-time-functions"
     * target="_top">NOW()</a>), identity
     * (<a href="../../../../../concepts/expressions/#user-security-functions"
     * target="_top">USER()</a>), or
     * constant-based functions
     * (<a href="../../../../../concepts/expressions/#scalar-functions"
     * target="_top">GEODIST(-77.11, 38.88, -71.06, 42.36)</a>).
     * 
     * @param tableName  Name of the existing table on which the projection is
     *                   to be applied, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  An empty
     *                   table name creates a projection from a single-row
     *                   virtual table, where columns specified should be
     *                   constants or constant expressions.
     * @param projectionName  Name of the projection to be created, in
     *                        [schema_name.]table_name format, using standard
     *                        <a
     *                        href="../../../../../concepts/tables/#table-name-resolution"
     *                        target="_top">name resolution rules</a> and
     *                        meeting <a
     *                        href="../../../../../concepts/tables/#table-naming-criteria"
     *                        target="_top">table naming criteria</a>.
     * @param columnNames  List of columns from {@code tableName} to be
     *                     included in the projection. Can include derived
     *                     columns. Can be specified as aliased via the syntax
     *                     'column_name as alias'.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code projectionName}. If {@code
     *                 persist} is {@code false} (or unspecified), then this is
     *                 always allowed even if the caller does not have
     *                 permission to create tables. The generated name is
     *                 returned in {@code qualified_projection_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the projection as part of {@code
     *                 projectionName} and use {@link
     *                 GPUdb#createSchema(String, Map)} to create the schema if
     *                 non-existent]  Name of a schema for the projection. If
     *                 the schema is non-existent, it will be automatically
     *                 created.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#EXPRESSION
     *                 EXPRESSION}: An optional filter <a
     *                 href="../../../../../concepts/expressions/"
     *                 target="_top">expression</a> to be applied to the source
     *                 table prior to the projection.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#IS_REPLICATED
     *                 IS_REPLICATED}: If {@code true} then the projection will
     *                 be replicated even if the source table is not.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#OFFSET
     *                 OFFSET}: The number of initial results to skip (this can
     *                 be useful for paging through the results).  The default
     *                 value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#LIMIT
     *                 LIMIT}: The number of records to keep.  The default
     *                 value is '-9999'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#ORDER_BY
     *                 ORDER_BY}: Comma-separated list of the columns to be
     *                 sorted by; e.g. 'timestamp asc, x desc'.  The columns
     *                 specified must be present in {@code columnNames}.  If
     *                 any alias is given for any column name, the alias must
     *                 be used, rather than the original column name.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#CHUNK_SIZE
     *                 CHUNK_SIZE}: Indicates the number of records per chunk
     *                 to be used for this projection.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#CREATE_INDEXES
     *                 CREATE_INDEXES}: Comma-separated list of columns on
     *                 which to create indexes on the projection.  The columns
     *                 specified must be present in {@code columnNames}.  If
     *                 any alias is given for any column name, the alias must
     *                 be used, rather than the original column name.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TTL
     *                 TTL}: Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the projection specified in
     *                 {@code projectionName}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#SHARD_KEY
     *                 SHARD_KEY}: Comma-separated list of the columns to be
     *                 sharded on; e.g. 'column1, column2'.  The columns
     *                 specified must be present in {@code columnNames}.  If
     *                 any alias is given for any column name, the alias must
     *                 be used, rather than the original column name.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PERSIST
     *                 PERSIST}: If {@code true}, then the projection specified
     *                 in {@code projectionName} will be persisted and will not
     *                 expire unless a {@code ttl} is specified.   If {@code
     *                 false}, then the projection will be an in-memory table
     *                 and will expire unless a {@code ttl} is specified
     *                 otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PRESERVE_DICT_ENCODING
     *                 PRESERVE_DICT_ENCODING}: If {@code true}, then columns
     *                 that were dict encoded in the source table will be dict
     *                 encoded in the projection.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#RETAIN_PARTITIONS
     *                 RETAIN_PARTITIONS}: Determines whether the created
     *                 projection will retain the partitioning scheme from the
     *                 source table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_TYPE
     *                 PARTITION_TYPE}: <a
     *                 href="../../../../../concepts/tables/#partitioning"
     *                 target="_top">Partitioning</a> scheme to use.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#RANGE
     *                 RANGE}: Use <a
     *                 href="../../../../../concepts/tables/#partitioning-by-range"
     *                 target="_top">range partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#INTERVAL
     *                 INTERVAL}: Use <a
     *                 href="../../../../../concepts/tables/#partitioning-by-interval"
     *                 target="_top">interval partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#LIST
     *                 LIST}: Use <a
     *                 href="../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#HASH
     *                 HASH}: Use <a
     *                 href="../../../../../concepts/tables/#partitioning-by-hash"
     *                 target="_top">hash partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#SERIES
     *                 SERIES}: Use <a
     *                 href="../../../../../concepts/tables/#partitioning-by-series"
     *                 target="_top">series partitioning</a>.
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_KEYS
     *                 PARTITION_KEYS}: Comma-separated list of partition keys,
     *                 which are the columns or column expressions by which
     *                 records will be assigned to partitions defined by {@code
     *                 partition_definitions}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#PARTITION_DEFINITIONS
     *                 PARTITION_DEFINITIONS}: Comma-separated list of
     *                 partition definitions, whose format depends on the
     *                 choice of {@code partition_type}.  See <a
     *                 href="../../../../../concepts/tables/#partitioning-by-range"
     *                 target="_top">range partitioning</a>, <a
     *                 href="../../../../../concepts/tables/#partitioning-by-interval"
     *                 target="_top">interval partitioning</a>, <a
     *                 href="../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitioning</a>, <a
     *                 href="../../../../../concepts/tables/#partitioning-by-hash"
     *                 target="_top">hash partitioning</a>, or <a
     *                 href="../../../../../concepts/tables/#partitioning-by-series"
     *                 target="_top">series partitioning</a> for example
     *                 formats.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#IS_AUTOMATIC_PARTITION
     *                 IS_AUTOMATIC_PARTITION}: If {@code true}, a new
     *                 partition will be created for values which don't fall
     *                 into an existing partition.  Currently only supported
     *                 for <a
     *                 href="../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitions</a>.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#VIEW_ID
     *                 VIEW_ID}: ID of view of which this projection is a
     *                 member.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateProjectionRequest.Options#STRATEGY_DEFINITION
     *                 STRATEGY_DEFINITION}: The <a
     *                 href="../../../../../rm/concepts/#tier-strategies"
     *                 target="_top">tier strategy</a> for the table and its
     *                 columns.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateProjectionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateProjectionResponse createProjection(String tableName, String projectionName, List<String> columnNames, Map<String, String> options) throws GPUdbException {
        CreateProjectionRequest actualRequest_ = new CreateProjectionRequest(tableName, projectionName, columnNames, options);
        CreateProjectionResponse actualResponse_ = new CreateProjectionResponse();
        submitRequest("/create/projection", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new resource group to facilitate resource management.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateResourceGroupResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateResourceGroupResponse createResourceGroup(CreateResourceGroupRequest request) throws GPUdbException {
        CreateResourceGroupResponse actualResponse_ = new CreateResourceGroupResponse();
        submitRequest("/create/resourcegroup", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new resource group to facilitate resource management.
     * 
     * @param name  Name of the group to be created. Must contain only letters,
     *              digits, and underscores, and cannot begin with a digit.
     *              Must not match existing resource group name.
     * @param tierAttributes  Optional map containing tier names and their
     *                        respective attribute group limits.  The only
     *                        valid attribute limit that can be set is
     *                        max_memory (in bytes) for the VRAM & RAM tiers.
     *                        For instance, to set max VRAM capacity to 1GB and
     *                        max RAM capacity to 10GB, use:
     *                        {'VRAM':{'max_memory':'1000000000'},
     *                        'RAM':{'max_memory':'10000000000'}}
     *                        <ul>
     *                                <li> {@link
     *                        com.gpudb.protocol.CreateResourceGroupRequest.TierAttributes#MAX_MEMORY
     *                        MAX_MEMORY}: Maximum amount of memory usable in
     *                        the given tier at one time for this group.
     *                        </ul>
     *                        The default value is an empty {@link Map}.
     * @param ranking  Indicates the relative ranking among existing resource
     *                 groups where this new resource group will be placed.
     *                 When using {@code before} or {@code after}, specify
     *                 which resource group this one will be inserted before or
     *                 after in {@code adjoiningResourceGroup}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateResourceGroupRequest.Ranking#FIRST
     *                 FIRST}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateResourceGroupRequest.Ranking#LAST
     *                 LAST}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateResourceGroupRequest.Ranking#BEFORE
     *                 BEFORE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateResourceGroupRequest.Ranking#AFTER
     *                 AFTER}
     *                 </ul>
     * @param adjoiningResourceGroup  If {@code ranking} is {@code before} or
     *                                {@code after}, this field indicates the
     *                                resource group before or after which the
     *                                current group will be placed; otherwise,
     *                                leave blank.  The default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateResourceGroupRequest.Options#MAX_CPU_CONCURRENCY
     *                 MAX_CPU_CONCURRENCY}: Maximum number of simultaneous
     *                 threads that will be used to execute a request for this
     *                 group.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateResourceGroupRequest.Options#MAX_DATA
     *                 MAX_DATA}: Maximum amount of cumulative ram usage
     *                 regardless of tier status for this group.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateResourceGroupRequest.Options#MAX_SCHEDULING_PRIORITY
     *                 MAX_SCHEDULING_PRIORITY}: Maximum priority of a
     *                 scheduled task for this group.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateResourceGroupRequest.Options#MAX_TIER_PRIORITY
     *                 MAX_TIER_PRIORITY}: Maximum priority of a tiered object
     *                 for this group.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateResourceGroupResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateResourceGroupResponse createResourceGroup(String name, Map<String, Map<String, String>> tierAttributes, String ranking, String adjoiningResourceGroup, Map<String, String> options) throws GPUdbException {
        CreateResourceGroupRequest actualRequest_ = new CreateResourceGroupRequest(name, tierAttributes, ranking, adjoiningResourceGroup, options);
        CreateResourceGroupResponse actualResponse_ = new CreateResourceGroupResponse();
        submitRequest("/create/resourcegroup", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new role.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateRoleResponse createRole(CreateRoleRequest request) throws GPUdbException {
        CreateRoleResponse actualResponse_ = new CreateRoleResponse();
        submitRequest("/create/role", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new role.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param name  Name of the role to be created. Must contain only lowercase
     *              letters, digits, and underscores, and cannot begin with a
     *              digit. Must not be the same name as an existing user or
     *              role.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateRoleRequest.Options#RESOURCE_GROUP
     *                 RESOURCE_GROUP}: Name of an existing resource group to
     *                 associate with this user
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateRoleResponse createRole(String name, Map<String, String> options) throws GPUdbException {
        CreateRoleRequest actualRequest_ = new CreateRoleRequest(name, options);
        CreateRoleResponse actualResponse_ = new CreateRoleResponse();
        submitRequest("/create/role", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a SQL-style <a href="../../../../../concepts/schemas/"
     * target="_top">schema</a>. Schemas are containers for tables and views.
     * Multiple tables and views can be defined with the same name in different
     * schemas.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateSchemaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateSchemaResponse createSchema(CreateSchemaRequest request) throws GPUdbException {
        CreateSchemaResponse actualResponse_ = new CreateSchemaResponse();
        submitRequest("/create/schema", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a SQL-style <a href="../../../../../concepts/schemas/"
     * target="_top">schema</a>. Schemas are containers for tables and views.
     * Multiple tables and views can be defined with the same name in different
     * schemas.
     * 
     * @param schemaName  Name of the schema to be created.  Has the same
     *                    naming restrictions as <a
     *                    href="../../../../../concepts/tables/"
     *                    target="_top">tables</a>.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateSchemaRequest.Options#NO_ERROR_IF_EXISTS
     *                 NO_ERROR_IF_EXISTS}: If {@code true}, prevents an error
     *                 from occurring if the schema already exists.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateSchemaRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateSchemaRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateSchemaRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateSchemaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateSchemaResponse createSchema(String schemaName, Map<String, String> options) throws GPUdbException {
        CreateSchemaRequest actualRequest_ = new CreateSchemaRequest(schemaName, options);
        CreateSchemaResponse actualResponse_ = new CreateSchemaResponse();
        submitRequest("/create/schema", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public CreateStateTableResponse createStateTable(CreateStateTableRequest request) throws GPUdbException {
        CreateStateTableResponse actualResponse_ = new CreateStateTableResponse();
        submitRequest("/create/statetable", request, actualResponse_, false);
        return actualResponse_;
    }



    public CreateStateTableResponse createStateTable(String tableName, String inputTableName, String initTableName, Map<String, String> options) throws GPUdbException {
        CreateStateTableRequest actualRequest_ = new CreateStateTableRequest(tableName, inputTableName, initTableName, options);
        CreateStateTableResponse actualResponse_ = new CreateStateTableResponse();
        submitRequest("/create/statetable", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new table. If a new table is being created,
     * the type of the table is given by {@code typeId}, which must be the ID
     * of
     * a currently registered type (i.e. one created via {@link
     * GPUdb#createType(CreateTypeRequest)}).
     * <p>
     * A table may optionally be designated to use a
     * <a href="../../../../../concepts/tables/#replication"
     * target="_top">replicated</a> distribution scheme,
     * or be assigned: <a href="../../../../../concepts/tables/#foreign-keys"
     * target="_top">foreign keys</a> to
     * other tables, a <a href="../../../../../concepts/tables/#partitioning"
     * target="_top">partitioning</a>
     * scheme, and/or a <a href="../../../../../rm/concepts/#tier-strategies"
     * target="_top">tier strategy</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTableResponse createTable(CreateTableRequest request) throws GPUdbException {
        CreateTableResponse actualResponse_ = new CreateTableResponse();
        submitRequest("/create/table", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new table. If a new table is being created,
     * the type of the table is given by {@code typeId}, which must be the ID
     * of
     * a currently registered type (i.e. one created via {@link
     * GPUdb#createType(String, String, Map, Map)}).
     * <p>
     * A table may optionally be designated to use a
     * <a href="../../../../../concepts/tables/#replication"
     * target="_top">replicated</a> distribution scheme,
     * or be assigned: <a href="../../../../../concepts/tables/#foreign-keys"
     * target="_top">foreign keys</a> to
     * other tables, a <a href="../../../../../concepts/tables/#partitioning"
     * target="_top">partitioning</a>
     * scheme, and/or a <a href="../../../../../rm/concepts/#tier-strategies"
     * target="_top">tier strategy</a>.
     * 
     * @param tableName  Name of the table to be created, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a> and meeting <a
     *                   href="../../../../../concepts/tables/#table-naming-criteria"
     *                   target="_top">table naming criteria</a>. Error for
     *                   requests with existing table of the same name and type
     *                   ID may be suppressed by using the {@code
     *                   no_error_if_exists} option.
     * @param typeId  ID of a currently registered type. All objects added to
     *                the newly created table will be of this type.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#NO_ERROR_IF_EXISTS
     *                 NO_ERROR_IF_EXISTS}: If {@code true}, prevents an error
     *                 from occurring if the table already exists and is of the
     *                 given type.  If a table with the same ID but a different
     *                 type exists, it is still an error.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code tableName}. If {@code
     *                 is_result_table} is {@code true}, then this is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_table_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema as part of {@code tableName} and use
     *                 {@link GPUdb#createSchema(String, Map)} to create the
     *                 schema if non-existent]  Name of a schema which is to
     *                 contain the newly created table. If the schema is
     *                 non-existent, it will be automatically created.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#IS_COLLECTION
     *                 IS_COLLECTION}: [DEPRECATED--please use {@link
     *                 GPUdb#createSchema(String, Map)} to create a schema
     *                 instead]  Indicates whether to create a schema instead
     *                 of a table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#DISALLOW_HOMOGENEOUS_TABLES
     *                 DISALLOW_HOMOGENEOUS_TABLES}: No longer supported; value
     *                 will be ignored.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#IS_REPLICATED
     *                 IS_REPLICATED}: Affects the <a
     *                 href="../../../../../concepts/tables/#distribution"
     *                 target="_top">distribution scheme</a> for the table's
     *                 data.  If {@code true} and the given type has no
     *                 explicit <a
     *                 href="../../../../../concepts/tables/#shard-key"
     *                 target="_top">shard key</a> defined, the table will be
     *                 <a href="../../../../../concepts/tables/#replication"
     *                 target="_top">replicated</a>.  If {@code false}, the
     *                 table will be <a
     *                 href="../../../../../concepts/tables/#sharding"
     *                 target="_top">sharded</a> according to the shard key
     *                 specified in the given {@code typeId}, or <a
     *                 href="../../../../../concepts/tables/#random-sharding"
     *                 target="_top">randomly sharded</a>, if no shard key is
     *                 specified.  Note that a type containing a shard key
     *                 cannot be used to create a replicated table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FOREIGN_KEYS
     *                 FOREIGN_KEYS}: Semicolon-separated list of <a
     *                 href="../../../../../concepts/tables/#foreign-keys"
     *                 target="_top">foreign keys</a>, of the format
     *                 '(source_column_name [, ...]) references
     *                 target_table_name(primary_key_column_name [, ...]) [as
     *                 foreign_key_name]'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FOREIGN_SHARD_KEY
     *                 FOREIGN_SHARD_KEY}: Foreign shard key of the format
     *                 'source_column references shard_by_column from
     *                 target_table(primary_key_column)'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#PARTITION_TYPE
     *                 PARTITION_TYPE}: <a
     *                 href="../../../../../concepts/tables/#partitioning"
     *                 target="_top">Partitioning</a> scheme to use.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#RANGE
     *                 RANGE}: Use <a
     *                 href="../../../../../concepts/tables/#partitioning-by-range"
     *                 target="_top">range partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#INTERVAL
     *                 INTERVAL}: Use <a
     *                 href="../../../../../concepts/tables/#partitioning-by-interval"
     *                 target="_top">interval partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#LIST
     *                 LIST}: Use <a
     *                 href="../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#HASH
     *                 HASH}: Use <a
     *                 href="../../../../../concepts/tables/#partitioning-by-hash"
     *                 target="_top">hash partitioning</a>.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#SERIES
     *                 SERIES}: Use <a
     *                 href="../../../../../concepts/tables/#partitioning-by-series"
     *                 target="_top">series partitioning</a>.
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#PARTITION_KEYS
     *                 PARTITION_KEYS}: Comma-separated list of partition keys,
     *                 which are the columns or column expressions by which
     *                 records will be assigned to partitions defined by {@code
     *                 partition_definitions}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#PARTITION_DEFINITIONS
     *                 PARTITION_DEFINITIONS}: Comma-separated list of
     *                 partition definitions, whose format depends on the
     *                 choice of {@code partition_type}.  See <a
     *                 href="../../../../../concepts/tables/#partitioning-by-range"
     *                 target="_top">range partitioning</a>, <a
     *                 href="../../../../../concepts/tables/#partitioning-by-interval"
     *                 target="_top">interval partitioning</a>, <a
     *                 href="../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitioning</a>, <a
     *                 href="../../../../../concepts/tables/#partitioning-by-hash"
     *                 target="_top">hash partitioning</a>, or <a
     *                 href="../../../../../concepts/tables/#partitioning-by-series"
     *                 target="_top">series partitioning</a> for example
     *                 formats.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#IS_AUTOMATIC_PARTITION
     *                 IS_AUTOMATIC_PARTITION}: If {@code true}, a new
     *                 partition will be created for values which don't fall
     *                 into an existing partition.  Currently only supported
     *                 for <a
     *                 href="../../../../../concepts/tables/#partitioning-by-list"
     *                 target="_top">list partitions</a>.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#TTL TTL}:
     *                 Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the table specified in {@code
     *                 tableName}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#CHUNK_SIZE
     *                 CHUNK_SIZE}: Indicates the number of records per chunk
     *                 to be used for this table.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#IS_RESULT_TABLE
     *                 IS_RESULT_TABLE}: Indicates whether the table is a <a
     *                 href="../../../../../concepts/tables_memory_only/"
     *                 target="_top">memory-only table</a>. A result table
     *                 cannot contain columns with store_only or text_search <a
     *                 href="../../../../../concepts/types/#data-handling"
     *                 target="_top">data-handling</a> or that are <a
     *                 href="../../../../../concepts/types/#primitive-types"
     *                 target="_top">non-charN strings</a>, and it will not be
     *                 retained if the server is restarted.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableRequest.Options#STRATEGY_DEFINITION
     *                 STRATEGY_DEFINITION}: The <a
     *                 href="../../../../../rm/concepts/#tier-strategies"
     *                 target="_top">tier strategy</a> for the table and its
     *                 columns.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTableResponse createTable(String tableName, String typeId, Map<String, String> options) throws GPUdbException {
        CreateTableRequest actualRequest_ = new CreateTableRequest(tableName, typeId, options);
        CreateTableResponse actualResponse_ = new CreateTableResponse();
        submitRequest("/create/table", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new <a href="../../../../../concepts/external_tables/"
     * target="_top">external table</a>, which is a
     * local database object whose source data is located externally to the
     * database.  The source data can
     * be located either in <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>; on the cluster, accessible to the database; or
     * remotely, accessible via a pre-defined external <a
     * href="../../../../../concepts/data_sources/" target="_top">data
     * source</a>.
     * <p>
     * The external table can have its structure defined explicitly, via {@code
     * createTableOptions},
     * which contains many of the options from {@link
     * GPUdb#createTable(CreateTableRequest)}; or defined implicitly, inferred
     * from the source data.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTableExternalResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTableExternalResponse createTableExternal(CreateTableExternalRequest request) throws GPUdbException {
        CreateTableExternalResponse actualResponse_ = new CreateTableExternalResponse();
        submitRequest("/create/table/external", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new <a href="../../../../../concepts/external_tables/"
     * target="_top">external table</a>, which is a
     * local database object whose source data is located externally to the
     * database.  The source data can
     * be located either in <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>; on the cluster, accessible to the database; or
     * remotely, accessible via a pre-defined external <a
     * href="../../../../../concepts/data_sources/" target="_top">data
     * source</a>.
     * <p>
     * The external table can have its structure defined explicitly, via {@code
     * createTableOptions},
     * which contains many of the options from {@link GPUdb#createTable(String,
     * String, Map)}; or defined implicitly, inferred
     * from the source data.
     * 
     * @param tableName  Name of the table to be created, in
     *                   [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a> and meeting
     *                   <a
     *                   href="../../../../../concepts/tables/#table-naming-criteria"
     *                   target="_top">table naming criteria</a>.
     * @param filepaths  A list of file paths from which data will be sourced;
     *                   For paths in <a href="../../../../../tools/kifs/"
     *                   target="_top">KiFS</a>, use the uri prefix of kifs://
     *                   followed by the path to
     *                   a file or directory. File matching by prefix is
     *                   supported, e.g. kifs://dir/file would match dir/file_1
     *                   and dir/file_2. When prefix matching is used, the path
     *                   must start with a full, valid KiFS directory name.
     *                   If an external data source is specified in {@code
     *                   datasource_name}, these file
     *                   paths must resolve to accessible files at that data
     *                   source location. Prefix matching is supported.
     *                   If the data source is hdfs, prefixes must be aligned
     *                   with directories, i.e. partial file names will
     *                   not match.
     *                   If no data source is specified, the files are assumed
     *                   to be local to the database and must all be
     *                   accessible to the gpudb user, residing on the path (or
     *                   relative to the path) specified by the
     *                   external files directory in the Kinetica
     *                   <a
     *                   href="../../../../../config/#config-main-external-files"
     *                   target="_top">configuration file</a>. Wildcards (*)
     *                   can be used to
     *                   specify a group of files.  Prefix matching is
     *                   supported, the prefixes must be aligned with
     *                   directories.
     *                   If the first path ends in .tsv, the text delimiter
     *                   will be defaulted to a tab character.
     *                   If the first path ends in .psv, the text delimiter
     *                   will be defaulted to a pipe character (|).
     * @param modifyColumns  Not implemented yet.  The default value is an
     *                       empty {@link Map}.
     * @param createTableOptions  Options from {@link GPUdb#createTable(String,
     *                            String, Map)}, allowing the structure of the
     *                            table to
     *                            be defined independently of the data source
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#TYPE_ID
     *                            TYPE_ID}: ID of a currently registered <a
     *                            href="../../../../../concepts/types/"
     *                            target="_top">type</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#NO_ERROR_IF_EXISTS
     *                            NO_ERROR_IF_EXISTS}: If {@code true},
     *                            prevents an error from occurring if the table
     *                            already exists and is of the given type.  If
     *                            a table with
     *                            the same name but a different type exists, it
     *                            is still an error.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#IS_REPLICATED
     *                            IS_REPLICATED}: Affects the <a
     *                            href="../../../../../concepts/tables/#distribution"
     *                            target="_top">distribution scheme</a>
     *                            for the table's data.  If {@code true} and
     *                            the
     *                            given table has no explicit <a
     *                            href="../../../../../concepts/tables/#shard-key"
     *                            target="_top">shard key</a> defined, the
     *                            table will be <a
     *                            href="../../../../../concepts/tables/#replication"
     *                            target="_top">replicated</a>.  If
     *                            {@code false}, the table will be
     *                            <a
     *                            href="../../../../../concepts/tables/#sharding"
     *                            target="_top">sharded</a> according to the
     *                            shard key specified in the
     *                            given {@code type_id}, or
     *                            <a
     *                            href="../../../../../concepts/tables/#random-sharding"
     *                            target="_top">randomly sharded</a>, if no
     *                            shard key is specified.
     *                            Note that a type containing a shard key
     *                            cannot be used to create a replicated table.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#FOREIGN_KEYS
     *                            FOREIGN_KEYS}: Semicolon-separated list of
     *                            <a
     *                            href="../../../../../concepts/tables/#foreign-keys"
     *                            target="_top">foreign keys</a>, of the format
     *                            '(source_column_name [, ...]) references
     *                            target_table_name(primary_key_column_name [,
     *                            ...]) [as foreign_key_name]'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#FOREIGN_SHARD_KEY
     *                            FOREIGN_SHARD_KEY}: Foreign shard key of the
     *                            format
     *                            'source_column references shard_by_column
     *                            from target_table(primary_key_column)'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#PARTITION_TYPE
     *                            PARTITION_TYPE}: <a
     *                            href="../../../../../concepts/tables/#partitioning"
     *                            target="_top">Partitioning</a> scheme to use.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#RANGE
     *                            RANGE}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#INTERVAL
     *                            INTERVAL}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#LIST
     *                            LIST}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#HASH
     *                            HASH}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#SERIES
     *                            SERIES}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a>.
     *                            </ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#PARTITION_KEYS
     *                            PARTITION_KEYS}: Comma-separated list of
     *                            partition keys, which are the columns or
     *                            column expressions by which records will be
     *                            assigned to partitions defined by
     *                            {@code partition_definitions}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#PARTITION_DEFINITIONS
     *                            PARTITION_DEFINITIONS}: Comma-separated list
     *                            of partition definitions, whose format
     *                            depends
     *                            on the choice of {@code partition_type}.  See
     *                            <a
     *                            href="../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>,
     *                            <a
     *                            href="../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>,
     *                            <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>,
     *                            <a
     *                            href="../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>, or
     *                            <a
     *                            href="../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a> for
     *                            example formats.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#IS_AUTOMATIC_PARTITION
     *                            IS_AUTOMATIC_PARTITION}: If {@code true},
     *                            a new partition will be created for values
     *                            which don't fall into an existing partition.
     *                            Currently,
     *                            only supported for <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitions</a>.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#TTL
     *                            TTL}: Sets the <a
     *                            href="../../../../../concepts/ttl/"
     *                            target="_top">TTL</a> of the table specified
     *                            in {@code tableName}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#CHUNK_SIZE
     *                            CHUNK_SIZE}: Indicates the number of records
     *                            per chunk to be used for this table.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#IS_RESULT_TABLE
     *                            IS_RESULT_TABLE}: Indicates whether the table
     *                            is a
     *                            <a
     *                            href="../../../../../concepts/tables_memory_only/"
     *                            target="_top">memory-only table</a>. A result
     *                            table cannot contain
     *                            columns with store_only or text_search
     *                            <a
     *                            href="../../../../../concepts/types/#data-handling"
     *                            target="_top">data-handling</a> or that are
     *                            <a
     *                            href="../../../../../concepts/types/#primitive-types"
     *                            target="_top">non-charN strings</a>, and it
     *                            will not be retained if
     *                            the server is restarted.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.CreateTableExternalRequest.CreateTableOptions#STRATEGY_DEFINITION
     *                            STRATEGY_DEFINITION}: The <a
     *                            href="../../../../../rm/concepts/#tier-strategies"
     *                            target="_top">tier strategy</a>
     *                            for the table and its columns.
     *                            </ul>
     *                            The default value is an empty {@link Map}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#BAD_RECORD_TABLE_NAME
     *                 BAD_RECORD_TABLE_NAME}: Name of a table to which records
     *                 that were rejected are written.
     *                 The bad-record-table has the following columns:
     *                 line_number (long), line_rejected (string),
     *                 error_message (string).  When {@code error_handling} is
     *                 {@code abort}, bad records table is not populated.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#BAD_RECORD_TABLE_LIMIT
     *                 BAD_RECORD_TABLE_LIMIT}: A positive integer indicating
     *                 the maximum number of records that can be
     *                 written to the bad-record-table.  The default value is
     *                 '10000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#BAD_RECORD_TABLE_LIMIT_PER_INPUT
     *                 BAD_RECORD_TABLE_LIMIT_PER_INPUT}: For subscriptions, a
     *                 positive integer indicating the maximum number
     *                 of records that can be written to the bad-record-table
     *                 per file/payload. Default value will be
     *                 {@code bad_record_table_limit} and total size of the
     *                 table per rank is limited to
     *                 {@code bad_record_table_limit}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#BATCH_SIZE
     *                 BATCH_SIZE}: Number of records to insert per batch when
     *                 inserting data.  The default value is '50000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#COLUMN_FORMATS
     *                 COLUMN_FORMATS}: For each target column specified,
     *                 applies the column-property-bound
     *                 format to the source data loaded into that column.  Each
     *                 column format will contain a mapping of one
     *                 or more of its column properties to an appropriate
     *                 format for each property.  Currently supported
     *                 column properties include date, time, & datetime. The
     *                 parameter value must be formatted as a JSON
     *                 string of maps of column names to maps of column
     *                 properties to their corresponding column formats,
     *                 e.g.,
     *                 '{ "order_date" : { "date" : "%Y.%m.%d" }, "order_time"
     *                 : { "time" : "%H:%M:%S" } }'.
     *                 See {@code default_column_formats} for valid format
     *                 syntax.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#COLUMNS_TO_LOAD
     *                 COLUMNS_TO_LOAD}: Specifies a comma-delimited list of
     *                 columns from the source data to
     *                 load.  If more than one file is being loaded, this list
     *                 applies to all files.
     *                 Column numbers can be specified discretely or as a
     *                 range.  For example, a value of '5,7,1..3' will
     *                 insert values from the fifth column in the source data
     *                 into the first column in the target table,
     *                 from the seventh column in the source data into the
     *                 second column in the target table, and from the
     *                 first through third columns in the source data into the
     *                 third through fifth columns in the target
     *                 table.
     *                 If the source data contains a header, column names
     *                 matching the file header names may be provided
     *                 instead of column numbers.  If the target table doesn't
     *                 exist, the table will be created with the
     *                 columns in this order.  If the target table does exist
     *                 with columns in a different order than the
     *                 source data, this list can be used to match the order of
     *                 the target table.  For example, a value of
     *                 'C, B, A' will create a three column table with column
     *                 C, followed by column B, followed by column
     *                 A; or will insert those fields in that order into a
     *                 table created with columns in that order.  If
     *                 the target table exists, the column names must match the
     *                 source data field names for a name-mapping
     *                 to be successful.
     *                 Mutually exclusive with {@code columns_to_skip}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#COLUMNS_TO_SKIP
     *                 COLUMNS_TO_SKIP}: Specifies a comma-delimited list of
     *                 columns from the source data to
     *                 skip.  Mutually exclusive with {@code columns_to_load}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#COMPRESSION_TYPE
     *                 COMPRESSION_TYPE}: Source data compression type
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#NONE
     *                 NONE}: No compression.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#AUTO
     *                 AUTO}: Auto detect compression type
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#GZIP
     *                 GZIP}: gzip file compression.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#BZIP2
     *                 BZIP2}: bzip2 file compression.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#AUTO
     *                 AUTO}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#DATASOURCE_NAME
     *                 DATASOURCE_NAME}: Name of an existing external data
     *                 source from which data file(s) specified in {@code
     *                 filepaths} will be loaded
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#DEFAULT_COLUMN_FORMATS
     *                 DEFAULT_COLUMN_FORMATS}: Specifies the default format to
     *                 be applied to source data loaded
     *                 into columns with the corresponding column property.
     *                 Currently supported column properties include
     *                 date, time, & datetime.  This default
     *                 column-property-bound format can be overridden by
     *                 specifying a
     *                 column property & format for a given target column in
     *                 {@code column_formats}. For
     *                 each specified annotation, the format will apply to all
     *                 columns with that annotation unless a custom
     *                 {@code column_formats} for that annotation is specified.
     *                 The parameter value must be formatted as a JSON string
     *                 that is a map of column properties to their
     *                 respective column formats, e.g., '{ "date" : "%Y.%m.%d",
     *                 "time" : "%H:%M:%S" }'.  Column
     *                 formats are specified as a string of control characters
     *                 and plain text. The supported control
     *                 characters are 'Y', 'm', 'd', 'H', 'M', 'S', and 's',
     *                 which follow the Linux 'strptime()'
     *                 specification, as well as 's', which specifies seconds
     *                 and fractional seconds (though the fractional
     *                 component will be truncated past milliseconds).
     *                 Formats for the 'date' annotation must include the 'Y',
     *                 'm', and 'd' control characters. Formats for
     *                 the 'time' annotation must include the 'H', 'M', and
     *                 either 'S' or 's' (but not both) control
     *                 characters. Formats for the 'datetime' annotation meet
     *                 both the 'date' and 'time' control character
     *                 requirements. For example, '{"datetime" : "%m/%d/%Y
     *                 %H:%M:%S" }' would be used to interpret text
     *                 as "05/04/2000 12:12:11"
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#ERROR_HANDLING
     *                 ERROR_HANDLING}: Specifies how errors should be handled
     *                 upon insertion.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#PERMISSIVE
     *                 PERMISSIVE}: Records with missing columns are populated
     *                 with nulls if possible; otherwise, the malformed records
     *                 are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#IGNORE_BAD_RECORDS
     *                 IGNORE_BAD_RECORDS}: Malformed records are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#ABORT
     *                 ABORT}: Stops current insertion and aborts entire
     *                 operation when an error is encountered.  Primary key
     *                 collisions are considered abortable errors in this mode.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#ABORT
     *                 ABORT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#EXTERNAL_TABLE_TYPE
     *                 EXTERNAL_TABLE_TYPE}: Specifies whether the external
     *                 table holds a local copy of the external data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#MATERIALIZED
     *                 MATERIALIZED}: Loads a copy of the external data into
     *                 the database, refreshed on demand
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#LOGICAL
     *                 LOGICAL}: External data will not be loaded into the
     *                 database; the data will be retrieved from the source
     *                 upon servicing each query against the external table
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#MATERIALIZED
     *                 MATERIALIZED}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FILE_TYPE
     *                 FILE_TYPE}: Specifies the type of the file(s) whose
     *                 records will be inserted.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#AVRO
     *                 AVRO}: Avro file format
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#DELIMITED_TEXT
     *                 DELIMITED_TEXT}: Delimited text file format; e.g., CSV,
     *                 TSV, PSV, etc.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#GDB
     *                 GDB}: Esri/GDB file format
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#JSON
     *                 JSON}: Json file format
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#PARQUET
     *                 PARQUET}: Apache Parquet file format
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#SHAPEFILE
     *                 SHAPEFILE}: ShapeFile file format
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#DELIMITED_TEXT
     *                 DELIMITED_TEXT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#GDAL_CONFIGURATION_OPTIONS
     *                 GDAL_CONFIGURATION_OPTIONS}: Comma separated list of
     *                 gdal conf options, for the specific requets: key=value
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 inserting into a table with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only used when
     *                 not in upsert mode (upsert mode is disabled when {@code
     *                 update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any record being inserted that is rejected
     *                 for having primary key values that match those of an
     *                 existing table record will be ignored with no
     *                 error generated.  If {@code false}, the rejection of any
     *                 record for having primary key values matching an
     *                 existing record will result in an error being
     *                 reported, as determined by {@code error_handling}.  If
     *                 the specified table does not
     *                 have a primary key or if upsert mode is in effect
     *                 ({@code update_on_existing_pk} is
     *                 {@code true}), then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TRUE
     *                 TRUE}: Ignore new records whose primary key values
     *                 collide with those of existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}: Treat as errors any new records whose primary
     *                 key values collide with those of existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#INGESTION_MODE
     *                 INGESTION_MODE}: Whether to do a full load, dry run, or
     *                 perform a type inference on the source data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FULL
     *                 FULL}: Run a type inference on the source data (if
     *                 needed) and ingest
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#DRY_RUN
     *                 DRY_RUN}: Does not load data, but walks through the
     *                 source data and determines the number of valid records,
     *                 taking into account the current mode of {@code
     *                 error_handling}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TYPE_INFERENCE_ONLY
     *                 TYPE_INFERENCE_ONLY}: Infer the type of the source data
     *                 and return, without ingesting any data.  The inferred
     *                 type is returned in the response.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FULL
     *                 FULL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#JDBC_FETCH_SIZE
     *                 JDBC_FETCH_SIZE}: The JDBC fetch size, which determines
     *                 how many rows to fetch per round trip.  The default
     *                 value is '50000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#KAFKA_CONSUMERS_PER_RANK
     *                 KAFKA_CONSUMERS_PER_RANK}: Number of Kafka consumer
     *                 threads per rank (valid range 1-6).  The default value
     *                 is '1'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#KAFKA_GROUP_ID
     *                 KAFKA_GROUP_ID}: The group id to be used when consuming
     *                 data from a Kafka topic (valid only for Kafka datasource
     *                 subscriptions).
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#KAFKA_OFFSET_RESET_POLICY
     *                 KAFKA_OFFSET_RESET_POLICY}: Policy to determine whether
     *                 the Kafka data consumption starts either at earliest
     *                 offset or latest offset.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#EARLIEST
     *                 EARLIEST}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#LATEST
     *                 LATEST}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#EARLIEST
     *                 EARLIEST}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#KAFKA_OPTIMISTIC_INGEST
     *                 KAFKA_OPTIMISTIC_INGEST}: Enable optimistic ingestion
     *                 where Kafka topic offsets and table data are committed
     *                 independently to achieve parallelism.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#KAFKA_SUBSCRIPTION_CANCEL_AFTER
     *                 KAFKA_SUBSCRIPTION_CANCEL_AFTER}: Sets the Kafka
     *                 subscription lifespan (in minutes). Expired subscription
     *                 will be cancelled automatically.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#KAFKA_TYPE_INFERENCE_FETCH_TIMEOUT
     *                 KAFKA_TYPE_INFERENCE_FETCH_TIMEOUT}: Maximum time to
     *                 collect Kafka messages before type inferencing on the
     *                 set of them.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#LAYER
     *                 LAYER}: Geo files layer(s) name(s): comma separated.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#LOADING_MODE
     *                 LOADING_MODE}: Scheme for distributing the extraction
     *                 and loading of data from the source data file(s). This
     *                 option applies only when loading files that are local to
     *                 the database
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#HEAD
     *                 HEAD}: The head node loads all data. All files must be
     *                 available to the head node.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#DISTRIBUTED_SHARED
     *                 DISTRIBUTED_SHARED}: The head node coordinates loading
     *                 data by worker
     *                 processes across all nodes from shared files available
     *                 to all workers.
     *                 NOTE:
     *                 Instead of existing on a shared source, the files can be
     *                 duplicated on a source local to each host
     *                 to improve performance, though the files must appear as
     *                 the same data set from the perspective of
     *                 all hosts performing the load.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#DISTRIBUTED_LOCAL
     *                 DISTRIBUTED_LOCAL}: A single worker process on each node
     *                 loads all files
     *                 that are available to it. This option works best when
     *                 each worker loads files from its own file
     *                 system, to maximize performance. In order to avoid data
     *                 duplication, either each worker performing
     *                 the load needs to have visibility to a set of files
     *                 unique to it (no file is visible to more than
     *                 one node) or the target table needs to have a primary
     *                 key (which will allow the worker to
     *                 automatically deduplicate data).
     *                 NOTE:
     *                 If the target table doesn't exist, the table structure
     *                 will be determined by the head node. If the
     *                 head node has no files local to it, it will be unable to
     *                 determine the structure and the request
     *                 will fail.
     *                 If the head node is configured to have no worker
     *                 processes, no data strictly accessible to the head
     *                 node will be loaded.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#HEAD
     *                 HEAD}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#LOCAL_TIME_OFFSET
     *                 LOCAL_TIME_OFFSET}: Apply an offset to Avro local
     *                 timestamp columns.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#MAX_RECORDS_TO_LOAD
     *                 MAX_RECORDS_TO_LOAD}: Limit the number of records to
     *                 load in this request: if this number
     *                 is larger than {@code batch_size}, then the number of
     *                 records loaded will be
     *                 limited to the next whole number of {@code batch_size}
     *                 (per working thread).
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#NUM_TASKS_PER_RANK
     *                 NUM_TASKS_PER_RANK}: Number of tasks for reading file
     *                 per rank. Default will be system configuration
     *                 parameter, external_file_reader_num_tasks.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#POLL_INTERVAL
     *                 POLL_INTERVAL}: If {@code true}, the number of
     *                 seconds between attempts to load external files into the
     *                 table.  If zero, polling will be continuous
     *                 as long as data is found.  If no data is found, the
     *                 interval will steadily increase to a maximum of
     *                 60 seconds.  The default value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#PRIMARY_KEYS
     *                 PRIMARY_KEYS}: Comma separated list of column names to
     *                 set as primary keys, when not specified in the type.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#REFRESH_METHOD
     *                 REFRESH_METHOD}: Method by which the table can be
     *                 refreshed from its source data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#MANUAL
     *                 MANUAL}: Refresh only occurs when manually requested by
     *                 invoking the refresh action of {@link
     *                 GPUdb#alterTable(String, String, String, Map)} on this
     *                 table.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#ON_START
     *                 ON_START}: Refresh table on database startup and when
     *                 manually requested by invoking the refresh action of
     *                 {@link GPUdb#alterTable(String, String, String, Map)} on
     *                 this table.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#MANUAL
     *                 MANUAL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#SCHEMA_REGISTRY_SCHEMA_NAME
     *                 SCHEMA_REGISTRY_SCHEMA_NAME}: Name of the Avro schema in
     *                 the schema registry to use when reading Avro records.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#SHARD_KEYS
     *                 SHARD_KEYS}: Comma separated list of column names to set
     *                 as shard keys, when not specified in the type.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#SKIP_LINES
     *                 SKIP_LINES}: Skip number of lines from begining of file.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#SUBSCRIBE
     *                 SUBSCRIBE}: Continuously poll the data source to check
     *                 for new data and load it into the table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TABLE_INSERT_MODE
     *                 TABLE_INSERT_MODE}: Insertion scheme to use when
     *                 inserting records from multiple shapefiles.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#SINGLE
     *                 SINGLE}: Insert all records into a single table.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TABLE_PER_FILE
     *                 TABLE_PER_FILE}: Insert records from each file into a
     *                 new table corresponding to that file.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#SINGLE
     *                 SINGLE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TEXT_COMMENT_STRING
     *                 TEXT_COMMENT_STRING}: Specifies the character string
     *                 that should be interpreted as a comment line
     *                 prefix in the source data.  All lines in the data
     *                 starting with the provided string are ignored.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '#'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TEXT_DELIMITER
     *                 TEXT_DELIMITER}: Specifies the character delimiting
     *                 field values in the source data
     *                 and field names in the header (if present).
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is ','.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TEXT_ESCAPE_CHARACTER
     *                 TEXT_ESCAPE_CHARACTER}: Specifies the character that is
     *                 used to escape other characters in
     *                 the source data.
     *                 An 'a', 'b', 'f', 'n', 'r', 't', or 'v' preceded by an
     *                 escape character will be interpreted as the
     *                 ASCII bell, backspace, form feed, line feed, carriage
     *                 return, horizontal tab, & vertical tab,
     *                 respectively.  For example, the escape character
     *                 followed by an 'n' will be interpreted as a newline
     *                 within a field value.
     *                 The escape character can also be used to escape the
     *                 quoting character, and will be treated as an
     *                 escape character whether it is within a quoted field
     *                 value or not.
     *                 For {@code delimited_text} {@code file_type} only.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TEXT_HAS_HEADER
     *                 TEXT_HAS_HEADER}: Indicates whether the source data
     *                 contains a header row.
     *                 For {@code delimited_text} {@code file_type} only.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TEXT_HEADER_PROPERTY_DELIMITER
     *                 TEXT_HEADER_PROPERTY_DELIMITER}: Specifies the delimiter
     *                 for
     *                 <a
     *                 href="../../../../../concepts/types/#column-properties"
     *                 target="_top">column properties</a> in the header row
     *                 (if
     *                 present).  Cannot be set to same value as {@code
     *                 text_delimiter}.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '|'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TEXT_NULL_STRING
     *                 TEXT_NULL_STRING}: Specifies the character string that
     *                 should be interpreted as a null
     *                 value in the source data.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '\\N'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TEXT_QUOTE_CHARACTER
     *                 TEXT_QUOTE_CHARACTER}: Specifies the character that
     *                 should be interpreted as a field value
     *                 quoting character in the source data.  The character
     *                 must appear at beginning and end of field value
     *                 to take effect.  Delimiters within quoted fields are
     *                 treated as literals and not delimiters.  Within
     *                 a quoted field, two consecutive quote characters will be
     *                 interpreted as a single literal quote
     *                 character, effectively escaping it.  To not have a quote
     *                 character, specify an empty string.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '"'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TEXT_SEARCH_COLUMNS
     *                 TEXT_SEARCH_COLUMNS}: Add 'text_search' property to
     *                 internally inferenced string columns.
     *                 Comma seperated list of column names or '*' for all
     *                 columns. To add 'text_search' property only to
     *                 string columns greater than or equal to a minimum size,
     *                 also set the
     *                 {@code text_search_min_column_length}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TEXT_SEARCH_MIN_COLUMN_LENGTH
     *                 TEXT_SEARCH_MIN_COLUMN_LENGTH}: Set the minimum column
     *                 size for strings to apply the 'text_search' property to.
     *                 Used only when {@code text_search_columns} has a value.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, truncate
     *                 string values that are longer than the column's type
     *                 size.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TRUNCATE_TABLE
     *                 TRUNCATE_TABLE}: If set to {@code true}, truncates the
     *                 table specified by {@code tableName} prior to loading
     *                 the file(s).
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TYPE_INFERENCE_MODE
     *                 TYPE_INFERENCE_MODE}: Optimize type inferencing for
     *                 either speed or accuracy.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#ACCURACY
     *                 ACCURACY}: Scans data to get exactly-typed & sized
     *                 columns for all data scanned.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#SPEED
     *                 SPEED}: Scans data and picks the widest possible column
     *                 types so that 'all' values will fit with minimum data
     *                 scanned
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#SPEED
     *                 SPEED}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#REMOTE_QUERY
     *                 REMOTE_QUERY}: Remote SQL query from which data will be
     *                 sourced
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#REMOTE_QUERY_FILTER_COLUMN
     *                 REMOTE_QUERY_FILTER_COLUMN}: Name of column to be used
     *                 for splitting {@code remote_query} into multiple
     *                 sub-queries using the data distribution of given column
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#REMOTE_QUERY_INCREASING_COLUMN
     *                 REMOTE_QUERY_INCREASING_COLUMN}: Column on subscribed
     *                 remote query result that will increase for new records
     *                 (e.g., TIMESTAMP).
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#REMOTE_QUERY_PARTITION_COLUMN
     *                 REMOTE_QUERY_PARTITION_COLUMN}: Alias name for {@code
     *                 remote_query_filter_column}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for inserting into a table
     *                 with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>. If set to
     *                 {@code true}, any existing table record with primary
     *                 key values that match those of a record being inserted
     *                 will be replaced by that new record (the new
     *                 data will be 'upserted'). If set to {@code false},
     *                 any existing table record with primary key values that
     *                 match those of a record being inserted will
     *                 remain unchanged, while the new record will be rejected
     *                 and the error handled as determined by
     *                 {@code ignore_existing_pk} & {@code error_handling}.  If
     *                 the
     *                 specified table does not have a primary key, then this
     *                 option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#TRUE
     *                 TRUE}: Upsert new records when primary keys match
     *                 existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}: Reject new records when primary keys match
     *                 existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableExternalRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTableExternalResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTableExternalResponse createTableExternal(String tableName, List<String> filepaths, Map<String, Map<String, String>> modifyColumns, Map<String, String> createTableOptions, Map<String, String> options) throws GPUdbException {
        CreateTableExternalRequest actualRequest_ = new CreateTableExternalRequest(tableName, filepaths, modifyColumns, createTableOptions, options);
        CreateTableExternalResponse actualResponse_ = new CreateTableExternalResponse();
        submitRequest("/create/table/external", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a monitor that watches for a single table modification event
     * type (insert, update, or delete) on a particular table (identified by
     * {@code tableName}) and forwards event notifications to subscribers via
     * ZMQ.
     * After this call completes, subscribe to the returned {@code topicId} on
     * the
     * ZMQ table monitor port (default 9002). Each time an operation of the
     * given type
     * on the table completes, a multipart message is published for that topic;
     * the
     * first part contains only the topic ID, and each subsequent part contains
     * one
     * binary-encoded Avro object that corresponds to the event and can be
     * decoded
     * using {@code typeSchema}. The monitor will continue to run (regardless
     * of
     * whether or not there are any subscribers) until deactivated with
     * {@link GPUdb#clearTableMonitor(ClearTableMonitorRequest)}.
     * <p>
     * For more information on table monitors, see
     * <a href="../../../../../concepts/table_monitors/" target="_top">Table
     * Monitors</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTableMonitorResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTableMonitorResponse createTableMonitor(CreateTableMonitorRequest request) throws GPUdbException {
        CreateTableMonitorResponse actualResponse_ = new CreateTableMonitorResponse();
        submitRequest("/create/tablemonitor", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a monitor that watches for a single table modification event
     * type (insert, update, or delete) on a particular table (identified by
     * {@code tableName}) and forwards event notifications to subscribers via
     * ZMQ.
     * After this call completes, subscribe to the returned {@code topicId} on
     * the
     * ZMQ table monitor port (default 9002). Each time an operation of the
     * given type
     * on the table completes, a multipart message is published for that topic;
     * the
     * first part contains only the topic ID, and each subsequent part contains
     * one
     * binary-encoded Avro object that corresponds to the event and can be
     * decoded
     * using {@code typeSchema}. The monitor will continue to run (regardless
     * of
     * whether or not there are any subscribers) until deactivated with
     * {@link GPUdb#clearTableMonitor(String, Map)}.
     * <p>
     * For more information on table monitors, see
     * <a href="../../../../../concepts/table_monitors/" target="_top">Table
     * Monitors</a>.
     * 
     * @param tableName  Name of the table to monitor, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#EVENT
     *                 EVENT}: Type of modification event on the target table
     *                 to be monitored by this table monitor.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#INSERT
     *                 INSERT}: Get notifications of new record insertions. The
     *                 new row images are forwarded to the subscribers.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#UPDATE
     *                 UPDATE}: Get notifications of update operations. The
     *                 modified row count information is forwarded to the
     *                 subscribers.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#DELETE
     *                 DELETE}: Get notifications of delete operations. The
     *                 deleted row count information is forwarded to the
     *                 subscribers.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#INSERT
     *                 INSERT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#MONITOR_ID
     *                 MONITOR_ID}: ID to use for this monitor instead of a
     *                 randomly generated one
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#DATASINK_NAME
     *                 DATASINK_NAME}: Name of an existing <a
     *                 href="../../../../../concepts/data_sinks/"
     *                 target="_top">data sink</a> to send change data
     *                 notifications to
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#DESTINATION
     *                 DESTINATION}: Destination for the output data in format
     *                 'destination_type://path[:port]'. Supported destination
     *                 types are 'http', 'https' and 'kafka'.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#KAFKA_TOPIC_NAME
     *                 KAFKA_TOPIC_NAME}: Name of the Kafka topic to publish to
     *                 if {@code destination} in {@code options} is specified
     *                 and is a Kafka broker
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#INCREASING_COLUMN
     *                 INCREASING_COLUMN}: Column on subscribed table that will
     *                 increase for new records (e.g., TIMESTAMP).
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#EXPRESSION
     *                 EXPRESSION}: Filter expression to limit records for
     *                 notification
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#REFRESH_METHOD
     *                 REFRESH_METHOD}: Method controlling when the table
     *                 monitor reports changes to the {@code tableName}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#ON_CHANGE
     *                 ON_CHANGE}: Report changes as they occur.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#PERIODIC
     *                 PERIODIC}: Report changes periodically at rate specified
     *                 by {@code refresh_period}.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#ON_CHANGE
     *                 ON_CHANGE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#REFRESH_PERIOD
     *                 REFRESH_PERIOD}: When {@code refresh_method} is {@code
     *                 periodic}, specifies the period in seconds at which
     *                 changes are reported.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateTableMonitorRequest.Options#REFRESH_START_TIME
     *                 REFRESH_START_TIME}: When {@code refresh_method} is
     *                 {@code periodic}, specifies the first time at which
     *                 changes are reported.  Value is a datetime string with
     *                 format 'YYYY-MM-DD HH:MM:SS'.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTableMonitorResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTableMonitorResponse createTableMonitor(String tableName, Map<String, String> options) throws GPUdbException {
        CreateTableMonitorRequest actualRequest_ = new CreateTableMonitorRequest(tableName, options);
        CreateTableMonitorResponse actualResponse_ = new CreateTableMonitorResponse();
        submitRequest("/create/tablemonitor", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Sets up an area trigger mechanism for two column_names for one or
     * more tables. (This function is essentially the two-dimensional version
     * of
     * {@link GPUdb#createTriggerByRange(CreateTriggerByRangeRequest)}.) Once
     * the trigger has been activated, any
     * record added to the listed tables(s) via {@link
     * GPUdb#insertRecordsRaw(RawInsertRecordsRequest)} with the
     * chosen columns' values falling within the specified region will trip the
     * trigger. All such records will be queued at the trigger port (by default
     * '9001'
     * but able to be retrieved via {@link
     * GPUdb#showSystemStatus(ShowSystemStatusRequest)}) for any listening
     * client to collect. Active triggers can be cancelled by using the
     * {@link GPUdb#clearTrigger(ClearTriggerRequest)} endpoint or by clearing
     * all relevant tables.
     * <p>
     * The output returns the trigger handle as well as indicating success or
     * failure
     * of the trigger activation.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTriggerByAreaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTriggerByAreaResponse createTriggerByArea(CreateTriggerByAreaRequest request) throws GPUdbException {
        CreateTriggerByAreaResponse actualResponse_ = new CreateTriggerByAreaResponse();
        submitRequest("/create/trigger/byarea", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Sets up an area trigger mechanism for two column_names for one or
     * more tables. (This function is essentially the two-dimensional version
     * of
     * {@link GPUdb#createTriggerByRange(String, List, String, double, double,
     * Map)}.) Once the trigger has been activated, any
     * record added to the listed tables(s) via {@link
     * GPUdb#insertRecordsRaw(RawInsertRecordsRequest)} with the
     * chosen columns' values falling within the specified region will trip the
     * trigger. All such records will be queued at the trigger port (by default
     * '9001'
     * but able to be retrieved via {@link GPUdb#showSystemStatus(Map)}) for
     * any listening
     * client to collect. Active triggers can be cancelled by using the
     * {@link GPUdb#clearTrigger(String, Map)} endpoint or by clearing all
     * relevant tables.
     * <p>
     * The output returns the trigger handle as well as indicating success or
     * failure
     * of the trigger activation.
     * 
     * @param requestId  User-created ID for the trigger. The ID can be
     *                   alphanumeric, contain symbols, and must contain at
     *                   least one character.
     * @param tableNames  Names of the tables on which the trigger will be
     *                    activated and maintained, each in
     *                    [schema_name.]table_name format, using standard <a
     *                    href="../../../../../concepts/tables/#table-name-resolution"
     *                    target="_top">name resolution rules</a>.
     * @param xColumnName  Name of a numeric column on which the trigger is
     *                     activated. Usually 'x' for geospatial data points.
     * @param xVector  The respective coordinate values for the region on which
     *                 the trigger is activated. This usually translates to the
     *                 x-coordinates of a geospatial region.
     * @param yColumnName  Name of a second numeric column on which the trigger
     *                     is activated. Usually 'y' for geospatial data
     *                     points.
     * @param yVector  The respective coordinate values for the region on which
     *                 the trigger is activated. This usually translates to the
     *                 y-coordinates of a geospatial region. Must be the same
     *                 length as xvals.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTriggerByAreaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTriggerByAreaResponse createTriggerByArea(String requestId, List<String> tableNames, String xColumnName, List<Double> xVector, String yColumnName, List<Double> yVector, Map<String, String> options) throws GPUdbException {
        CreateTriggerByAreaRequest actualRequest_ = new CreateTriggerByAreaRequest(requestId, tableNames, xColumnName, xVector, yColumnName, yVector, options);
        CreateTriggerByAreaResponse actualResponse_ = new CreateTriggerByAreaResponse();
        submitRequest("/create/trigger/byarea", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Sets up a simple range trigger for a column_name for one or more
     * tables. Once the trigger has been activated, any record added to the
     * listed
     * tables(s) via {@link GPUdb#insertRecordsRaw(RawInsertRecordsRequest)}
     * with the chosen column_name's value
     * falling within the specified range will trip the trigger. All such
     * records will
     * be queued at the trigger port (by default '9001' but able to be
     * retrieved via
     * {@link GPUdb#showSystemStatus(ShowSystemStatusRequest)}) for any
     * listening client to collect. Active
     * triggers can be cancelled by using the {@link
     * GPUdb#clearTrigger(ClearTriggerRequest)} endpoint or by
     * clearing all relevant tables.
     * <p>
     * The output returns the trigger handle as well as indicating success or
     * failure
     * of the trigger activation.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTriggerByRangeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTriggerByRangeResponse createTriggerByRange(CreateTriggerByRangeRequest request) throws GPUdbException {
        CreateTriggerByRangeResponse actualResponse_ = new CreateTriggerByRangeResponse();
        submitRequest("/create/trigger/byrange", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Sets up a simple range trigger for a column_name for one or more
     * tables. Once the trigger has been activated, any record added to the
     * listed
     * tables(s) via {@link GPUdb#insertRecordsRaw(RawInsertRecordsRequest)}
     * with the chosen column_name's value
     * falling within the specified range will trip the trigger. All such
     * records will
     * be queued at the trigger port (by default '9001' but able to be
     * retrieved via
     * {@link GPUdb#showSystemStatus(Map)}) for any listening client to
     * collect. Active
     * triggers can be cancelled by using the {@link GPUdb#clearTrigger(String,
     * Map)} endpoint or by
     * clearing all relevant tables.
     * <p>
     * The output returns the trigger handle as well as indicating success or
     * failure
     * of the trigger activation.
     * 
     * @param requestId  User-created ID for the trigger. The ID can be
     *                   alphanumeric, contain symbols, and must contain at
     *                   least one character.
     * @param tableNames  Tables on which the trigger will be active, each in
     *                    [schema_name.]table_name format, using standard <a
     *                    href="../../../../../concepts/tables/#table-name-resolution"
     *                    target="_top">name resolution rules</a>.
     * @param columnName  Name of a numeric column_name on which the trigger is
     *                    activated.
     * @param min  The lower bound (inclusive) for the trigger range.
     * @param max  The upper bound (inclusive) for the trigger range.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTriggerByRangeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTriggerByRangeResponse createTriggerByRange(String requestId, List<String> tableNames, String columnName, double min, double max, Map<String, String> options) throws GPUdbException {
        CreateTriggerByRangeRequest actualRequest_ = new CreateTriggerByRangeRequest(requestId, tableNames, columnName, min, max, options);
        CreateTriggerByRangeResponse actualResponse_ = new CreateTriggerByRangeResponse();
        submitRequest("/create/trigger/byrange", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new type describing the layout of a table. The type definition
     * is a JSON string describing the fields (i.e. columns) of the type. Each
     * field consists of a name and a data type. Supported data types are:
     * double, float, int, long, string, and bytes. In addition, one or more
     * properties can be specified for each column which customize the memory
     * usage and query availability of that column.  Note that some properties
     * are mutually exclusive--i.e. they cannot be specified for any given
     * column simultaneously.  One example of mutually exclusive properties are
     * {@code data} and {@code store_only}.
     * <p>
     * A single <a href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a> and/or single <a
     * href="../../../../../concepts/tables/#shard-keys" target="_top">shard
     * key</a> can be set across one or more columns. If a primary key is
     * specified, then a uniqueness constraint is enforced, in that only a
     * single object can exist with a given primary key column value (or set of
     * values for the key columns, if using a composite primary key). When
     * {@link GPUdb#insertRecordsRaw(RawInsertRecordsRequest) inserting} data
     * into a table with a primary key, depending on the parameters in the
     * request, incoming objects with primary key values that match existing
     * objects will either overwrite (i.e. update) the existing object or will
     * be skipped and not added into the set.
     * <p>
     * Example of a type definition with some of the parameters::
     * <p>
     *         {"type":"record",
     *         "name":"point",
     *         "fields":[{"name":"msg_id","type":"string"},
     *                         {"name":"x","type":"double"},
     *                         {"name":"y","type":"double"},
     *                         {"name":"TIMESTAMP","type":"double"},
     *                         {"name":"source","type":"string"},
     *                         {"name":"group_id","type":"string"},
     *                         {"name":"OBJECT_ID","type":"string"}]
     *         }
     * <p>
     * Properties::
     * <p>
     *         {"group_id":["store_only"],
     *         "msg_id":["store_only","text_search"]
     *         }
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTypeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTypeResponse createType(CreateTypeRequest request) throws GPUdbException {
        CreateTypeResponse actualResponse_ = new CreateTypeResponse();
        submitRequest("/create/type", request, actualResponse_, false);
        setTypeDescriptorIfMissing(actualResponse_.getTypeId(), actualResponse_.getLabel(), actualResponse_.getTypeDefinition(), actualResponse_.getProperties());
        return actualResponse_;
    }



    /**
     * Creates a new type describing the layout of a table. The type definition
     * is a JSON string describing the fields (i.e. columns) of the type. Each
     * field consists of a name and a data type. Supported data types are:
     * double, float, int, long, string, and bytes. In addition, one or more
     * properties can be specified for each column which customize the memory
     * usage and query availability of that column.  Note that some properties
     * are mutually exclusive--i.e. they cannot be specified for any given
     * column simultaneously.  One example of mutually exclusive properties are
     * {@code data} and {@code store_only}.
     * <p>
     * A single <a href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a> and/or single <a
     * href="../../../../../concepts/tables/#shard-keys" target="_top">shard
     * key</a> can be set across one or more columns. If a primary key is
     * specified, then a uniqueness constraint is enforced, in that only a
     * single object can exist with a given primary key column value (or set of
     * values for the key columns, if using a composite primary key). When
     * {@link GPUdb#insertRecordsRaw(RawInsertRecordsRequest) inserting} data
     * into a table with a primary key, depending on the parameters in the
     * request, incoming objects with primary key values that match existing
     * objects will either overwrite (i.e. update) the existing object or will
     * be skipped and not added into the set.
     * <p>
     * Example of a type definition with some of the parameters::
     * <p>
     *         {"type":"record",
     *         "name":"point",
     *         "fields":[{"name":"msg_id","type":"string"},
     *                         {"name":"x","type":"double"},
     *                         {"name":"y","type":"double"},
     *                         {"name":"TIMESTAMP","type":"double"},
     *                         {"name":"source","type":"string"},
     *                         {"name":"group_id","type":"string"},
     *                         {"name":"OBJECT_ID","type":"string"}]
     *         }
     * <p>
     * Properties::
     * <p>
     *         {"group_id":["store_only"],
     *         "msg_id":["store_only","text_search"]
     *         }
     * 
     * @param typeDefinition  a JSON string describing the columns of the type
     *                        to be registered.
     * @param label  A user-defined description string which can be used to
     *               differentiate between tables and types with otherwise
     *               identical schemas.
     * @param properties  Each key-value pair specifies the properties to use
     *                    for a given column where the key is the column name.
     *                    All keys used must be relevant column names for the
     *                    given table.  Specifying any property overrides the
     *                    default properties for that column (which is based on
     *                    the column's data type).
     *                    Valid values are:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#DATA
     *                    DATA}: Default property for all numeric and string
     *                    type columns; makes the column available for GPU
     *                    queries.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#TEXT_SEARCH
     *                    TEXT_SEARCH}: Valid only for select 'string' columns.
     *                    Enables full text search--see <a
     *                    href="../../../../../concepts/full_text_search/"
     *                    target="_top">Full Text Search</a> for details and
     *                    applicable string column types. Can be set
     *                    independently of {@code data} and {@code store_only}.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#STORE_ONLY
     *                    STORE_ONLY}: Persist the column value but do not make
     *                    it available to queries (e.g. {@link
     *                    GPUdb#filter(String, String, String, Map)})-i.e. it
     *                    is mutually exclusive to the {@code data} property.
     *                    Any 'bytes' type column must have a {@code
     *                    store_only} property. This property reduces system
     *                    memory usage.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#DISK_OPTIMIZED
     *                    DISK_OPTIMIZED}: Works in conjunction with the {@code
     *                    data} property for string columns. This property
     *                    reduces system disk usage by disabling reverse string
     *                    lookups. Queries like {@link GPUdb#filter(String,
     *                    String, String, Map)}, {@link
     *                    GPUdb#filterByList(String, String, Map, Map)}, and
     *                    {@link GPUdb#filterByValue(String, String, boolean,
     *                    double, String, String, Map)} work as usual but
     *                    {@link
     *                    GPUdb#aggregateUniqueRaw(AggregateUniqueRequest)} and
     *                    {@link
     *                    GPUdb#aggregateGroupByRaw(AggregateGroupByRequest)}
     *                    are not allowed on columns with this property.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#TIMESTAMP
     *                    TIMESTAMP}: Valid only for 'long' columns. Indicates
     *                    that this field represents a timestamp and will be
     *                    provided in milliseconds since the Unix epoch:
     *                    00:00:00 Jan 1 1970.  Dates represented by a
     *                    timestamp must fall between the year 1000 and the
     *                    year 2900.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#ULONG
     *                    ULONG}: Valid only for 'string' columns.  It
     *                    represents an unsigned long integer data type. The
     *                    string can only be interpreted as an unsigned long
     *                    data type with minimum value of zero, and maximum
     *                    value of 18446744073709551615.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#UUID
     *                    UUID}: Valid only for 'string' columns.  It
     *                    represents an uuid data type. Internally, it is
     *                    stored as a 128-bit integer.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#DECIMAL
     *                    DECIMAL}: Valid only for 'string' columns.  It
     *                    represents a SQL type NUMERIC(19, 4) data type.
     *                    There can be up to 15 digits before the decimal point
     *                    and up to four digits in the fractional part.  The
     *                    value can be positive or negative (indicated by a
     *                    minus sign at the beginning).  This property is
     *                    mutually exclusive with the {@code text_search}
     *                    property.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#DATE
     *                    DATE}: Valid only for 'string' columns.  Indicates
     *                    that this field represents a date and will be
     *                    provided in the format 'YYYY-MM-DD'.  The allowable
     *                    range is 1000-01-01 through 2900-01-01.  This
     *                    property is mutually exclusive with the {@code
     *                    text_search} property.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#TIME
     *                    TIME}: Valid only for 'string' columns.  Indicates
     *                    that this field represents a time-of-day and will be
     *                    provided in the format 'HH:MM:SS.mmm'.  The allowable
     *                    range is 00:00:00.000 through 23:59:59.999.  This
     *                    property is mutually exclusive with the {@code
     *                    text_search} property.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#DATETIME
     *                    DATETIME}: Valid only for 'string' columns.
     *                    Indicates that this field represents a datetime and
     *                    will be provided in the format 'YYYY-MM-DD
     *                    HH:MM:SS.mmm'.  The allowable range is 1000-01-01
     *                    00:00:00.000 through 2900-01-01 23:59:59.999.  This
     *                    property is mutually exclusive with the {@code
     *                    text_search} property.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#CHAR1
     *                    CHAR1}: This property provides optimized memory, disk
     *                    and query performance for string columns. Strings
     *                    with this property must be no longer than 1
     *                    character.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#CHAR2
     *                    CHAR2}: This property provides optimized memory, disk
     *                    and query performance for string columns. Strings
     *                    with this property must be no longer than 2
     *                    characters.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#CHAR4
     *                    CHAR4}: This property provides optimized memory, disk
     *                    and query performance for string columns. Strings
     *                    with this property must be no longer than 4
     *                    characters.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#CHAR8
     *                    CHAR8}: This property provides optimized memory, disk
     *                    and query performance for string columns. Strings
     *                    with this property must be no longer than 8
     *                    characters.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#CHAR16
     *                    CHAR16}: This property provides optimized memory,
     *                    disk and query performance for string columns.
     *                    Strings with this property must be no longer than 16
     *                    characters.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#CHAR32
     *                    CHAR32}: This property provides optimized memory,
     *                    disk and query performance for string columns.
     *                    Strings with this property must be no longer than 32
     *                    characters.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#CHAR64
     *                    CHAR64}: This property provides optimized memory,
     *                    disk and query performance for string columns.
     *                    Strings with this property must be no longer than 64
     *                    characters.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#CHAR128
     *                    CHAR128}: This property provides optimized memory,
     *                    disk and query performance for string columns.
     *                    Strings with this property must be no longer than 128
     *                    characters.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#CHAR256
     *                    CHAR256}: This property provides optimized memory,
     *                    disk and query performance for string columns.
     *                    Strings with this property must be no longer than 256
     *                    characters.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#BOOLEAN
     *                    BOOLEAN}: This property provides optimized memory and
     *                    query performance for int columns. Ints with this
     *                    property must be between 0 and 1(inclusive)
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#INT8
     *                    INT8}: This property provides optimized memory and
     *                    query performance for int columns. Ints with this
     *                    property must be between -128 and +127 (inclusive)
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#INT16
     *                    INT16}: This property provides optimized memory and
     *                    query performance for int columns. Ints with this
     *                    property must be between -32768 and +32767
     *                    (inclusive)
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#IPV4
     *                    IPV4}: This property provides optimized memory, disk
     *                    and query performance for string columns representing
     *                    IPv4 addresses (i.e. 192.168.1.1). Strings with this
     *                    property must be of the form: A.B.C.D where A, B, C
     *                    and D are in the range of 0-255.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#WKT
     *                    WKT}: Valid only for 'string' and 'bytes' columns.
     *                    Indicates that this field contains geospatial
     *                    geometry objects in Well-Known Text (WKT) or
     *                    Well-Known Binary (WKB) format.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#PRIMARY_KEY
     *                    PRIMARY_KEY}: This property indicates that this
     *                    column will be part of (or the entire) <a
     *                    href="../../../../../concepts/tables/#primary-keys"
     *                    target="_top">primary key</a>.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#SHARD_KEY
     *                    SHARD_KEY}: This property indicates that this column
     *                    will be part of (or the entire) <a
     *                    href="../../../../../concepts/tables/#shard-keys"
     *                    target="_top">shard key</a>.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#NULLABLE
     *                    NULLABLE}: This property indicates that this column
     *                    is nullable.  However, setting this property is
     *                    insufficient for making the column nullable.  The
     *                    user must declare the type of the column as a union
     *                    between its regular type and 'null' in the avro
     *                    schema for the record type in {@code typeDefinition}.
     *                    For example, if a column is of type integer and is
     *                    nullable, then the entry for the column in the avro
     *                    schema must be: ['int', 'null'].
     *                    The C++, C#, Java, and Python APIs have built-in
     *                    convenience for bypassing setting the avro schema by
     *                    hand.  For those languages, one can use this property
     *                    as usual and not have to worry about the avro schema
     *                    for the record.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#DICT
     *                    DICT}: This property indicates that this column
     *                    should be <a
     *                    href="../../../../../concepts/dictionary_encoding/"
     *                    target="_top">dictionary encoded</a>. It can only be
     *                    used in conjunction with restricted string (charN),
     *                    int, long or date columns. Dictionary encoding is
     *                    best for columns where the cardinality (the number of
     *                    unique values) is expected to be low. This property
     *                    can save a large amount of memory.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#INIT_WITH_NOW
     *                    INIT_WITH_NOW}: For 'date', 'time', 'datetime', or
     *                    'timestamp' column types, replace empty strings and
     *                    invalid timestamps with 'NOW()' upon insert.
     *                            <li> {@link
     *                    com.gpudb.protocol.CreateTypeRequest.Properties#INIT_WITH_UUID
     *                    INIT_WITH_UUID}: For 'uuid' type, replace empty
     *                    strings and invalid UUID values with
     *                    randomly-generated UUIDs upon insert.
     *                    </ul>
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateTypeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateTypeResponse createType(String typeDefinition, String label, Map<String, List<String>> properties, Map<String, String> options) throws GPUdbException {
        CreateTypeRequest actualRequest_ = new CreateTypeRequest(typeDefinition, label, properties, options);
        CreateTypeResponse actualResponse_ = new CreateTypeResponse();
        submitRequest("/create/type", actualRequest_, actualResponse_, false);
        setTypeDescriptorIfMissing(actualResponse_.getTypeId(), actualResponse_.getLabel(), actualResponse_.getTypeDefinition(), actualResponse_.getProperties());
        return actualResponse_;
    }



    /**
     * Merges data from one or more tables with comparable data types into a
     * new table.
     * <p>
     * The following merges are supported:
     * <p>
     * UNION (DISTINCT/ALL) - For data set union details and examples, see <a
     * href="../../../../../concepts/unions/" target="_top">Union</a>.  For
     * limitations, see <a
     * href="../../../../../concepts/unions/#limitations-and-cautions"
     * target="_top">Union Limitations and Cautions</a>.
     * <p>
     * INTERSECT (DISTINCT/ALL) - For data set intersection details and
     * examples, see <a href="../../../../../concepts/intersect/"
     * target="_top">Intersect</a>.  For limitations, see <a
     * href="../../../../../concepts/intersect/#limitations"
     * target="_top">Intersect Limitations</a>.
     * <p>
     * EXCEPT (DISTINCT/ALL) - For data set subtraction details and examples,
     * see <a href="../../../../../concepts/except/" target="_top">Except</a>.
     * For limitations, see <a
     * href="../../../../../concepts/except/#limitations" target="_top">Except
     * Limitations</a>.
     * <p>
     * MERGE VIEWS - For a given set of <a
     * href="../../../../../concepts/filtered_views/" target="_top">filtered
     * views</a> on a single table, creates a single filtered view containing
     * all of the unique records across all of the given filtered data sets.
     * <p>
     * Non-charN 'string' and 'bytes' column types cannot be merged, nor can
     * columns marked as <a href="../../../../../concepts/types/#data-handling"
     * target="_top">store-only</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateUnionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateUnionResponse createUnion(CreateUnionRequest request) throws GPUdbException {
        CreateUnionResponse actualResponse_ = new CreateUnionResponse();
        submitRequest("/create/union", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Merges data from one or more tables with comparable data types into a
     * new table.
     * <p>
     * The following merges are supported:
     * <p>
     * UNION (DISTINCT/ALL) - For data set union details and examples, see <a
     * href="../../../../../concepts/unions/" target="_top">Union</a>.  For
     * limitations, see <a
     * href="../../../../../concepts/unions/#limitations-and-cautions"
     * target="_top">Union Limitations and Cautions</a>.
     * <p>
     * INTERSECT (DISTINCT/ALL) - For data set intersection details and
     * examples, see <a href="../../../../../concepts/intersect/"
     * target="_top">Intersect</a>.  For limitations, see <a
     * href="../../../../../concepts/intersect/#limitations"
     * target="_top">Intersect Limitations</a>.
     * <p>
     * EXCEPT (DISTINCT/ALL) - For data set subtraction details and examples,
     * see <a href="../../../../../concepts/except/" target="_top">Except</a>.
     * For limitations, see <a
     * href="../../../../../concepts/except/#limitations" target="_top">Except
     * Limitations</a>.
     * <p>
     * MERGE VIEWS - For a given set of <a
     * href="../../../../../concepts/filtered_views/" target="_top">filtered
     * views</a> on a single table, creates a single filtered view containing
     * all of the unique records across all of the given filtered data sets.
     * <p>
     * Non-charN 'string' and 'bytes' column types cannot be merged, nor can
     * columns marked as <a href="../../../../../concepts/types/#data-handling"
     * target="_top">store-only</a>.
     * 
     * @param tableName  Name of the table to be created, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a> and meeting <a
     *                   href="../../../../../concepts/tables/#table-naming-criteria"
     *                   target="_top">table naming criteria</a>.
     * @param tableNames  The list of table names to merge, in
     *                    [schema_name.]table_name format, using standard <a
     *                    href="../../../../../concepts/tables/#table-name-resolution"
     *                    target="_top">name resolution rules</a>.  Must
     *                    contain the names of one or more existing tables.
     * @param inputColumnNames  The list of columns from each of the
     *                          corresponding input tables.
     * @param outputColumnNames  The list of names of the columns to be stored
     *                           in the output table.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code tableName}. If {@code persist}
     *                 is {@code false} (or unspecified), then this is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_table_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the projection as part of {@code
     *                 tableName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of the
     *                 schema for the output table. If the schema provided is
     *                 non-existent, it will be automatically created.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#MODE
     *                 MODE}: If {@code merge_views}, then this operation will
     *                 merge the provided views. All {@code tableNames} must be
     *                 views from the same underlying base table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL
     *                 UNION_ALL}: Retains all rows from the specified tables.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#UNION
     *                 UNION}: Retains all unique rows from the specified
     *                 tables (synonym for {@code union_distinct}).
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#UNION_DISTINCT
     *                 UNION_DISTINCT}: Retains all unique rows from the
     *                 specified tables.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT
     *                 EXCEPT}: Retains all unique rows from the first table
     *                 that do not appear in the second table (only works on 2
     *                 tables).
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#EXCEPT_ALL
     *                 EXCEPT_ALL}: Retains all rows(including duplicates) from
     *                 the first table that do not appear in the second table
     *                 (only works on 2 tables).
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT
     *                 INTERSECT}: Retains all unique rows that appear in both
     *                 of the specified tables (only works on 2 tables).
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#INTERSECT_ALL
     *                 INTERSECT_ALL}: Retains all rows(including duplicates)
     *                 that appear in both of the specified tables (only works
     *                 on 2 tables).
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#MERGE_VIEWS
     *                 MERGE_VIEWS}: Merge two or more views (or views of
     *                 views) of the same base data set into a new view. If
     *                 this mode is selected {@code inputColumnNames} AND
     *                 {@code outputColumnNames} must be empty. The resulting
     *                 view would match the results of a SQL OR operation,
     *                 e.g., if filter 1 creates a view using the expression 'x
     *                 = 20' and filter 2 creates a view using the expression
     *                 'x <= 10', then the merge views operation creates a new
     *                 view using the expression 'x = 20 OR x <= 10'.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#UNION_ALL
     *                 UNION_ALL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#CHUNK_SIZE
     *                 CHUNK_SIZE}: Indicates the number of records per chunk
     *                 to be used for this output table.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#CREATE_INDEXES
     *                 CREATE_INDEXES}: Comma-separated list of columns on
     *                 which to create indexes on the output table.  The
     *                 columns specified must be present in {@code
     *                 outputColumnNames}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#TTL TTL}:
     *                 Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the output table specified in
     *                 {@code tableName}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#PERSIST
     *                 PERSIST}: If {@code true}, then the output table
     *                 specified in {@code tableName} will be persisted and
     *                 will not expire unless a {@code ttl} is specified.   If
     *                 {@code false}, then the output table will be an
     *                 in-memory table and will expire unless a {@code ttl} is
     *                 specified otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#VIEW_ID
     *                 VIEW_ID}: ID of view of which this output table is a
     *                 member.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#FORCE_REPLICATED
     *                 FORCE_REPLICATED}: If {@code true}, then the output
     *                 table specified in {@code tableName} will be replicated
     *                 even if the source tables are not.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUnionRequest.Options#STRATEGY_DEFINITION
     *                 STRATEGY_DEFINITION}: The <a
     *                 href="../../../../../rm/concepts/#tier-strategies"
     *                 target="_top">tier strategy</a> for the table and its
     *                 columns.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateUnionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateUnionResponse createUnion(String tableName, List<String> tableNames, List<List<String>> inputColumnNames, List<String> outputColumnNames, Map<String, String> options) throws GPUdbException {
        CreateUnionRequest actualRequest_ = new CreateUnionRequest(tableName, tableNames, inputColumnNames, outputColumnNames, options);
        CreateUnionResponse actualResponse_ = new CreateUnionResponse();
        submitRequest("/create/union", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new external user (a user whose credentials are managed by an
     * external LDAP).
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateUserExternalResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateUserExternalResponse createUserExternal(CreateUserExternalRequest request) throws GPUdbException {
        CreateUserExternalResponse actualResponse_ = new CreateUserExternalResponse();
        submitRequest("/create/user/external", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new external user (a user whose credentials are managed by an
     * external LDAP).
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param name  Name of the user to be created. Must exactly match the
     *              user's name in the external LDAP, prefixed with a @. Must
     *              not be the same name as an existing user.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserExternalRequest.Options#RESOURCE_GROUP
     *                 RESOURCE_GROUP}: Name of an existing resource group to
     *                 associate with this user
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserExternalRequest.Options#DEFAULT_SCHEMA
     *                 DEFAULT_SCHEMA}: Default schema to associate with this
     *                 user
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserExternalRequest.Options#CREATE_HOME_DIRECTORY
     *                 CREATE_HOME_DIRECTORY}: When {@code true}, a home
     *                 directory in KiFS is created for this user
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserExternalRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserExternalRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateUserExternalRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserExternalRequest.Options#DIRECTORY_DATA_LIMIT
     *                 DIRECTORY_DATA_LIMIT}: The maximum capacity to apply to
     *                 the created directory if {@code create_home_directory}
     *                 is {@code true}. Set to -1 to indicate no upper limit.
     *                 If empty, the system default limit is applied.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateUserExternalResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateUserExternalResponse createUserExternal(String name, Map<String, String> options) throws GPUdbException {
        CreateUserExternalRequest actualRequest_ = new CreateUserExternalRequest(name, options);
        CreateUserExternalResponse actualResponse_ = new CreateUserExternalResponse();
        submitRequest("/create/user/external", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new internal user (a user whose credentials are managed by the
     * database system).
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateUserInternalResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateUserInternalResponse createUserInternal(CreateUserInternalRequest request) throws GPUdbException {
        CreateUserInternalResponse actualResponse_ = new CreateUserInternalResponse();
        submitRequest("/create/user/internal", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a new internal user (a user whose credentials are managed by the
     * database system).
     * 
     * @param name  Name of the user to be created. Must contain only lowercase
     *              letters, digits, and underscores, and cannot begin with a
     *              digit. Must not be the same name as an existing user or
     *              role.
     * @param password  Initial password of the user to be created. May be an
     *                  empty string for no password.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserInternalRequest.Options#RESOURCE_GROUP
     *                 RESOURCE_GROUP}: Name of an existing resource group to
     *                 associate with this user
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserInternalRequest.Options#DEFAULT_SCHEMA
     *                 DEFAULT_SCHEMA}: Default schema to associate with this
     *                 user
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserInternalRequest.Options#CREATE_HOME_DIRECTORY
     *                 CREATE_HOME_DIRECTORY}: When {@code true}, a home
     *                 directory in KiFS is created for this user
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserInternalRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserInternalRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateUserInternalRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateUserInternalRequest.Options#DIRECTORY_DATA_LIMIT
     *                 DIRECTORY_DATA_LIMIT}: The maximum capacity to apply to
     *                 the created directory if {@code create_home_directory}
     *                 is {@code true}. Set to -1 to indicate no upper limit.
     *                 If empty, the system default limit is applied.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateUserInternalResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateUserInternalResponse createUserInternal(String name, String password, Map<String, String> options) throws GPUdbException {
        CreateUserInternalRequest actualRequest_ = new CreateUserInternalRequest(name, password, options);
        CreateUserInternalResponse actualResponse_ = new CreateUserInternalResponse();
        submitRequest("/create/user/internal", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a job to generate a sequence of raster images that visualize
     * data over a specified time.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateVideoResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateVideoResponse createVideo(CreateVideoRequest request) throws GPUdbException {
        CreateVideoResponse actualResponse_ = new CreateVideoResponse();
        submitRequest("/create/video", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Creates a job to generate a sequence of raster images that visualize
     * data over a specified time.
     * 
     * @param attribute  The animated attribute to map to the video's frames.
     *                   Must be present in the LAYERS specified for the
     *                   visualization. This is often a time-related field but
     *                   may be any numeric type.
     * @param begin  The start point for the video. Accepts an expression
     *               evaluable over the {@code attribute}.
     * @param durationSeconds  Seconds of video to produce
     * @param end  The end point for the video. Accepts an expression evaluable
     *             over the {@code attribute}.
     * @param framesPerSecond  The presentation frame rate of the encoded video
     *                         in frames per second.
     * @param style  The name of the visualize mode; should correspond to the
     *               schema used for the {@code styleParameters} field.
     *               Supported values:
     *               <ul>
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#CHART CHART}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#RASTER RASTER}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#CLASSBREAK
     *               CLASSBREAK}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#CONTOUR
     *               CONTOUR}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#HEATMAP
     *               HEATMAP}
     *                       <li> {@link
     *               com.gpudb.protocol.CreateVideoRequest.Style#LABELS LABELS}
     *               </ul>
     * @param path  Fully-qualified <a href="../../../../../tools/kifs/"
     *              target="_top">KiFS</a> path.  Write access is required. A
     *              file must not exist at that path, unless {@code
     *              replace_if_exists} is {@code true}.
     * @param styleParameters  A string containing the JSON-encoded visualize
     *                         request.  Must correspond to the visualize mode
     *                         specified in the {@code style} field.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#TTL TTL}:
     *                 Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the video.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#WINDOW
     *                 WINDOW}: Specified using the data-type corresponding to
     *                 the {@code attribute}. For a window of size W, a video
     *                 frame rendered for time t will visualize data in the
     *                 interval [t-W,t]. The minimum window size is the
     *                 interval between successive frames.  The minimum value
     *                 is the default.  If a value less than the minimum value
     *                 is specified, it is replaced with the minimum window
     *                 size.  Larger values will make changes throughout the
     *                 video appear more smooth while smaller values will
     *                 capture fast variations in the data.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#NO_ERROR_IF_EXISTS
     *                 NO_ERROR_IF_EXISTS}: If {@code true}, does not return an
     *                 error if the video already exists.  Ignored if {@code
     *                 replace_if_exists} is {@code true}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#TRUE TRUE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#REPLACE_IF_EXISTS
     *                 REPLACE_IF_EXISTS}: If {@code true}, deletes any
     *                 existing video with the same path before creating a new
     *                 video.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}
     *                         <li> {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#TRUE TRUE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.CreateVideoRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  CreateVideoResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public CreateVideoResponse createVideo(String attribute, String begin, double durationSeconds, String end, double framesPerSecond, String style, String path, String styleParameters, Map<String, String> options) throws GPUdbException {
        CreateVideoRequest actualRequest_ = new CreateVideoRequest(attribute, begin, durationSeconds, end, framesPerSecond, style, path, styleParameters, options);
        CreateVideoResponse actualResponse_ = new CreateVideoResponse();
        submitRequest("/create/video", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes a directory from <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteDirectoryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteDirectoryResponse deleteDirectory(DeleteDirectoryRequest request) throws GPUdbException {
        DeleteDirectoryResponse actualResponse_ = new DeleteDirectoryResponse();
        submitRequest("/delete/directory", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes a directory from <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>.
     * 
     * @param directoryName  Name of the directory in KiFS to be deleted. The
     *                       directory must contain no files, unless {@code
     *                       recursive} is {@code true}
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteDirectoryRequest.Options#RECURSIVE
     *                 RECURSIVE}: If {@code true}, will delete directory and
     *                 all files residing in it. If false, directory must be
     *                 empty for deletion.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteDirectoryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteDirectoryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DeleteDirectoryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteDirectoryRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code true}, no error is
     *                 returned if specified directory does not exist
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteDirectoryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteDirectoryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DeleteDirectoryRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteDirectoryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteDirectoryResponse deleteDirectory(String directoryName, Map<String, String> options) throws GPUdbException {
        DeleteDirectoryRequest actualRequest_ = new DeleteDirectoryRequest(directoryName, options);
        DeleteDirectoryResponse actualResponse_ = new DeleteDirectoryResponse();
        submitRequest("/delete/directory", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes one or more files from <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteFilesResponse deleteFiles(DeleteFilesRequest request) throws GPUdbException {
        DeleteFilesResponse actualResponse_ = new DeleteFilesResponse();
        submitRequest("/delete/files", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes one or more files from <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>.
     * 
     * @param fileNames  An array of names of files to be deleted. File paths
     *                   may contain wildcard characters after the KiFS
     *                   directory delimeter.
     *                   Accepted wildcard characters are asterisk (*) to
     *                   represent any string of zero or more characters, and
     *                   question mark (?) to indicate a single character.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteFilesRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code true}, no error is
     *                 returned if a specified file does not exist
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteFilesRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteFilesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DeleteFilesRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteFilesResponse deleteFiles(List<String> fileNames, Map<String, String> options) throws GPUdbException {
        DeleteFilesRequest actualRequest_ = new DeleteFilesRequest(fileNames, options);
        DeleteFilesResponse actualResponse_ = new DeleteFilesResponse();
        submitRequest("/delete/files", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes an existing graph from the graph server and/or persist.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteGraphResponse deleteGraph(DeleteGraphRequest request) throws GPUdbException {
        DeleteGraphResponse actualResponse_ = new DeleteGraphResponse();
        submitRequest("/delete/graph", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes an existing graph from the graph server and/or persist.
     * 
     * @param graphName  Name of the graph to be deleted.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteGraphRequest.Options#DELETE_PERSIST
     *                 DELETE_PERSIST}: If set to {@code true}, the graph is
     *                 removed from the server and persist. If set to {@code
     *                 false}, the graph is removed from the server but is left
     *                 in persist. The graph can be reloaded from persist if it
     *                 is recreated with the same 'graph_name'.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DeleteGraphRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteGraphRequest.Options#SERVER_ID
     *                 SERVER_ID}: Indicates which graph server(s) to send the
     *                 request to. Default is to send to get information about
     *                 all the servers.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteGraphResponse deleteGraph(String graphName, Map<String, String> options) throws GPUdbException {
        DeleteGraphRequest actualRequest_ = new DeleteGraphRequest(graphName, options);
        DeleteGraphResponse actualResponse_ = new DeleteGraphResponse();
        submitRequest("/delete/graph", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes a proc. Any currently running instances of the proc will be
     * killed.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteProcResponse deleteProc(DeleteProcRequest request) throws GPUdbException {
        DeleteProcResponse actualResponse_ = new DeleteProcResponse();
        submitRequest("/delete/proc", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes a proc. Any currently running instances of the proc will be
     * killed.
     * 
     * @param procName  Name of the proc to be deleted. Must be the name of a
     *                  currently existing proc.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteProcResponse deleteProc(String procName, Map<String, String> options) throws GPUdbException {
        DeleteProcRequest actualRequest_ = new DeleteProcRequest(procName, options);
        DeleteProcResponse actualResponse_ = new DeleteProcResponse();
        submitRequest("/delete/proc", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes record(s) matching the provided criteria from the given table.
     * The record selection criteria can either be one or more  {@code
     * expressions} (matching multiple records), a single record identified by
     * {@code record_id} options, or all records when using {@code
     * delete_all_records}.  Note that the three selection criteria are
     * mutually exclusive.  This operation cannot be run on a view.  The
     * operation is synchronous meaning that a response will not be available
     * until the request is completely processed and all the matching records
     * are deleted.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteRecordsResponse deleteRecords(DeleteRecordsRequest request) throws GPUdbException {
        DeleteRecordsResponse actualResponse_ = new DeleteRecordsResponse();
        submitRequest("/delete/records", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes record(s) matching the provided criteria from the given table.
     * The record selection criteria can either be one or more  {@code
     * expressions} (matching multiple records), a single record identified by
     * {@code record_id} options, or all records when using {@code
     * delete_all_records}.  Note that the three selection criteria are
     * mutually exclusive.  This operation cannot be run on a view.  The
     * operation is synchronous meaning that a response will not be available
     * until the request is completely processed and all the matching records
     * are deleted.
     * 
     * @param tableName  Name of the table from which to delete records, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>. Must contain
     *                   the name of an existing table; not applicable to
     *                   views.
     * @param expressions  A list of the actual predicates, one for each
     *                     select; format should follow the guidelines provided
     *                     <a href="../../../../../concepts/expressions/"
     *                     target="_top">here</a>. Specifying one or more
     *                     {@code expressions} is mutually exclusive to
     *                     specifying {@code record_id} in the {@code options}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteRecordsRequest.Options#GLOBAL_EXPRESSION
     *                 GLOBAL_EXPRESSION}: An optional global expression to
     *                 reduce the search space of the {@code expressions}.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteRecordsRequest.Options#RECORD_ID
     *                 RECORD_ID}: A record ID identifying a single record,
     *                 obtained at the time of {@link
     *                 GPUdb#insertRecordsRaw(RawInsertRecordsRequest)
     *                 insertion of the record} or by calling {@link
     *                 GPUdb#getRecordsFromCollectionRaw(GetRecordsFromCollectionRequest)}
     *                 with the *return_record_ids* option. This option cannot
     *                 be used to delete records from <a
     *                 href="../../../../../concepts/tables/#replication"
     *                 target="_top">replicated</a> tables.
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteRecordsRequest.Options#DELETE_ALL_RECORDS
     *                 DELETE_ALL_RECORDS}: If set to {@code true}, all records
     *                 in the table will be deleted. If set to {@code false},
     *                 then the option is effectively ignored.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DeleteRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteRecordsResponse deleteRecords(String tableName, List<String> expressions, Map<String, String> options) throws GPUdbException {
        DeleteRecordsRequest actualRequest_ = new DeleteRecordsRequest(tableName, expressions, options);
        DeleteRecordsResponse actualResponse_ = new DeleteRecordsResponse();
        submitRequest("/delete/records", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes a resource group.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteResourceGroupResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteResourceGroupResponse deleteResourceGroup(DeleteResourceGroupRequest request) throws GPUdbException {
        DeleteResourceGroupResponse actualResponse_ = new DeleteResourceGroupResponse();
        submitRequest("/delete/resourcegroup", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes a resource group.
     * 
     * @param name  Name of the resource group to be deleted.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteResourceGroupRequest.Options#CASCADE_DELETE
     *                 CASCADE_DELETE}: If {@code true}, delete any existing
     *                 entities owned by this group. Otherwise this request
     *                 will return an error of any such entities exist.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteResourceGroupRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.DeleteResourceGroupRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DeleteResourceGroupRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteResourceGroupResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteResourceGroupResponse deleteResourceGroup(String name, Map<String, String> options) throws GPUdbException {
        DeleteResourceGroupRequest actualRequest_ = new DeleteResourceGroupRequest(name, options);
        DeleteResourceGroupResponse actualResponse_ = new DeleteResourceGroupResponse();
        submitRequest("/delete/resourcegroup", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes an existing role.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteRoleResponse deleteRole(DeleteRoleRequest request) throws GPUdbException {
        DeleteRoleResponse actualResponse_ = new DeleteRoleResponse();
        submitRequest("/delete/role", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes an existing role.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param name  Name of the role to be deleted. Must be an existing role.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteRoleResponse deleteRole(String name, Map<String, String> options) throws GPUdbException {
        DeleteRoleRequest actualRequest_ = new DeleteRoleRequest(name, options);
        DeleteRoleResponse actualResponse_ = new DeleteRoleResponse();
        submitRequest("/delete/role", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes an existing user.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteUserResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteUserResponse deleteUser(DeleteUserRequest request) throws GPUdbException {
        DeleteUserResponse actualResponse_ = new DeleteUserResponse();
        submitRequest("/delete/user", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Deletes an existing user.
     * <p>
     * <b>Note:</b> This method should be used for on-premise deployments only.
     * 
     * @param name  Name of the user to be deleted. Must be an existing user.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DeleteUserResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DeleteUserResponse deleteUser(String name, Map<String, String> options) throws GPUdbException {
        DeleteUserRequest actualRequest_ = new DeleteUserRequest(name, options);
        DeleteUserResponse actualResponse_ = new DeleteUserResponse();
        submitRequest("/delete/user", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Downloads one or more files from <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DownloadFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DownloadFilesResponse downloadFiles(DownloadFilesRequest request) throws GPUdbException {
        DownloadFilesResponse actualResponse_ = new DownloadFilesResponse();
        submitRequest("/download/files", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Downloads one or more files from <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>.
     * 
     * @param fileNames  An array of the file names to download from KiFS. File
     *                   paths may contain wildcard characters after the KiFS
     *                   directory delimeter.
     *                   Accepted wildcard characters are asterisk (*) to
     *                   represent any string of zero or more characters, and
     *                   question mark (?) to indicate a single character.
     * @param readOffsets  An array of starting byte offsets from which to read
     *                     each
     *                     respective file in {@code fileNames}. Must either be
     *                     empty or the same length
     *                     as {@code fileNames}. If empty, files are downloaded
     *                     in their entirety. If not
     *                     empty, {@code readLengths} must also not be empty.
     * @param readLengths  Array of number of bytes to read from each
     *                     respective file
     *                     in {@code fileNames}. Must either be empty or the
     *                     same length as
     *                     {@code fileNames}. If empty, files are downloaded in
     *                     their entirety. If not
     *                     empty, {@code readOffsets} must also not be empty.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DownloadFilesRequest.Options#FILE_ENCODING
     *                 FILE_ENCODING}: Encoding to be applied to the output
     *                 file data. When using JSON serialization it is
     *                 recommended to specify this as {@code base64}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DownloadFilesRequest.Options#BASE64
     *                 BASE64}: Apply base64 encoding to the output file data.
     *                         <li> {@link
     *                 com.gpudb.protocol.DownloadFilesRequest.Options#NONE
     *                 NONE}: Do not apply any encoding to the output file
     *                 data.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DownloadFilesRequest.Options#NONE
     *                 NONE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DownloadFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DownloadFilesResponse downloadFiles(List<String> fileNames, List<Long> readOffsets, List<Long> readLengths, Map<String, String> options) throws GPUdbException {
        DownloadFilesRequest actualRequest_ = new DownloadFilesRequest(fileNames, readOffsets, readLengths, options);
        DownloadFilesResponse actualResponse_ = new DownloadFilesResponse();
        submitRequest("/download/files", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public DropContainerRegistryResponse dropContainerRegistry(DropContainerRegistryRequest request) throws GPUdbException {
        DropContainerRegistryResponse actualResponse_ = new DropContainerRegistryResponse();
        submitRequest("/drop/container/registry", request, actualResponse_, false);
        return actualResponse_;
    }



    public DropContainerRegistryResponse dropContainerRegistry(String registryName, Map<String, String> options) throws GPUdbException {
        DropContainerRegistryRequest actualRequest_ = new DropContainerRegistryRequest(registryName, options);
        DropContainerRegistryResponse actualResponse_ = new DropContainerRegistryResponse();
        submitRequest("/drop/container/registry", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Drop an existing <a href="../../../../../concepts/credentials/"
     * target="_top">credential</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DropCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DropCredentialResponse dropCredential(DropCredentialRequest request) throws GPUdbException {
        DropCredentialResponse actualResponse_ = new DropCredentialResponse();
        submitRequest("/drop/credential", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Drop an existing <a href="../../../../../concepts/credentials/"
     * target="_top">credential</a>.
     * 
     * @param credentialName  Name of the credential to be dropped. Must be an
     *                        existing credential.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DropCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DropCredentialResponse dropCredential(String credentialName, Map<String, String> options) throws GPUdbException {
        DropCredentialRequest actualRequest_ = new DropCredentialRequest(credentialName, options);
        DropCredentialResponse actualResponse_ = new DropCredentialResponse();
        submitRequest("/drop/credential", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Drops an existing <a href="../../../../../concepts/data_sinks/"
     * target="_top">data sink</a>.
     * <p>
     * By default, if any <a href="../../../../../concepts/table_monitors"
     * target="_top">table monitors</a> use this
     * sink as a destination, the request will be blocked unless option
     * {@code clear_table_monitors} is
     * {@code true}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DropDatasinkResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DropDatasinkResponse dropDatasink(DropDatasinkRequest request) throws GPUdbException {
        DropDatasinkResponse actualResponse_ = new DropDatasinkResponse();
        submitRequest("/drop/datasink", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Drops an existing <a href="../../../../../concepts/data_sinks/"
     * target="_top">data sink</a>.
     * <p>
     * By default, if any <a href="../../../../../concepts/table_monitors"
     * target="_top">table monitors</a> use this
     * sink as a destination, the request will be blocked unless option
     * {@code clear_table_monitors} is
     * {@code true}.
     * 
     * @param name  Name of the data sink to be dropped. Must be an existing
     *              data sink.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DropDatasinkRequest.Options#CLEAR_TABLE_MONITORS
     *                 CLEAR_TABLE_MONITORS}: If {@code true}, any <a
     *                 href="../../../../../concepts/table_monitors/"
     *                 target="_top">table monitors</a> that use this data sink
     *                 will be cleared.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DropDatasinkRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.DropDatasinkRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DropDatasinkRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DropDatasinkResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DropDatasinkResponse dropDatasink(String name, Map<String, String> options) throws GPUdbException {
        DropDatasinkRequest actualRequest_ = new DropDatasinkRequest(name, options);
        DropDatasinkResponse actualResponse_ = new DropDatasinkResponse();
        submitRequest("/drop/datasink", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Drops an existing <a href="../../../../../concepts/data_sources/"
     * target="_top">data source</a>.  Any external
     * tables that depend on the data source must be dropped before it can be
     * dropped.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DropDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DropDatasourceResponse dropDatasource(DropDatasourceRequest request) throws GPUdbException {
        DropDatasourceResponse actualResponse_ = new DropDatasourceResponse();
        submitRequest("/drop/datasource", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Drops an existing <a href="../../../../../concepts/data_sources/"
     * target="_top">data source</a>.  Any external
     * tables that depend on the data source must be dropped before it can be
     * dropped.
     * 
     * @param name  Name of the data source to be dropped. Must be an existing
     *              data source.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DropDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DropDatasourceResponse dropDatasource(String name, Map<String, String> options) throws GPUdbException {
        DropDatasourceRequest actualRequest_ = new DropDatasourceRequest(name, options);
        DropDatasourceResponse actualResponse_ = new DropDatasourceResponse();
        submitRequest("/drop/datasource", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Drop an existing <a href="../../../../../concepts/udf/"
     * target="_top">user-defined function</a> (UDF) environment.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DropEnvironmentResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DropEnvironmentResponse dropEnvironment(DropEnvironmentRequest request) throws GPUdbException {
        DropEnvironmentResponse actualResponse_ = new DropEnvironmentResponse();
        submitRequest("/drop/environment", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Drop an existing <a href="../../../../../concepts/udf/"
     * target="_top">user-defined function</a> (UDF) environment.
     * 
     * @param environmentName  Name of the environment to be dropped. Must be
     *                         an existing environment.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DropEnvironmentRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code true} and if the
     *                 environment specified in {@code environmentName} does
     *                 not exist, no error is returned. If {@code false} and if
     *                 the environment specified in {@code environmentName}
     *                 does not exist, then an error is returned.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DropEnvironmentRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.DropEnvironmentRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DropEnvironmentRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DropEnvironmentResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DropEnvironmentResponse dropEnvironment(String environmentName, Map<String, String> options) throws GPUdbException {
        DropEnvironmentRequest actualRequest_ = new DropEnvironmentRequest(environmentName, options);
        DropEnvironmentResponse actualResponse_ = new DropEnvironmentResponse();
        submitRequest("/drop/environment", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public DropModelResponse dropModel(DropModelRequest request) throws GPUdbException {
        DropModelResponse actualResponse_ = new DropModelResponse();
        submitRequest("/drop/model", request, actualResponse_, false);
        return actualResponse_;
    }



    public DropModelResponse dropModel(String modelName, Map<String, String> options) throws GPUdbException {
        DropModelRequest actualRequest_ = new DropModelRequest(modelName, options);
        DropModelResponse actualResponse_ = new DropModelResponse();
        submitRequest("/drop/model", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Drops an existing SQL-style <a href="../../../../../concepts/schemas/"
     * target="_top">schema</a>, specified in {@code schemaName}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DropSchemaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DropSchemaResponse dropSchema(DropSchemaRequest request) throws GPUdbException {
        DropSchemaResponse actualResponse_ = new DropSchemaResponse();
        submitRequest("/drop/schema", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Drops an existing SQL-style <a href="../../../../../concepts/schemas/"
     * target="_top">schema</a>, specified in {@code schemaName}.
     * 
     * @param schemaName  Name of the schema to be dropped. Must be an existing
     *                    schema.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DropSchemaRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code true} and if the
     *                 schema specified in {@code schemaName} does not exist,
     *                 no error is returned. If {@code false} and if the schema
     *                 specified in {@code schemaName} does not exist, then an
     *                 error is returned.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DropSchemaRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.DropSchemaRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DropSchemaRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.DropSchemaRequest.Options#CASCADE
     *                 CASCADE}: If {@code true}, all tables within the schema
     *                 will be dropped. If {@code false}, the schema will be
     *                 dropped only if empty.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.DropSchemaRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.DropSchemaRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.DropSchemaRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  DropSchemaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public DropSchemaResponse dropSchema(String schemaName, Map<String, String> options) throws GPUdbException {
        DropSchemaRequest actualRequest_ = new DropSchemaRequest(schemaName, options);
        DropSchemaResponse actualResponse_ = new DropSchemaResponse();
        submitRequest("/drop/schema", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public EvaluateModelResponse evaluateModel(EvaluateModelRequest request) throws GPUdbException {
        EvaluateModelResponse actualResponse_ = new EvaluateModelResponse();
        submitRequest("/evaluate/model", request, actualResponse_, false);
        return actualResponse_;
    }



    public EvaluateModelResponse evaluateModel(String modelName, int replicas, String deploymentMode, String sourceTable, String destinationTable, Map<String, String> options) throws GPUdbException {
        EvaluateModelRequest actualRequest_ = new EvaluateModelRequest(modelName, replicas, deploymentMode, sourceTable, destinationTable, options);
        EvaluateModelResponse actualResponse_ = new EvaluateModelResponse();
        submitRequest("/evaluate/model", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Executes a proc. This endpoint is asynchronous and does not wait for
     * the proc to complete before returning.
     * <p>
     * If the proc being executed is distributed, {@code inputTableNames} &
     * {@code inputColumnNames} may be passed to the proc to use for reading
     * data,
     * and {@code outputTableNames} may be passed to the proc to use for
     * writing
     * data.
     * <p>
     * If the proc being executed is non-distributed, these table parameters
     * will be
     * ignored.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ExecuteProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ExecuteProcResponse executeProc(ExecuteProcRequest request) throws GPUdbException {
        ExecuteProcResponse actualResponse_ = new ExecuteProcResponse();
        submitRequest("/execute/proc", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Executes a proc. This endpoint is asynchronous and does not wait for
     * the proc to complete before returning.
     * <p>
     * If the proc being executed is distributed, {@code inputTableNames} &
     * {@code inputColumnNames} may be passed to the proc to use for reading
     * data,
     * and {@code outputTableNames} may be passed to the proc to use for
     * writing
     * data.
     * <p>
     * If the proc being executed is non-distributed, these table parameters
     * will be
     * ignored.
     * 
     * @param procName  Name of the proc to execute. Must be the name of a
     *                  currently existing proc.
     * @param params  A map containing named parameters to pass to the proc.
     *                Each key/value pair specifies the name of a parameter and
     *                its value.  The default value is an empty {@link Map}.
     * @param binParams  A map containing named binary parameters to pass to
     *                   the proc. Each key/value pair specifies the name of a
     *                   parameter and its value.  The default value is an
     *                   empty {@link Map}.
     * @param inputTableNames  Names of the tables containing data to be passed
     *                         to the
     *                         proc. Each name specified must be the name of a
     *                         currently existing table, in
     *                         [schema_name.]table_name format, using standard
     *                         <a
     *                         href="../../../../../concepts/tables/#table-name-resolution"
     *                         target="_top">name resolution rules</a>.
     *                         If no table names are specified, no data will be
     *                         passed to the proc.  This
     *                         parameter is ignored if the proc has a
     *                         non-distributed execution mode.  The default
     *                         value is an empty {@link List}.
     * @param inputColumnNames  Map of table names from {@code inputTableNames}
     *                          to lists
     *                          of names of columns from those tables that will
     *                          be passed to the proc. Each
     *                          column name specified must be the name of an
     *                          existing column in the
     *                          corresponding table. If a table name from
     *                          {@code inputTableNames} is not
     *                          included, all columns from that table will be
     *                          passed to the proc.  This
     *                          parameter is ignored if the proc has a
     *                          non-distributed execution mode.  The default
     *                          value is an empty {@link Map}.
     * @param outputTableNames  Names of the tables to which output data from
     *                          the proc will
     *                          be written, each in [schema_name.]table_name
     *                          format, using standard
     *                          <a
     *                          href="../../../../../concepts/tables/#table-name-resolution"
     *                          target="_top">name resolution rules</a>
     *                          and meeting <a
     *                          href="../../../../../concepts/tables/#table-naming-criteria"
     *                          target="_top">table naming criteria</a>.
     *                          If a specified table does not exist, it will
     *                          automatically be created with the
     *                          same schema as the corresponding table (by
     *                          order) from
     *                          {@code inputTableNames}, excluding any primary
     *                          and shard keys. If a specified
     *                          table is a non-persistent result table, it must
     *                          not have primary or shard keys.
     *                          If no table names are specified, no output data
     *                          can be returned from the proc.
     *                          This parameter is ignored if the proc has a
     *                          non-distributed execution mode.  The default
     *                          value is an empty {@link List}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteProcRequest.Options#CACHE_INPUT
     *                 CACHE_INPUT}: A comma-delimited list of table names from
     *                 {@code inputTableNames} from which input data will be
     *                 cached for use in subsequent calls to {@link
     *                 GPUdb#executeProc(String, Map, Map, List, Map, List,
     *                 Map)} with the {@code use_cached_input} option. Cached
     *                 input data will be retained until the proc status is
     *                 cleared with the {@link GPUdb#showProcStatus(String,
     *                 Map) clear_complete} option of {@link
     *                 GPUdb#showProcStatus(String, Map)} and all proc
     *                 instances using the cached data have completed.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteProcRequest.Options#USE_CACHED_INPUT
     *                 USE_CACHED_INPUT}: A comma-delimited list of run IDs (as
     *                 returned from prior calls to {@link
     *                 GPUdb#executeProc(String, Map, Map, List, Map, List,
     *                 Map)}) of running or completed proc instances from which
     *                 input data cached using the {@code cache_input} option
     *                 will be used. Cached input data will not be used for any
     *                 tables specified in {@code inputTableNames}, but data
     *                 from all other tables cached for the specified run IDs
     *                 will be passed to the proc. If the same table was cached
     *                 for multiple specified run IDs, the cached data from the
     *                 first run ID specified in the list that includes that
     *                 table will be used.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteProcRequest.Options#RUN_TAG
     *                 RUN_TAG}: A string that, if not empty, can be used in
     *                 subsequent calls to {@link GPUdb#showProcStatus(String,
     *                 Map)} or {@link GPUdb#killProc(String, Map)} to identify
     *                 the proc instance.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteProcRequest.Options#MAX_OUTPUT_LINES
     *                 MAX_OUTPUT_LINES}: The maximum number of lines of output
     *                 from stdout and stderr to return via {@link
     *                 GPUdb#showProcStatus(String, Map)}. If the number of
     *                 lines output exceeds the maximum, earlier lines are
     *                 discarded.  The default value is '100'.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteProcRequest.Options#EXECUTE_AT_STARTUP
     *                 EXECUTE_AT_STARTUP}: If {@code true}, an instance of the
     *                 proc will run when the database is started instead of
     *                 running immediately. The {@code runId} can be retrieved
     *                 using {@link GPUdb#showProc(String, Map)} and used in
     *                 {@link GPUdb#showProcStatus(String, Map)}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteProcRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteProcRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteProcRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteProcRequest.Options#EXECUTE_AT_STARTUP_AS
     *                 EXECUTE_AT_STARTUP_AS}: Sets the alternate user name to
     *                 execute this proc instance as when {@code
     *                 execute_at_startup} is {@code true}.  The default value
     *                 is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ExecuteProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ExecuteProcResponse executeProc(String procName, Map<String, String> params, Map<String, ByteBuffer> binParams, List<String> inputTableNames, Map<String, List<String>> inputColumnNames, List<String> outputTableNames, Map<String, String> options) throws GPUdbException {
        ExecuteProcRequest actualRequest_ = new ExecuteProcRequest(procName, params, binParams, inputTableNames, inputColumnNames, outputTableNames, options);
        ExecuteProcResponse actualResponse_ = new ExecuteProcResponse();
        submitRequest("/execute/proc", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Execute a SQL statement (query, DML, or DDL).
     * <p>
     * See <a href="../../../../../sql/" target="_top">SQL Support</a> for the
     * complete set of supported SQL commands.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RawExecuteSqlResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RawExecuteSqlResponse executeSqlRaw(ExecuteSqlRequest request) throws GPUdbException {
        RawExecuteSqlResponse actualResponse_ = new RawExecuteSqlResponse();
        submitRequest("/execute/sql", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Execute a SQL statement (query, DML, or DDL).
     * <p>
     * See <a href="../../../../../sql/" target="_top">SQL Support</a> for the
     * complete set of supported SQL commands.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ExecuteSqlResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ExecuteSqlResponse executeSql(ExecuteSqlRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawExecuteSqlResponse actualResponse_ = new RawExecuteSqlResponse();
        submitRequest("/execute/sql", request, actualResponse_, false);
        ExecuteSqlResponse response_ = new ExecuteSqlResponse();
        response_.setCountAffected(actualResponse_.getCountAffected());
        response_.setDataType( Type.fromDynamicSchema( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse() ) );
        response_.setData( DynamicTableRecord.transpose( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse(), response_.getDataType() ) );
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setPagingTable(actualResponse_.getPagingTable());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Execute a SQL statement (query, DML, or DDL).
     * <p>
     * See <a href="../../../../../sql/" target="_top">SQL Support</a> for the
     * complete set of supported SQL commands.
     * 
     * @param statement  SQL statement (query, DML, or DDL) to be executed
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results).  The default value is 0.The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or
     *               END_OF_SET (-9999) to indicate that the maximum number of
     *               results allowed by the server should be
     *               returned.  The number of records returned will never
     *               exceed the server's own limit, defined by the
     *               <a href="../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration.
     *               Use {@code hasMoreRecords} to see if more records exist in
     *               the result to be fetched, and
     *               {@code offset} & {@code limit} to request subsequent pages
     *               of results.  The default value is -9999.
     * @param requestSchemaStr  Avro schema of {@code data}.  The default value
     *                          is ''.
     * @param data  An array of binary-encoded data for the records to be
     *              binded to the SQL query.  Or use {@code query_parameters}
     *              to pass the data in JSON format.  The default value is an
     *              empty {@link List}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#COST_BASED_OPTIMIZATION
     *                 COST_BASED_OPTIMIZATION}: If {@code false}, disables the
     *                 cost-based optimization of the given query.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#DISTRIBUTED_JOINS
     *                 DISTRIBUTED_JOINS}: If {@code true}, enables the use of
     *                 distributed joins in servicing the given query.  Any
     *                 query requiring a distributed join will succeed, though
     *                 hints can be used in the query to change the
     *                 distribution of the source data to allow the query to
     *                 succeed.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#DISTRIBUTED_OPERATIONS
     *                 DISTRIBUTED_OPERATIONS}: If {@code true}, enables the
     *                 use of distributed operations in servicing the given
     *                 query.  Any query requiring a distributed join will
     *                 succeed, though hints can be used in the query to change
     *                 the distribution of the source data to allow the query
     *                 to succeed.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 inserting into or updating a table with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only
     *                 used when primary key record collisions are rejected
     *                 ({@code update_on_existing_pk}
     *                 is {@code false}).  If set to
     *                 {@code true}, any record insert/update that is rejected
     *                 for resulting in a primary key collision with an
     *                 existing table record will be ignored with no error
     *                 generated.  If {@code false}, the rejection of any
     *                 insert/update for resulting in a primary key collision
     *                 will cause an error to be reported.  If the
     *                 specified table does not have a primary key or if {@code
     *                 update_on_existing_pk} is
     *                 {@code true}, then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}:
     *                 Ignore inserts/updates that result in primary key
     *                 collisions with existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}: Treat as errors any inserts/updates that result
     *                 in primary key collisions with existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#LATE_MATERIALIZATION
     *                 LATE_MATERIALIZATION}: If {@code true}, Joins/Filters
     *                 results  will always be materialized ( saved to result
     *                 tables format)
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#PAGING_TABLE
     *                 PAGING_TABLE}: When empty or the specified paging table
     *                 not exists, the system will create a paging table and
     *                 return when query output has more records than the user
     *                 asked. If the paging table exists in the system, the
     *                 records from the paging table are returned without
     *                 evaluating the query.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#PAGING_TABLE_TTL
     *                 PAGING_TABLE_TTL}: Sets the <a
     *                 href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the paging table.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#PARALLEL_EXECUTION
     *                 PARALLEL_EXECUTION}: If {@code false}, disables the
     *                 parallel step execution of the given query.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#PLAN_CACHE
     *                 PLAN_CACHE}: If {@code false}, disables plan caching for
     *                 the given query.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#PREPARE_MODE
     *                 PREPARE_MODE}: If {@code true}, compiles a query into an
     *                 execution plan and saves it in query cache. Query
     *                 execution is not performed and an empty response will be
     *                 returned to user
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#PRESERVE_DICT_ENCODING
     *                 PRESERVE_DICT_ENCODING}: If {@code true}, then columns
     *                 that were dict encoded in the source table will be dict
     *                 encoded in the projection table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#QUERY_PARAMETERS
     *                 QUERY_PARAMETERS}: Query parameters in JSON array or
     *                 arrays (for inserting multiple rows).  This can be used
     *                 instead of {@code data} and {@code requestSchemaStr}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#RESULTS_CACHING
     *                 RESULTS_CACHING}: If {@code false}, disables caching of
     *                 the results of the given query
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#RULE_BASED_OPTIMIZATION
     *                 RULE_BASED_OPTIMIZATION}: If {@code false}, disables
     *                 rule-based rewrite optimizations for the given query
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#SSQ_OPTIMIZATION
     *                 SSQ_OPTIMIZATION}: If {@code false}, scalar subqueries
     *                 will be translated into joins
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TTL TTL}:
     *                 Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the intermediate result tables
     *                 used in query execution.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for inserting into or updating
     *                 a table with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>. If set to
     *                 {@code true}, any existing table record with primary
     *                 key values that match those of a record being inserted
     *                 or updated will be replaced by that record.
     *                 If set to {@code false}, any such primary key
     *                 collision will result in the insert/update being
     *                 rejected and the error handled as determined by
     *                 {@code ignore_existing_pk}.  If the specified table does
     *                 not have a primary key,
     *                 then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}:
     *                 Replace the collided-into record with the record
     *                 inserted or updated when a new/modified record causes a
     *                 primary key collision with an existing record
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}: Reject the insert or update when it results in a
     *                 primary key collision with an existing record
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#VALIDATE_CHANGE_COLUMN
     *                 VALIDATE_CHANGE_COLUMN}: When changing a column using
     *                 alter table, validate the change before applying it. If
     *                 {@code true}, then validate all values. A value too
     *                 large (or too long) for the new type will prevent any
     *                 change. If {@code false}, then when a value is too large
     *                 or long, it will be truncated.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExecuteSqlRequest.Options#CURRENT_SCHEMA
     *                 CURRENT_SCHEMA}: Use the supplied value as the <a
     *                 href="../../../../../concepts/schemas/#default-schema"
     *                 target="_top">default schema</a> when processing this
     *                 SQL command.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ExecuteSqlResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ExecuteSqlResponse executeSql(String statement, long offset, long limit, String requestSchemaStr, List<ByteBuffer> data, Map<String, String> options) throws GPUdbException {
        ExecuteSqlRequest actualRequest_ = new ExecuteSqlRequest(statement, offset, limit, null, requestSchemaStr, data, options);
        RawExecuteSqlResponse actualResponse_ = new RawExecuteSqlResponse();
        submitRequest("/execute/sql", actualRequest_, actualResponse_, false);
        ExecuteSqlResponse response_ = new ExecuteSqlResponse();
        response_.setCountAffected(actualResponse_.getCountAffected());
        response_.setDataType( Type.fromDynamicSchema( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse() ) );
        response_.setData( DynamicTableRecord.transpose( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse(), response_.getDataType() ) );
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setPagingTable(actualResponse_.getPagingTable());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Export records from a table to files. All tables can be exported, in
     * full or partial
     * (see {@code columns_to_export} and {@code columns_to_skip}).
     * Additional filtering can be applied when using export table with
     * expression through SQL.
     * Default destination is KIFS, though other storage types (Azure, S3, GCS,
     * and HDFS) are supported
     * through {@code datasink_name}; see {@link
     * GPUdb#createDatasink(CreateDatasinkRequest)}.
     * <p>
     * Server's local file system is not supported.  Default file format is
     * delimited text. See options for
     * different file types and different options for each file type.  Table is
     * saved to a single file if
     * within max file size limits (may vary depending on datasink type).  If
     * not, then table is split into
     * multiple files; these may be smaller than the max size limit.
     * <p>
     * All filenames created are returned in the response.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ExportRecordsToFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ExportRecordsToFilesResponse exportRecordsToFiles(ExportRecordsToFilesRequest request) throws GPUdbException {
        ExportRecordsToFilesResponse actualResponse_ = new ExportRecordsToFilesResponse();
        submitRequest("/export/records/tofiles", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Export records from a table to files. All tables can be exported, in
     * full or partial
     * (see {@code columns_to_export} and {@code columns_to_skip}).
     * Additional filtering can be applied when using export table with
     * expression through SQL.
     * Default destination is KIFS, though other storage types (Azure, S3, GCS,
     * and HDFS) are supported
     * through {@code datasink_name}; see {@link GPUdb#createDatasink(String,
     * String, Map)}.
     * <p>
     * Server's local file system is not supported.  Default file format is
     * delimited text. See options for
     * different file types and different options for each file type.  Table is
     * saved to a single file if
     * within max file size limits (may vary depending on datasink type).  If
     * not, then table is split into
     * multiple files; these may be smaller than the max size limit.
     * <p>
     * All filenames created are returned in the response.
     * 
     * @param tableName
     * @param filepath  Path to data export target.  If {@code filepath} has a
     *                  file extension, it is
     *                  read as the name of a file. If {@code filepath} is a
     *                  directory, then the source table name with a
     *                  random UUID appended will be used as the name of each
     *                  exported file, all written to that directory.
     *                  If filepath is a filename, then all exported files will
     *                  have a random UUID appended to the given
     *                  name.  In either case, the target directory specified
     *                  or implied must exist.  The names of all
     *                  exported files are returned in the response.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#BATCH_SIZE
     *                 BATCH_SIZE}: Number of records to be exported as a
     *                 batch.  The default value is '1000000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#COLUMN_FORMATS
     *                 COLUMN_FORMATS}: For each source column specified,
     *                 applies the column-property-bound
     *                 format.  Currently supported column properties include
     *                 date, time, & datetime. The parameter value
     *                 must be formatted as a JSON string of maps of column
     *                 names to maps of column properties to their
     *                 corresponding column formats, e.g.,
     *                 '{ "order_date" : { "date" : "%Y.%m.%d" }, "order_time"
     *                 : { "time" : "%H:%M:%S" } }'.
     *                 See {@code default_column_formats} for valid format
     *                 syntax.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#COLUMNS_TO_EXPORT
     *                 COLUMNS_TO_EXPORT}: Specifies a comma-delimited list of
     *                 columns from the source table to
     *                 export, written to the output file in the order they are
     *                 given.
     *                 Column names can be provided, in which case the target
     *                 file will use those names as the column
     *                 headers as well.
     *                 Alternatively, column numbers can be
     *                 specified--discretely or as a range.  For example, a
     *                 value of
     *                 '5,7,1..3' will write values from the fifth column in
     *                 the source table into the first column in the
     *                 target file, from the seventh column in the source table
     *                 into the second column in the target file,
     *                 and from the first through third columns in the source
     *                 table into the third through fifth columns in
     *                 the target file.
     *                 Mutually exclusive with {@code columns_to_skip}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#COLUMNS_TO_SKIP
     *                 COLUMNS_TO_SKIP}: Comma-separated list of column names
     *                 or column numbers to not
     *                 export.  All columns in the source table not specified
     *                 will be written to the target file in the
     *                 order they appear in the table definition.  Mutually
     *                 exclusive with
     *                 {@code columns_to_export}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#DATASINK_NAME
     *                 DATASINK_NAME}: Datasink name, created using {@link
     *                 GPUdb#createDatasink(String, String, Map)}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#DEFAULT_COLUMN_FORMATS
     *                 DEFAULT_COLUMN_FORMATS}: Specifies the default format to
     *                 use to write data.  Currently
     *                 supported column properties include date, time, &
     *                 datetime.  This default column-property-bound
     *                 format can be overridden by specifying a column property
     *                 & format for a given source column in
     *                 {@code column_formats}. For each specified annotation,
     *                 the format will apply to all
     *                 columns with that annotation unless custom {@code
     *                 column_formats} for that
     *                 annotation are specified.
     *                 The parameter value must be formatted as a JSON string
     *                 that is a map of column properties to their
     *                 respective column formats, e.g., '{ "date" : "%Y.%m.%d",
     *                 "time" : "%H:%M:%S" }'.  Column
     *                 formats are specified as a string of control characters
     *                 and plain text. The supported control
     *                 characters are 'Y', 'm', 'd', 'H', 'M', 'S', and 's',
     *                 which follow the Linux 'strptime()'
     *                 specification, as well as 's', which specifies seconds
     *                 and fractional seconds (though the fractional
     *                 component will be truncated past milliseconds).
     *                 Formats for the 'date' annotation must include the 'Y',
     *                 'm', and 'd' control characters. Formats for
     *                 the 'time' annotation must include the 'H', 'M', and
     *                 either 'S' or 's' (but not both) control
     *                 characters. Formats for the 'datetime' annotation meet
     *                 both the 'date' and 'time' control character
     *                 requirements. For example, '{"datetime" : "%m/%d/%Y
     *                 %H:%M:%S" }' would be used to write text
     *                 as "05/04/2000 12:12:11"
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#EXPORT_DDL
     *                 EXPORT_DDL}: Save DDL to a separate file.  The default
     *                 value is 'false'.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#FILE_EXTENSION
     *                 FILE_EXTENSION}: Extension to give the export file.  The
     *                 default value is '.csv'.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#FILE_TYPE
     *                 FILE_TYPE}: Specifies the file format to use when
     *                 exporting data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#DELIMITED_TEXT
     *                 DELIMITED_TEXT}: Delimited text file format; e.g., CSV,
     *                 TSV, PSV, etc.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#PARQUET
     *                 PARQUET}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#DELIMITED_TEXT
     *                 DELIMITED_TEXT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#KINETICA_HEADER
     *                 KINETICA_HEADER}: Whether to include a Kinetica
     *                 proprietary header. Will not be
     *                 written if {@code text_has_header} is
     *                 {@code false}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#KINETICA_HEADER_DELIMITER
     *                 KINETICA_HEADER_DELIMITER}: If a Kinetica proprietary
     *                 header is included, then specify a
     *                 property separator. Different from column delimiter.
     *                 The default value is '|'.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#COMPRESSION_TYPE
     *                 COMPRESSION_TYPE}: File compression type. GZip can be
     *                 applied to text and Parquet files.  Snappy can only be
     *                 applied to Parquet files, and is the default compression
     *                 for them.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#UNCOMPRESSED
     *                 UNCOMPRESSED}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#SNAPPY
     *                 SNAPPY}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#GZIP
     *                 GZIP}
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#SINGLE_FILE
     *                 SINGLE_FILE}: Save records to a single file. This option
     *                 may be ignored if file
     *                 size exceeds internal file size limits (this limit will
     *                 differ on different targets).
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#FALSE
     *                 FALSE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#OVERWRITE
     *                 OVERWRITE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#SINGLE_FILE_MAX_SIZE
     *                 SINGLE_FILE_MAX_SIZE}: Max file size (in MB) to allow
     *                 saving to a single file. May be overridden by target
     *                 limitations.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#TEXT_DELIMITER
     *                 TEXT_DELIMITER}: Specifies the character to write out to
     *                 delimit field values and
     *                 field names in the header (if present).
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is ','.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#TEXT_HAS_HEADER
     *                 TEXT_HAS_HEADER}: Indicates whether to write out a
     *                 header row.
     *                 For {@code delimited_text} {@code file_type} only.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToFilesRequest.Options#TEXT_NULL_STRING
     *                 TEXT_NULL_STRING}: Specifies the character string that
     *                 should be written out for the null
     *                 value in the data.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '\\N'.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ExportRecordsToFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ExportRecordsToFilesResponse exportRecordsToFiles(String tableName, String filepath, Map<String, String> options) throws GPUdbException {
        ExportRecordsToFilesRequest actualRequest_ = new ExportRecordsToFilesRequest(tableName, filepath, options);
        ExportRecordsToFilesResponse actualResponse_ = new ExportRecordsToFilesResponse();
        submitRequest("/export/records/tofiles", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Exports records from source table to the specified target table in an
     * external database
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ExportRecordsToTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ExportRecordsToTableResponse exportRecordsToTable(ExportRecordsToTableRequest request) throws GPUdbException {
        ExportRecordsToTableResponse actualResponse_ = new ExportRecordsToTableResponse();
        submitRequest("/export/records/totable", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Exports records from source table to the specified target table in an
     * external database
     * 
     * @param tableName  Name of the table from which the data will be exported
     *                   to remote database, in
     *                   [schema_name.]table_name format, using standard
     *                   <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param remoteQuery  Parameterized insert query to export gpudb table
     *                     data into remote database.  The default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#BATCH_SIZE
     *                 BATCH_SIZE}: Batch size, which determines how many rows
     *                 to export per round trip.  The default value is
     *                 '200000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#DATASINK_NAME
     *                 DATASINK_NAME}: Name of an existing external data sink
     *                 to which table name specified in {@code tableName} will
     *                 be exported
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#JDBC_SESSION_INIT_STATEMENT
     *                 JDBC_SESSION_INIT_STATEMENT}: Executes the statement per
     *                 each jdbc session before doing actual load.  The default
     *                 value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#JDBC_CONNECTION_INIT_STATEMENT
     *                 JDBC_CONNECTION_INIT_STATEMENT}: Executes the statement
     *                 once before doing actual load.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#REMOTE_TABLE
     *                 REMOTE_TABLE}: Name of the target table to which source
     *                 table is exported. When this option is specified
     *                 remote_query cannot be specified.  The default value is
     *                 ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#USE_ST_GEOMFROM_CASTS
     *                 USE_ST_GEOMFROM_CASTS}: Wraps parametrized variables
     *                 with st_geomfromtext or st_geomfromwkb based on source
     *                 column type
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#USE_INDEXED_PARAMETERS
     *                 USE_INDEXED_PARAMETERS}: Uses $n style syntax when
     *                 generating insert query for remote_table option
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ExportRecordsToTableRequest.Options#TRUE
     *                 TRUE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ExportRecordsToTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ExportRecordsToTableResponse exportRecordsToTable(String tableName, String remoteQuery, Map<String, String> options) throws GPUdbException {
        ExportRecordsToTableRequest actualRequest_ = new ExportRecordsToTableRequest(tableName, remoteQuery, options);
        ExportRecordsToTableResponse actualResponse_ = new ExportRecordsToTableResponse();
        submitRequest("/export/records/totable", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Filters data based on the specified expression.  The results are
     * stored in a <a href="../../../../../concepts/filtered_views/"
     * target="_top">result set</a> with the
     * given {@code viewName}.
     * <p>
     * For details see <a href="../../../../../concepts/expressions/"
     * target="_top">Expressions</a>.
     * <p>
     * The response message contains the number of points for which the
     * expression
     * evaluated to be true, which is equivalent to the size of the result
     * view.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterResponse filter(FilterRequest request) throws GPUdbException {
        FilterResponse actualResponse_ = new FilterResponse();
        submitRequest("/filter", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Filters data based on the specified expression.  The results are
     * stored in a <a href="../../../../../concepts/filtered_views/"
     * target="_top">result set</a> with the
     * given {@code viewName}.
     * <p>
     * For details see <a href="../../../../../concepts/expressions/"
     * target="_top">Expressions</a>.
     * <p>
     * The response message contains the number of points for which the
     * expression
     * evaluated to be true, which is equivalent to the size of the result
     * view.
     * 
     * @param tableName  Name of the table to filter, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  This may be
     *                   the name of a table or a view (when chaining queries).
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param expression  The select expression to filter the specified table.
     *                    For details see <a
     *                    href="../../../../../concepts/expressions/"
     *                    target="_top">Expressions</a>.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterRequest.Options#FALSE FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema is
     *                 non-existent, it will be automatically created.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterRequest.Options#VIEW_ID
     *                 VIEW_ID}: view this filtered-view is part of.  The
     *                 default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterRequest.Options#TTL TTL}: Sets
     *                 the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the view specified in {@code
     *                 viewName}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterResponse filter(String tableName, String viewName, String expression, Map<String, String> options) throws GPUdbException {
        FilterRequest actualRequest_ = new FilterRequest(tableName, viewName, expression, options);
        FilterResponse actualResponse_ = new FilterResponse();
        submitRequest("/filter", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which objects from a table are within a named area of
     * interest (NAI/polygon). The operation is synchronous, meaning that a
     * response
     * will not be returned until all the matching objects are fully available.
     * The
     * response payload provides the count of the resulting set. A new
     * resultant set
     * (view) which satisfies the input NAI restriction specification is
     * created with
     * the name {@code viewName} passed in as part of the input.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByAreaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByAreaResponse filterByArea(FilterByAreaRequest request) throws GPUdbException {
        FilterByAreaResponse actualResponse_ = new FilterByAreaResponse();
        submitRequest("/filter/byarea", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which objects from a table are within a named area of
     * interest (NAI/polygon). The operation is synchronous, meaning that a
     * response
     * will not be returned until all the matching objects are fully available.
     * The
     * response payload provides the count of the resulting set. A new
     * resultant set
     * (view) which satisfies the input NAI restriction specification is
     * created with
     * the name {@code viewName} passed in as part of the input.
     * 
     * @param tableName  Name of the table to filter, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  This may be
     *                   the name of a table or a view (when chaining queries).
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param xColumnName  Name of the column containing the x values to be
     *                     filtered.
     * @param xVector  List of x coordinates of the vertices of the polygon
     *                 representing the area to be filtered.
     * @param yColumnName  Name of the column containing the y values to be
     *                     filtered.
     * @param yVector  List of y coordinates of the vertices of the polygon
     *                 representing the area to be filtered.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByAreaRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByAreaRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByAreaRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByAreaRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByAreaRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema
     *                 provided is non-existent, it will be automatically
     *                 created.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByAreaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByAreaResponse filterByArea(String tableName, String viewName, String xColumnName, List<Double> xVector, String yColumnName, List<Double> yVector, Map<String, String> options) throws GPUdbException {
        FilterByAreaRequest actualRequest_ = new FilterByAreaRequest(tableName, viewName, xColumnName, xVector, yColumnName, yVector, options);
        FilterByAreaResponse actualResponse_ = new FilterByAreaResponse();
        submitRequest("/filter/byarea", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which geospatial geometry objects from a table intersect
     * a named area of interest (NAI/polygon). The operation is synchronous,
     * meaning
     * that a response will not be returned until all the matching objects are
     * fully
     * available. The response payload provides the count of the resulting set.
     * A new
     * resultant set (view) which satisfies the input NAI restriction
     * specification is
     * created with the name {@code viewName} passed in as part of the input.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByAreaGeometryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByAreaGeometryResponse filterByAreaGeometry(FilterByAreaGeometryRequest request) throws GPUdbException {
        FilterByAreaGeometryResponse actualResponse_ = new FilterByAreaGeometryResponse();
        submitRequest("/filter/byarea/geometry", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which geospatial geometry objects from a table intersect
     * a named area of interest (NAI/polygon). The operation is synchronous,
     * meaning
     * that a response will not be returned until all the matching objects are
     * fully
     * available. The response payload provides the count of the resulting set.
     * A new
     * resultant set (view) which satisfies the input NAI restriction
     * specification is
     * created with the name {@code viewName} passed in as part of the input.
     * 
     * @param tableName  Name of the table to filter, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  This may be
     *                   the name of a table or a view (when chaining queries).
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param columnName  Name of the geospatial geometry column to be
     *                    filtered.
     * @param xVector  List of x coordinates of the vertices of the polygon
     *                 representing the area to be filtered.
     * @param yVector  List of y coordinates of the vertices of the polygon
     *                 representing the area to be filtered.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByAreaGeometryRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByAreaGeometryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByAreaGeometryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByAreaGeometryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByAreaGeometryRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  The schema
     *                 for the newly created view. If the schema is
     *                 non-existent, it will be automatically created.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByAreaGeometryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByAreaGeometryResponse filterByAreaGeometry(String tableName, String viewName, String columnName, List<Double> xVector, List<Double> yVector, Map<String, String> options) throws GPUdbException {
        FilterByAreaGeometryRequest actualRequest_ = new FilterByAreaGeometryRequest(tableName, viewName, columnName, xVector, yVector, options);
        FilterByAreaGeometryResponse actualResponse_ = new FilterByAreaGeometryResponse();
        submitRequest("/filter/byarea/geometry", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates how many objects within the given table lie in a
     * rectangular box. The operation is synchronous, meaning that a response
     * will not
     * be returned until all the objects are fully available. The response
     * payload
     * provides the count of the resulting set. A new resultant set which
     * satisfies the
     * input NAI restriction specification is also created when a {@code
     * viewName} is
     * passed in as part of the input payload.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByBoxResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByBoxResponse filterByBox(FilterByBoxRequest request) throws GPUdbException {
        FilterByBoxResponse actualResponse_ = new FilterByBoxResponse();
        submitRequest("/filter/bybox", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates how many objects within the given table lie in a
     * rectangular box. The operation is synchronous, meaning that a response
     * will not
     * be returned until all the objects are fully available. The response
     * payload
     * provides the count of the resulting set. A new resultant set which
     * satisfies the
     * input NAI restriction specification is also created when a {@code
     * viewName} is
     * passed in as part of the input payload.
     * 
     * @param tableName  Name of the table on which the bounding box operation
     *                   will be performed, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table.
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param xColumnName  Name of the column on which to perform the bounding
     *                     box query. Must be a valid numeric column.
     * @param minX  Lower bound for the column chosen by {@code xColumnName}.
     *              Must be less than or equal to {@code maxX}.
     * @param maxX  Upper bound for {@code xColumnName}.  Must be greater than
     *              or equal to {@code minX}.
     * @param yColumnName  Name of a column on which to perform the bounding
     *                     box query. Must be a valid numeric column.
     * @param minY  Lower bound for {@code yColumnName}. Must be less than or
     *              equal to {@code maxY}.
     * @param maxY  Upper bound for {@code yColumnName}. Must be greater than
     *              or equal to {@code minY}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByBoxRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByBoxRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByBoxRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByBoxRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByBoxRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema is
     *                 non-existent, it will be automatically created.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByBoxResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByBoxResponse filterByBox(String tableName, String viewName, String xColumnName, double minX, double maxX, String yColumnName, double minY, double maxY, Map<String, String> options) throws GPUdbException {
        FilterByBoxRequest actualRequest_ = new FilterByBoxRequest(tableName, viewName, xColumnName, minX, maxX, yColumnName, minY, maxY, options);
        FilterByBoxResponse actualResponse_ = new FilterByBoxResponse();
        submitRequest("/filter/bybox", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which geospatial geometry objects from a table intersect
     * a rectangular box. The operation is synchronous, meaning that a response
     * will
     * not be returned until all the objects are fully available. The response
     * payload
     * provides the count of the resulting set. A new resultant set which
     * satisfies the
     * input NAI restriction specification is also created when a {@code
     * viewName} is
     * passed in as part of the input payload.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByBoxGeometryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByBoxGeometryResponse filterByBoxGeometry(FilterByBoxGeometryRequest request) throws GPUdbException {
        FilterByBoxGeometryResponse actualResponse_ = new FilterByBoxGeometryResponse();
        submitRequest("/filter/bybox/geometry", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which geospatial geometry objects from a table intersect
     * a rectangular box. The operation is synchronous, meaning that a response
     * will
     * not be returned until all the objects are fully available. The response
     * payload
     * provides the count of the resulting set. A new resultant set which
     * satisfies the
     * input NAI restriction specification is also created when a {@code
     * viewName} is
     * passed in as part of the input payload.
     * 
     * @param tableName  Name of the table on which the bounding box operation
     *                   will be performed, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>. Must be an
     *                   existing table.
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param columnName  Name of the geospatial geometry column to be
     *                    filtered.
     * @param minX  Lower bound for the x-coordinate of the rectangular box.
     *              Must be less than or equal to {@code maxX}.
     * @param maxX  Upper bound for the x-coordinate of the rectangular box.
     *              Must be greater than or equal to {@code minX}.
     * @param minY  Lower bound for the y-coordinate of the rectangular box.
     *              Must be less than or equal to {@code maxY}.
     * @param maxY  Upper bound for the y-coordinate of the rectangular box.
     *              Must be greater than or equal to {@code minY}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByBoxGeometryRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByBoxGeometryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByBoxGeometryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByBoxGeometryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByBoxGeometryRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema
     *                 provided is non-existent, it will be automatically
     *                 created.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByBoxGeometryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByBoxGeometryResponse filterByBoxGeometry(String tableName, String viewName, String columnName, double minX, double maxX, double minY, double maxY, Map<String, String> options) throws GPUdbException {
        FilterByBoxGeometryRequest actualRequest_ = new FilterByBoxGeometryRequest(tableName, viewName, columnName, minX, maxX, minY, maxY, options);
        FilterByBoxGeometryResponse actualResponse_ = new FilterByBoxGeometryResponse();
        submitRequest("/filter/bybox/geometry", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Applies a geometry filter against a geospatial geometry column in a
     * given table or view. The filtering geometry is provided by {@code
     * inputWkt}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByGeometryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByGeometryResponse filterByGeometry(FilterByGeometryRequest request) throws GPUdbException {
        FilterByGeometryResponse actualResponse_ = new FilterByGeometryResponse();
        submitRequest("/filter/bygeometry", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Applies a geometry filter against a geospatial geometry column in a
     * given table or view. The filtering geometry is provided by {@code
     * inputWkt}.
     * 
     * @param tableName  Name of the table on which the filter by geometry will
     *                   be performed, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table or view containing a geospatial
     *                   geometry column.
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param columnName  Name of the column to be used in the filter. Must be
     *                    a geospatial geometry column.
     * @param inputWkt  A geometry in WKT format that will be used to filter
     *                  the objects in {@code tableName}.  The default value is
     *                  ''.
     * @param operation  The geometric filtering operation to perform
     *                   Supported values:
     *                   <ul>
     *                           <li> {@link
     *                   com.gpudb.protocol.FilterByGeometryRequest.Operation#CONTAINS
     *                   CONTAINS}: Matches records that contain the given WKT
     *                   in {@code inputWkt}, i.e. the given WKT is within the
     *                   bounds of a record's geometry.
     *                           <li> {@link
     *                   com.gpudb.protocol.FilterByGeometryRequest.Operation#CROSSES
     *                   CROSSES}: Matches records that cross the given WKT.
     *                           <li> {@link
     *                   com.gpudb.protocol.FilterByGeometryRequest.Operation#DISJOINT
     *                   DISJOINT}: Matches records that are disjoint from the
     *                   given WKT.
     *                           <li> {@link
     *                   com.gpudb.protocol.FilterByGeometryRequest.Operation#EQUALS
     *                   EQUALS}: Matches records that are the same as the
     *                   given WKT.
     *                           <li> {@link
     *                   com.gpudb.protocol.FilterByGeometryRequest.Operation#INTERSECTS
     *                   INTERSECTS}: Matches records that intersect the given
     *                   WKT.
     *                           <li> {@link
     *                   com.gpudb.protocol.FilterByGeometryRequest.Operation#OVERLAPS
     *                   OVERLAPS}: Matches records that overlap the given WKT.
     *                           <li> {@link
     *                   com.gpudb.protocol.FilterByGeometryRequest.Operation#TOUCHES
     *                   TOUCHES}: Matches records that touch the given WKT.
     *                           <li> {@link
     *                   com.gpudb.protocol.FilterByGeometryRequest.Operation#WITHIN
     *                   WITHIN}: Matches records that are within the given
     *                   WKT.
     *                   </ul>
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByGeometryRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByGeometryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByGeometryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByGeometryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByGeometryRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema
     *                 provided is non-existent, it will be automatically
     *                 created.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByGeometryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByGeometryResponse filterByGeometry(String tableName, String viewName, String columnName, String inputWkt, String operation, Map<String, String> options) throws GPUdbException {
        FilterByGeometryRequest actualRequest_ = new FilterByGeometryRequest(tableName, viewName, columnName, inputWkt, operation, options);
        FilterByGeometryResponse actualResponse_ = new FilterByGeometryResponse();
        submitRequest("/filter/bygeometry", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which records from a table have values in the given list
     * for the corresponding column. The operation is synchronous, meaning that
     * a
     * response will not be returned until all the objects are fully available.
     * The
     * response payload provides the count of the resulting set. A new
     * resultant set
     * (view) which satisfies the input filter specification is also created if
     * a
     * {@code viewName} is passed in as part of the request.
     * <p>
     * For example, if a type definition has the columns 'x' and 'y', then a
     * filter by
     * list query with the column map
     * {"x":["10.1", "2.3"], "y":["0.0", "-31.5", "42.0"]} will return
     * the count of all data points whose x and y values match both in the
     * respective
     * x- and y-lists, e.g., "x = 10.1 and y = 0.0", "x = 2.3 and y = -31.5",
     * etc.
     * However, a record with "x = 10.1 and y = -31.5" or "x = 2.3 and y = 0.0"
     * would not be returned because the values in the given lists do not
     * correspond.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByListResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByListResponse filterByList(FilterByListRequest request) throws GPUdbException {
        FilterByListResponse actualResponse_ = new FilterByListResponse();
        submitRequest("/filter/bylist", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which records from a table have values in the given list
     * for the corresponding column. The operation is synchronous, meaning that
     * a
     * response will not be returned until all the objects are fully available.
     * The
     * response payload provides the count of the resulting set. A new
     * resultant set
     * (view) which satisfies the input filter specification is also created if
     * a
     * {@code viewName} is passed in as part of the request.
     * <p>
     * For example, if a type definition has the columns 'x' and 'y', then a
     * filter by
     * list query with the column map
     * {"x":["10.1", "2.3"], "y":["0.0", "-31.5", "42.0"]} will return
     * the count of all data points whose x and y values match both in the
     * respective
     * x- and y-lists, e.g., "x = 10.1 and y = 0.0", "x = 2.3 and y = -31.5",
     * etc.
     * However, a record with "x = 10.1 and y = -31.5" or "x = 2.3 and y = 0.0"
     * would not be returned because the values in the given lists do not
     * correspond.
     * 
     * @param tableName  Name of the table to filter, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  This may be
     *                   the name of a table or a view (when chaining queries).
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param columnValuesMap  List of values for the corresponding column in
     *                         the table
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByListRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByListRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByListRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByListRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByListRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema
     *                 provided is non-existent, it will be automatically
     *                 created.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByListRequest.Options#FILTER_MODE
     *                 FILTER_MODE}: String indicating the filter mode, either
     *                 'in_list' or 'not_in_list'.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByListRequest.Options#IN_LIST
     *                 IN_LIST}: The filter will match all items that are in
     *                 the provided list(s).
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByListRequest.Options#NOT_IN_LIST
     *                 NOT_IN_LIST}: The filter will match all items that are
     *                 not in the provided list(s).
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByListRequest.Options#IN_LIST
     *                 IN_LIST}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByListResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByListResponse filterByList(String tableName, String viewName, Map<String, List<String>> columnValuesMap, Map<String, String> options) throws GPUdbException {
        FilterByListRequest actualRequest_ = new FilterByListRequest(tableName, viewName, columnValuesMap, options);
        FilterByListResponse actualResponse_ = new FilterByListResponse();
        submitRequest("/filter/bylist", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which objects from a table lie within a circle with the
     * given radius and center point (i.e. circular NAI). The operation is
     * synchronous,
     * meaning that a response will not be returned until all the objects are
     * fully
     * available. The response payload provides the count of the resulting set.
     * A new
     * resultant set (view) which satisfies the input circular NAI restriction
     * specification is also created if a {@code viewName} is passed in as part
     * of
     * the request.
     * <p>
     * For track data, all track points that lie within the circle plus one
     * point on
     * either side of the circle (if the track goes beyond the circle) will be
     * included
     * in the result.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByRadiusResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByRadiusResponse filterByRadius(FilterByRadiusRequest request) throws GPUdbException {
        FilterByRadiusResponse actualResponse_ = new FilterByRadiusResponse();
        submitRequest("/filter/byradius", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which objects from a table lie within a circle with the
     * given radius and center point (i.e. circular NAI). The operation is
     * synchronous,
     * meaning that a response will not be returned until all the objects are
     * fully
     * available. The response payload provides the count of the resulting set.
     * A new
     * resultant set (view) which satisfies the input circular NAI restriction
     * specification is also created if a {@code viewName} is passed in as part
     * of
     * the request.
     * <p>
     * For track data, all track points that lie within the circle plus one
     * point on
     * either side of the circle (if the track goes beyond the circle) will be
     * included
     * in the result.
     * 
     * @param tableName  Name of the table on which the filter by radius
     *                   operation will be performed, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table.
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param xColumnName  Name of the column to be used for the x-coordinate
     *                     (the longitude) of the center.
     * @param xCenter  Value of the longitude of the center. Must be within
     *                 [-180.0, 180.0].  The minimum allowed value is -180. The
     *                 maximum allowed value is 180.
     * @param yColumnName  Name of the column to be used for the
     *                     y-coordinate-the latitude-of the center.
     * @param yCenter  Value of the latitude of the center. Must be within
     *                 [-90.0, 90.0].  The minimum allowed value is -90. The
     *                 maximum allowed value is 90.
     * @param radius  The radius of the circle within which the search will be
     *                performed. Must be a non-zero positive value. It is in
     *                meters; so, for example, a value of '42000' means 42 km.
     *                The minimum allowed value is 0. The maximum allowed value
     *                is MAX_INT.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRadiusRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRadiusRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRadiusRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByRadiusRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRadiusRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema which is to contain the newly created view. If
     *                 the schema is non-existent, it will be automatically
     *                 created.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByRadiusResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByRadiusResponse filterByRadius(String tableName, String viewName, String xColumnName, double xCenter, String yColumnName, double yCenter, double radius, Map<String, String> options) throws GPUdbException {
        FilterByRadiusRequest actualRequest_ = new FilterByRadiusRequest(tableName, viewName, xColumnName, xCenter, yColumnName, yCenter, radius, options);
        FilterByRadiusResponse actualResponse_ = new FilterByRadiusResponse();
        submitRequest("/filter/byradius", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which geospatial geometry objects from a table intersect
     * a circle with the given radius and center point (i.e. circular NAI). The
     * operation is synchronous, meaning that a response will not be returned
     * until all
     * the objects are fully available. The response payload provides the count
     * of the
     * resulting set. A new resultant set (view) which satisfies the input
     * circular NAI
     * restriction specification is also created if a {@code viewName} is
     * passed in
     * as part of the request.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByRadiusGeometryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByRadiusGeometryResponse filterByRadiusGeometry(FilterByRadiusGeometryRequest request) throws GPUdbException {
        FilterByRadiusGeometryResponse actualResponse_ = new FilterByRadiusGeometryResponse();
        submitRequest("/filter/byradius/geometry", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which geospatial geometry objects from a table intersect
     * a circle with the given radius and center point (i.e. circular NAI). The
     * operation is synchronous, meaning that a response will not be returned
     * until all
     * the objects are fully available. The response payload provides the count
     * of the
     * resulting set. A new resultant set (view) which satisfies the input
     * circular NAI
     * restriction specification is also created if a {@code viewName} is
     * passed in
     * as part of the request.
     * 
     * @param tableName  Name of the table on which the filter by radius
     *                   operation will be performed, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table.
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param columnName  Name of the geospatial geometry column to be
     *                    filtered.
     * @param xCenter  Value of the longitude of the center. Must be within
     *                 [-180.0, 180.0].  The minimum allowed value is -180. The
     *                 maximum allowed value is 180.
     * @param yCenter  Value of the latitude of the center. Must be within
     *                 [-90.0, 90.0].  The minimum allowed value is -90. The
     *                 maximum allowed value is 90.
     * @param radius  The radius of the circle within which the search will be
     *                performed. Must be a non-zero positive value. It is in
     *                meters; so, for example, a value of '42000' means 42 km.
     *                The minimum allowed value is 0. The maximum allowed value
     *                is MAX_INT.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRadiusGeometryRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRadiusGeometryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRadiusGeometryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByRadiusGeometryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRadiusGeometryRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema
     *                 provided is non-existent, it will be automatically
     *                 created.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByRadiusGeometryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByRadiusGeometryResponse filterByRadiusGeometry(String tableName, String viewName, String columnName, double xCenter, double yCenter, double radius, Map<String, String> options) throws GPUdbException {
        FilterByRadiusGeometryRequest actualRequest_ = new FilterByRadiusGeometryRequest(tableName, viewName, columnName, xCenter, yCenter, radius, options);
        FilterByRadiusGeometryResponse actualResponse_ = new FilterByRadiusGeometryResponse();
        submitRequest("/filter/byradius/geometry", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which objects from a table have a column that is within
     * the given bounds. An object from the table identified by {@code
     * tableName} is
     * added to the view {@code viewName} if its column is within
     * [{@code lowerBound}, {@code upperBound}] (inclusive). The operation is
     * synchronous. The response provides a count of the number of objects
     * which passed
     * the bound filter.  Although this functionality can also be accomplished
     * with the
     * standard filter function, it is more efficient.
     * <p>
     * For track objects, the count reflects how many points fall within the
     * given
     * bounds (which may not include all the track points of any given track).
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByRangeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByRangeResponse filterByRange(FilterByRangeRequest request) throws GPUdbException {
        FilterByRangeResponse actualResponse_ = new FilterByRangeResponse();
        submitRequest("/filter/byrange", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which objects from a table have a column that is within
     * the given bounds. An object from the table identified by {@code
     * tableName} is
     * added to the view {@code viewName} if its column is within
     * [{@code lowerBound}, {@code upperBound}] (inclusive). The operation is
     * synchronous. The response provides a count of the number of objects
     * which passed
     * the bound filter.  Although this functionality can also be accomplished
     * with the
     * standard filter function, it is more efficient.
     * <p>
     * For track objects, the count reflects how many points fall within the
     * given
     * bounds (which may not include all the track points of any given track).
     * 
     * @param tableName  Name of the table on which the filter by range
     *                   operation will be performed, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table.
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param columnName  Name of a column on which the operation would be
     *                    applied.
     * @param lowerBound  Value of the lower bound (inclusive).
     * @param upperBound  Value of the upper bound (inclusive).
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRangeRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRangeRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRangeRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByRangeRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByRangeRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema is
     *                 non-existent, it will be automatically created.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByRangeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByRangeResponse filterByRange(String tableName, String viewName, String columnName, double lowerBound, double upperBound, Map<String, String> options) throws GPUdbException {
        FilterByRangeRequest actualRequest_ = new FilterByRangeRequest(tableName, viewName, columnName, lowerBound, upperBound, options);
        FilterByRangeResponse actualResponse_ = new FilterByRangeResponse();
        submitRequest("/filter/byrange", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Filters objects matching all points of the given track (works only
     * on track type data).  It allows users to specify a particular track to
     * find all
     * other points in the table that fall within specified ranges (spatial and
     * temporal) of all points of the given track. Additionally, the user can
     * specify
     * another track to see if the two intersect (or go close to each other
     * within the
     * specified ranges). The user also has the flexibility of using different
     * metrics
     * for the spatial distance calculation: Euclidean (flat geometry) or Great
     * Circle
     * (spherical geometry to approximate the Earth's surface distances). The
     * filtered
     * points are stored in a newly created result set. The return value of the
     * function is the number of points in the resultant set (view).
     * <p>
     * This operation is synchronous, meaning that a response will not be
     * returned
     * until all the objects are fully available.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterBySeriesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterBySeriesResponse filterBySeries(FilterBySeriesRequest request) throws GPUdbException {
        FilterBySeriesResponse actualResponse_ = new FilterBySeriesResponse();
        submitRequest("/filter/byseries", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Filters objects matching all points of the given track (works only
     * on track type data).  It allows users to specify a particular track to
     * find all
     * other points in the table that fall within specified ranges (spatial and
     * temporal) of all points of the given track. Additionally, the user can
     * specify
     * another track to see if the two intersect (or go close to each other
     * within the
     * specified ranges). The user also has the flexibility of using different
     * metrics
     * for the spatial distance calculation: Euclidean (flat geometry) or Great
     * Circle
     * (spherical geometry to approximate the Earth's surface distances). The
     * filtered
     * points are stored in a newly created result set. The return value of the
     * function is the number of points in the resultant set (view).
     * <p>
     * This operation is synchronous, meaning that a response will not be
     * returned
     * until all the objects are fully available.
     * 
     * @param tableName  Name of the table on which the filter by track
     *                   operation will be performed, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>. Must be a
     *                   currently existing table with a <a
     *                   href="../../../../../geospatial/geo_objects/"
     *                   target="_top">track</a> present.
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param trackId  The ID of the track which will act as the filtering
     *                 points. Must be an existing track within the given
     *                 table.
     * @param targetTrackIds  Up to one track ID to intersect with the "filter"
     *                        track. If any provided, it must be an valid track
     *                        ID within the given set.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterBySeriesRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterBySeriesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterBySeriesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterBySeriesRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterBySeriesRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema is
     *                 non-existent, it will be automatically created.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterBySeriesRequest.Options#SPATIAL_RADIUS
     *                 SPATIAL_RADIUS}: A positive number passed as a string
     *                 representing the radius of the search area centered
     *                 around each track point's geospatial coordinates. The
     *                 value is interpreted in meters. Required parameter.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterBySeriesRequest.Options#TIME_RADIUS
     *                 TIME_RADIUS}: A positive number passed as a string
     *                 representing the maximum allowable time difference
     *                 between the timestamps of a filtered object and the
     *                 given track's points. The value is interpreted in
     *                 seconds. Required parameter.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterBySeriesRequest.Options#SPATIAL_DISTANCE_METRIC
     *                 SPATIAL_DISTANCE_METRIC}: A string representing the
     *                 coordinate system to use for the spatial search
     *                 criteria. Acceptable values are 'euclidean' and
     *                 'great_circle'. Optional parameter; default is
     *                 'euclidean'.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterBySeriesRequest.Options#EUCLIDEAN
     *                 EUCLIDEAN}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterBySeriesRequest.Options#GREAT_CIRCLE
     *                 GREAT_CIRCLE}
     *                 </ul>
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterBySeriesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterBySeriesResponse filterBySeries(String tableName, String viewName, String trackId, List<String> targetTrackIds, Map<String, String> options) throws GPUdbException {
        FilterBySeriesRequest actualRequest_ = new FilterBySeriesRequest(tableName, viewName, trackId, targetTrackIds, options);
        FilterBySeriesResponse actualResponse_ = new FilterBySeriesResponse();
        submitRequest("/filter/byseries", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which objects from a table or view match a string
     * expression for the given string columns. Setting
     * {@code case_sensitive} can modify case sensitivity in matching
     * for all modes except {@code search}. For
     * {@code search} mode details and limitations, see
     * <a href="../../../../../concepts/full_text_search/" target="_top">Full
     * Text Search</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByStringResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByStringResponse filterByString(FilterByStringRequest request) throws GPUdbException {
        FilterByStringResponse actualResponse_ = new FilterByStringResponse();
        submitRequest("/filter/bystring", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which objects from a table or view match a string
     * expression for the given string columns. Setting
     * {@code case_sensitive} can modify case sensitivity in matching
     * for all modes except {@code search}. For
     * {@code search} mode details and limitations, see
     * <a href="../../../../../concepts/full_text_search/" target="_top">Full
     * Text Search</a>.
     * 
     * @param tableName  Name of the table on which the filter operation will
     *                   be performed, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table or view.
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param expression  The expression with which to filter the table.
     * @param mode  The string filtering mode to apply. See below for details.
     *              Supported values:
     *              <ul>
     *                      <li> {@link
     *              com.gpudb.protocol.FilterByStringRequest.Mode#SEARCH
     *              SEARCH}: Full text search query with wildcards and boolean
     *              operators. Note that for this mode, no column can be
     *              specified in {@code columnNames}; all string columns of the
     *              table that have text search enabled will be searched.
     *                      <li> {@link
     *              com.gpudb.protocol.FilterByStringRequest.Mode#EQUALS
     *              EQUALS}: Exact whole-string match (accelerated).
     *                      <li> {@link
     *              com.gpudb.protocol.FilterByStringRequest.Mode#CONTAINS
     *              CONTAINS}: Partial substring match (not accelerated).  If
     *              the column is a string type (non-charN) and the number of
     *              records is too large, it will return 0.
     *                      <li> {@link
     *              com.gpudb.protocol.FilterByStringRequest.Mode#STARTS_WITH
     *              STARTS_WITH}: Strings that start with the given expression
     *              (not accelerated). If the column is a string type
     *              (non-charN) and the number of records is too large, it will
     *              return 0.
     *                      <li> {@link
     *              com.gpudb.protocol.FilterByStringRequest.Mode#REGEX REGEX}:
     *              Full regular expression search (not accelerated). If the
     *              column is a string type (non-charN) and the number of
     *              records is too large, it will return 0.
     *              </ul>
     * @param columnNames  List of columns on which to apply the filter.
     *                     Ignored for {@code search} mode.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByStringRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByStringRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByStringRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByStringRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByStringRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema is
     *                 non-existent, it will be automatically created.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByStringRequest.Options#CASE_SENSITIVE
     *                 CASE_SENSITIVE}: If {@code false} then string filtering
     *                 will ignore case. Does not apply to {@code search} mode.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByStringRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByStringRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByStringRequest.Options#TRUE
     *                 TRUE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByStringResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByStringResponse filterByString(String tableName, String viewName, String expression, String mode, List<String> columnNames, Map<String, String> options) throws GPUdbException {
        FilterByStringRequest actualRequest_ = new FilterByStringRequest(tableName, viewName, expression, mode, columnNames, options);
        FilterByStringResponse actualResponse_ = new FilterByStringResponse();
        submitRequest("/filter/bystring", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Filters objects in one table based on objects in another table. The
     * user must specify matching column types from the two tables (i.e. the
     * target
     * table from which objects will be filtered and the source table based on
     * which
     * the filter will be created); the column names need not be the same. If a
     * {@code viewName} is specified, then the filtered objects will then be
     * put in a
     * newly created view. The operation is synchronous, meaning that a
     * response will
     * not be returned until all objects are fully available in the result
     * view. The
     * return value contains the count (i.e. the size) of the resulting view.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByTableResponse filterByTable(FilterByTableRequest request) throws GPUdbException {
        FilterByTableResponse actualResponse_ = new FilterByTableResponse();
        submitRequest("/filter/bytable", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Filters objects in one table based on objects in another table. The
     * user must specify matching column types from the two tables (i.e. the
     * target
     * table from which objects will be filtered and the source table based on
     * which
     * the filter will be created); the column names need not be the same. If a
     * {@code viewName} is specified, then the filtered objects will then be
     * put in a
     * newly created view. The operation is synchronous, meaning that a
     * response will
     * not be returned until all objects are fully available in the result
     * view. The
     * return value contains the count (i.e. the size) of the resulting view.
     * 
     * @param tableName  Name of the table whose data will be filtered, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table.
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param columnName  Name of the column by whose value the data will be
     *                    filtered from the table designated by {@code
     *                    tableName}.
     * @param sourceTableName  Name of the table whose data will be compared
     *                         against in the table called {@code tableName},
     *                         in [schema_name.]table_name format, using
     *                         standard <a
     *                         href="../../../../../concepts/tables/#table-name-resolution"
     *                         target="_top">name resolution rules</a>.  Must
     *                         be an existing table.
     * @param sourceTableColumnName  Name of the column in the {@code
     *                               sourceTableName} whose values will be used
     *                               as the filter for table {@code tableName}.
     *                               Must be a geospatial geometry column if in
     *                               'spatial' mode; otherwise, Must match the
     *                               type of the {@code columnName}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema is
     *                 non-existent, it will be automatically created.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#FILTER_MODE
     *                 FILTER_MODE}: String indicating the filter mode, either
     *                 {@code in_table} or {@code not_in_table}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#IN_TABLE
     *                 IN_TABLE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#NOT_IN_TABLE
     *                 NOT_IN_TABLE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#IN_TABLE
     *                 IN_TABLE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#MODE
     *                 MODE}: Mode - should be either {@code spatial} or {@code
     *                 normal}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#NORMAL
     *                 NORMAL}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#SPATIAL
     *                 SPATIAL}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#NORMAL
     *                 NORMAL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#BUFFER
     *                 BUFFER}: Buffer size, in meters. Only relevant for
     *                 {@code spatial} mode.  The default value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#BUFFER_METHOD
     *                 BUFFER_METHOD}: Method used to buffer polygons.  Only
     *                 relevant for {@code spatial} mode.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#NORMAL
     *                 NORMAL}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#GEOS
     *                 GEOS}: Use geos 1 edge per corner algorithm
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#NORMAL
     *                 NORMAL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#MAX_PARTITION_SIZE
     *                 MAX_PARTITION_SIZE}: Maximum number of points in a
     *                 partition. Only relevant for {@code spatial} mode.  The
     *                 default value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#MAX_PARTITION_SCORE
     *                 MAX_PARTITION_SCORE}: Maximum number of points * edges
     *                 in a partition. Only relevant for {@code spatial} mode.
     *                 The default value is '8000000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#X_COLUMN_NAME
     *                 X_COLUMN_NAME}: Name of column containing x value of
     *                 point being filtered in {@code spatial} mode.  The
     *                 default value is 'x'.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByTableRequest.Options#Y_COLUMN_NAME
     *                 Y_COLUMN_NAME}: Name of column containing y value of
     *                 point being filtered in {@code spatial} mode.  The
     *                 default value is 'y'.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByTableResponse filterByTable(String tableName, String viewName, String columnName, String sourceTableName, String sourceTableColumnName, Map<String, String> options) throws GPUdbException {
        FilterByTableRequest actualRequest_ = new FilterByTableRequest(tableName, viewName, columnName, sourceTableName, sourceTableColumnName, options);
        FilterByTableResponse actualResponse_ = new FilterByTableResponse();
        submitRequest("/filter/bytable", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which objects from a table has a particular value for a
     * particular column. The input parameters provide a way to specify either
     * a String
     * or a Double valued column and a desired value for the column on which
     * the filter
     * is performed. The operation is synchronous, meaning that a response will
     * not be
     * returned until all the objects are fully available. The response payload
     * provides the count of the resulting set. A new result view which
     * satisfies the
     * input filter restriction specification is also created with a view name
     * passed
     * in as part of the input payload.  Although this functionality can also
     * be
     * accomplished with the standard filter function, it is more efficient.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByValueResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByValueResponse filterByValue(FilterByValueRequest request) throws GPUdbException {
        FilterByValueResponse actualResponse_ = new FilterByValueResponse();
        submitRequest("/filter/byvalue", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Calculates which objects from a table has a particular value for a
     * particular column. The input parameters provide a way to specify either
     * a String
     * or a Double valued column and a desired value for the column on which
     * the filter
     * is performed. The operation is synchronous, meaning that a response will
     * not be
     * returned until all the objects are fully available. The response payload
     * provides the count of the resulting set. A new result view which
     * satisfies the
     * input filter restriction specification is also created with a view name
     * passed
     * in as part of the input payload.  Although this functionality can also
     * be
     * accomplished with the standard filter function, it is more efficient.
     * 
     * @param tableName  Name of an existing table on which to perform the
     *                   calculation, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param viewName  If provided, then this will be the name of the view
     *                  containing the results, in [schema_name.]view_name
     *                  format, using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a> and meeting <a
     *                  href="../../../../../concepts/tables/#table-naming-criteria"
     *                  target="_top">table naming criteria</a>.  Must not be
     *                  an already existing table or view.  The default value
     *                  is ''.
     * @param isString  Indicates whether the value being searched for is
     *                  string or numeric.
     * @param value  The value to search for.  The default value is 0.
     * @param valueStr  The string value to search for.  The default value is
     *                  ''.
     * @param columnName  Name of a column on which the filter by value would
     *                    be applied.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByValueRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code viewName}. This is always
     *                 allowed even if the caller does not have permission to
     *                 create tables. The generated name is returned in {@code
     *                 qualified_view_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByValueRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByValueRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.FilterByValueRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.FilterByValueRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the view as part of {@code
     *                 viewName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created view. If the schema is
     *                 non-existent, it will be automatically created.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  FilterByValueResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public FilterByValueResponse filterByValue(String tableName, String viewName, boolean isString, double value, String valueStr, String columnName, Map<String, String> options) throws GPUdbException {
        FilterByValueRequest actualRequest_ = new FilterByValueRequest(tableName, viewName, isString, value, valueStr, columnName, options);
        FilterByValueResponse actualResponse_ = new FilterByValueResponse();
        submitRequest("/filter/byvalue", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Get the status and result of asynchronously running job.  See the {@link
     * GPUdb#createJob(CreateJobRequest)} for starting an asynchronous job.
     * Some fields of the response are filled only after the submitted job has
     * finished execution.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetJobResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GetJobResponse getJob(GetJobRequest request) throws GPUdbException {
        GetJobResponse actualResponse_ = new GetJobResponse();
        submitRequest("/get/job", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Get the status and result of asynchronously running job.  See the {@link
     * GPUdb#createJob(String, String, ByteBuffer, String, Map)} for starting
     * an asynchronous job.  Some fields of the response are filled only after
     * the submitted job has finished execution.
     * 
     * @param jobId  A unique identifier for the job whose status and result is
     *               to be fetched.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetJobRequest.Options#JOB_TAG
     *                 JOB_TAG}: Job tag returned in call to create the job
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetJobResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GetJobResponse getJob(long jobId, Map<String, String> options) throws GPUdbException {
        GetJobRequest actualRequest_ = new GetJobRequest(jobId, options);
        GetJobResponse actualResponse_ = new GetJobResponse();
        submitRequest("/get/job", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves records from a given table, optionally filtered by an
     * expression and/or sorted by a column. This operation can be performed on
     * tables
     * and views. Records can be returned encoded as binary, json, or geojson.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.  Note that when paging through a table, if the
     * table
     * (or the underlying table in case of a view) is updated (records are
     * inserted,
     * deleted or modified) the records retrieved may differ between calls
     * based on the
     * updates applied.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RawGetRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RawGetRecordsResponse getRecordsRaw(GetRecordsRequest request) throws GPUdbException {
        RawGetRecordsResponse actualResponse_ = new RawGetRecordsResponse();
        submitRequest("/get/records", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves records from a given table, optionally filtered by an
     * expression and/or sorted by a column. This operation can be performed on
     * tables
     * and views. Records can be returned encoded as binary, json, or geojson.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.  Note that when paging through a table, if the
     * table
     * (or the underlying table in case of a view) is updated (records are
     * inserted,
     * deleted or modified) the records retrieved may differ between calls
     * based on the
     * updates applied.
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param typeDescriptor  Type descriptor used for decoding returned
     *                        objects.
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsResponse
     * 
     * @throws IllegalArgumentException  if {@code typeDescriptor} is not an
     *                                   instance of one of the following:
     *                                   {@link Type}, {@link TypeObjectMap},
     *                                   {@link org.apache.avro.Schema}, or a
     *                                   {@link Class} that implements {@link
     *                                   org.apache.avro.generic.IndexedRecord}
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsResponse<TResponse> getRecords(Object typeDescriptor, GetRecordsRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawGetRecordsResponse actualResponse_ = new RawGetRecordsResponse();
        submitRequest("/get/records", request, actualResponse_, false);
        GetRecordsResponse<TResponse> response_ = new GetRecordsResponse<>();
        response_.setTableName(actualResponse_.getTableName());
        response_.setTypeName(actualResponse_.getTypeName());
        response_.setTypeSchema(actualResponse_.getTypeSchema());
        response_.setData(this.<TResponse>decode(typeDescriptor, actualResponse_.getRecordsBinary()));
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves records from a given table, optionally filtered by an
     * expression and/or sorted by a column. This operation can be performed on
     * tables
     * and views. Records can be returned encoded as binary, json, or geojson.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.  Note that when paging through a table, if the
     * table
     * (or the underlying table in case of a view) is updated (records are
     * inserted,
     * deleted or modified) the records retrieved may differ between calls
     * based on the
     * updates applied.
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param typeDescriptor  Type descriptor used for decoding returned
     *                        objects.
     * @param tableName  Name of the table or view from which the records will
     *                   be fetched, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results).  The default value is 0.The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or
     *               END_OF_SET (-9999) to indicate that the maximum number of
     *               results allowed by the server should be
     *               returned.  The number of records returned will never
     *               exceed the server's own limit, defined by the
     *               <a href="../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration.
     *               Use {@code hasMoreRecords} to see if more records exist in
     *               the result to be fetched, and
     *               {@code offset} & {@code limit} to request subsequent pages
     *               of results.  The default value is -9999.
     * @param options
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#EXPRESSION
     *                 EXPRESSION}: Optional filter expression to apply to the
     *                 table.
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#FAST_INDEX_LOOKUP
     *                 FAST_INDEX_LOOKUP}: Indicates if indexes should be used
     *                 to perform the lookup for a given expression if
     *                 possible. Only applicable if there is no sorting, the
     *                 expression contains only equivalence comparisons based
     *                 on existing tables indexes and the range of requested
     *                 values is from [0 to END_OF_SET].
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#SORT_BY
     *                 SORT_BY}: Optional column that the data should be sorted
     *                 by. Empty by default (i.e. no sorting is applied).
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#SORT_ORDER
     *                 SORT_ORDER}: String indicating how the returned values
     *                 should be sorted - ascending or descending. If
     *                 sort_order is provided, sort_by has to be provided.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#ASCENDING
     *                 ASCENDING}
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#DESCENDING
     *                 DESCENDING}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#ASCENDING
     *                 ASCENDING}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsResponse
     * 
     * @throws IllegalArgumentException  if {@code typeDescriptor} is not an
     *                                   instance of one of the following:
     *                                   {@link Type}, {@link TypeObjectMap},
     *                                   {@link org.apache.avro.Schema}, or a
     *                                   {@link Class} that implements {@link
     *                                   org.apache.avro.generic.IndexedRecord}
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsResponse<TResponse> getRecords(Object typeDescriptor, String tableName, long offset, long limit, Map<String, String> options) throws GPUdbException {
        GetRecordsRequest actualRequest_ = new GetRecordsRequest(tableName, offset, limit, null, options);
        RawGetRecordsResponse actualResponse_ = new RawGetRecordsResponse();
        submitRequest("/get/records", actualRequest_, actualResponse_, false);
        GetRecordsResponse<TResponse> response_ = new GetRecordsResponse<>();
        response_.setTableName(actualResponse_.getTableName());
        response_.setTypeName(actualResponse_.getTypeName());
        response_.setTypeSchema(actualResponse_.getTypeSchema());
        response_.setData(this.<TResponse>decode(typeDescriptor, actualResponse_.getRecordsBinary()));
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves records from a given table, optionally filtered by an
     * expression and/or sorted by a column. This operation can be performed on
     * tables
     * and views. Records can be returned encoded as binary, json, or geojson.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.  Note that when paging through a table, if the
     * table
     * (or the underlying table in case of a view) is updated (records are
     * inserted,
     * deleted or modified) the records retrieved may differ between calls
     * based on the
     * updates applied.
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsResponse<TResponse> getRecords(GetRecordsRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawGetRecordsResponse actualResponse_ = new RawGetRecordsResponse();
        submitRequest("/get/records", request, actualResponse_, false);
        GetRecordsResponse<TResponse> response_ = new GetRecordsResponse<>();
        response_.setTableName(actualResponse_.getTableName());
        response_.setTypeName(actualResponse_.getTypeName());
        response_.setTypeSchema(actualResponse_.getTypeSchema());
        response_.setData(this.<TResponse>decode(actualResponse_.getTypeName(), actualResponse_.getRecordsBinary()));
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves records from a given table, optionally filtered by an
     * expression and/or sorted by a column. This operation can be performed on
     * tables
     * and views. Records can be returned encoded as binary, json, or geojson.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.  Note that when paging through a table, if the
     * table
     * (or the underlying table in case of a view) is updated (records are
     * inserted,
     * deleted or modified) the records retrieved may differ between calls
     * based on the
     * updates applied.
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param tableName  Name of the table or view from which the records will
     *                   be fetched, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results).  The default value is 0.The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or
     *               END_OF_SET (-9999) to indicate that the maximum number of
     *               results allowed by the server should be
     *               returned.  The number of records returned will never
     *               exceed the server's own limit, defined by the
     *               <a href="../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration.
     *               Use {@code hasMoreRecords} to see if more records exist in
     *               the result to be fetched, and
     *               {@code offset} & {@code limit} to request subsequent pages
     *               of results.  The default value is -9999.
     * @param options
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#EXPRESSION
     *                 EXPRESSION}: Optional filter expression to apply to the
     *                 table.
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#FAST_INDEX_LOOKUP
     *                 FAST_INDEX_LOOKUP}: Indicates if indexes should be used
     *                 to perform the lookup for a given expression if
     *                 possible. Only applicable if there is no sorting, the
     *                 expression contains only equivalence comparisons based
     *                 on existing tables indexes and the range of requested
     *                 values is from [0 to END_OF_SET].
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#SORT_BY
     *                 SORT_BY}: Optional column that the data should be sorted
     *                 by. Empty by default (i.e. no sorting is applied).
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#SORT_ORDER
     *                 SORT_ORDER}: String indicating how the returned values
     *                 should be sorted - ascending or descending. If
     *                 sort_order is provided, sort_by has to be provided.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#ASCENDING
     *                 ASCENDING}
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#DESCENDING
     *                 DESCENDING}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.GetRecordsRequest.Options#ASCENDING
     *                 ASCENDING}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsResponse<TResponse> getRecords(String tableName, long offset, long limit, Map<String, String> options) throws GPUdbException {
        GetRecordsRequest actualRequest_ = new GetRecordsRequest(tableName, offset, limit, null, options);
        RawGetRecordsResponse actualResponse_ = new RawGetRecordsResponse();
        submitRequest("/get/records", actualRequest_, actualResponse_, false);
        GetRecordsResponse<TResponse> response_ = new GetRecordsResponse<>();
        response_.setTableName(actualResponse_.getTableName());
        response_.setTypeName(actualResponse_.getTypeName());
        response_.setTypeSchema(actualResponse_.getTypeSchema());
        response_.setData(this.<TResponse>decode(actualResponse_.getTypeName(), actualResponse_.getRecordsBinary()));
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * For a given table, retrieves the values from the requested
     * column(s). Maps of column name to the array of values as well as the
     * column data
     * type are returned. This endpoint supports pagination with the {@code
     * offset}
     * and {@code limit} parameters.
     * <p>
     * <a href="../../../../../concepts/window/" target="_top">Window
     * functions</a>, which can perform
     * operations like moving averages, are available through this endpoint as
     * well as
     * {@link GPUdb#createProjection(CreateProjectionRequest)}.
     * <p>
     * When using pagination, if the table (or the underlying table in the case
     * of a
     * view) is modified (records are inserted, updated, or deleted) during a
     * call to
     * the endpoint, the records or values retrieved may differ between calls
     * based on
     * the type of the update, e.g., the contiguity across pages cannot be
     * relied upon.
     * <p>
     * If {@code tableName} is empty, selection is performed against a
     * single-row
     * virtual table.  This can be useful in executing temporal
     * (<a href="../../../../../concepts/expressions/#date-time-functions"
     * target="_top">NOW()</a>), identity
     * (<a href="../../../../../concepts/expressions/#user-security-functions"
     * target="_top">USER()</a>), or
     * constant-based functions
     * (<a href="../../../../../concepts/expressions/#scalar-functions"
     * target="_top">GEODIST(-77.11, 38.88, -71.06, 42.36)</a>).
     * <p>
     * The response is returned as a dynamic schema. For details see:
     * <a href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RawGetRecordsByColumnResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RawGetRecordsByColumnResponse getRecordsByColumnRaw(GetRecordsByColumnRequest request) throws GPUdbException {
        RawGetRecordsByColumnResponse actualResponse_ = new RawGetRecordsByColumnResponse();
        submitRequest("/get/records/bycolumn", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * For a given table, retrieves the values from the requested
     * column(s). Maps of column name to the array of values as well as the
     * column data
     * type are returned. This endpoint supports pagination with the {@code
     * offset}
     * and {@code limit} parameters.
     * <p>
     * <a href="../../../../../concepts/window/" target="_top">Window
     * functions</a>, which can perform
     * operations like moving averages, are available through this endpoint as
     * well as
     * {@link GPUdb#createProjection(CreateProjectionRequest)}.
     * <p>
     * When using pagination, if the table (or the underlying table in the case
     * of a
     * view) is modified (records are inserted, updated, or deleted) during a
     * call to
     * the endpoint, the records or values retrieved may differ between calls
     * based on
     * the type of the update, e.g., the contiguity across pages cannot be
     * relied upon.
     * <p>
     * If {@code tableName} is empty, selection is performed against a
     * single-row
     * virtual table.  This can be useful in executing temporal
     * (<a href="../../../../../concepts/expressions/#date-time-functions"
     * target="_top">NOW()</a>), identity
     * (<a href="../../../../../concepts/expressions/#user-security-functions"
     * target="_top">USER()</a>), or
     * constant-based functions
     * (<a href="../../../../../concepts/expressions/#scalar-functions"
     * target="_top">GEODIST(-77.11, 38.88, -71.06, 42.36)</a>).
     * <p>
     * The response is returned as a dynamic schema. For details see:
     * <a href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsByColumnResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GetRecordsByColumnResponse getRecordsByColumn(GetRecordsByColumnRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawGetRecordsByColumnResponse actualResponse_ = new RawGetRecordsByColumnResponse();
        submitRequest("/get/records/bycolumn", request, actualResponse_, false);
        GetRecordsByColumnResponse response_ = new GetRecordsByColumnResponse();
        response_.setTableName(actualResponse_.getTableName());
        response_.setDataType( Type.fromDynamicSchema( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse() ) );
        response_.setData( DynamicTableRecord.transpose( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse(), response_.getDataType() ) );
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * For a given table, retrieves the values from the requested
     * column(s). Maps of column name to the array of values as well as the
     * column data
     * type are returned. This endpoint supports pagination with the {@code
     * offset}
     * and {@code limit} parameters.
     * <p>
     * <a href="../../../../../concepts/window/" target="_top">Window
     * functions</a>, which can perform
     * operations like moving averages, are available through this endpoint as
     * well as
     * {@link GPUdb#createProjection(String, String, List, Map)}.
     * <p>
     * When using pagination, if the table (or the underlying table in the case
     * of a
     * view) is modified (records are inserted, updated, or deleted) during a
     * call to
     * the endpoint, the records or values retrieved may differ between calls
     * based on
     * the type of the update, e.g., the contiguity across pages cannot be
     * relied upon.
     * <p>
     * If {@code tableName} is empty, selection is performed against a
     * single-row
     * virtual table.  This can be useful in executing temporal
     * (<a href="../../../../../concepts/expressions/#date-time-functions"
     * target="_top">NOW()</a>), identity
     * (<a href="../../../../../concepts/expressions/#user-security-functions"
     * target="_top">USER()</a>), or
     * constant-based functions
     * (<a href="../../../../../concepts/expressions/#scalar-functions"
     * target="_top">GEODIST(-77.11, 38.88, -71.06, 42.36)</a>).
     * <p>
     * The response is returned as a dynamic schema. For details see:
     * <a href="../../../../../api/concepts/#dynamic-schemas"
     * target="_top">dynamic schemas documentation</a>.
     * 
     * @param tableName  Name of the table or view on which this operation will
     *                   be performed, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  An empty
     *                   table name retrieves one record from a single-row
     *                   virtual table, where columns specified should be
     *                   constants or constant expressions.
     * @param columnNames  The list of column values to retrieve.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results).  The default value is 0.The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or
     *               END_OF_SET (-9999) to indicate that the maximum number of
     *               results allowed by the server should be
     *               returned.  The number of records returned will never
     *               exceed the server's own limit, defined by the
     *               <a href="../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration.
     *               Use {@code hasMoreRecords} to see if more records exist in
     *               the result to be fetched, and
     *               {@code offset} & {@code limit} to request subsequent pages
     *               of results.  The default value is -9999.
     * @param options
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#EXPRESSION
     *                 EXPRESSION}: Optional filter expression to apply to the
     *                 table.
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#SORT_BY
     *                 SORT_BY}: Optional column that the data should be sorted
     *                 by. Used in conjunction with {@code sort_order}. The
     *                 {@code order_by} option can be used in lieu of {@code
     *                 sort_by} / {@code sort_order}.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#SORT_ORDER
     *                 SORT_ORDER}: String indicating how the returned values
     *                 should be sorted - {@code ascending} or {@code
     *                 descending}. If {@code sort_order} is provided, {@code
     *                 sort_by} has to be provided.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#ASCENDING
     *                 ASCENDING}
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#DESCENDING
     *                 DESCENDING}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#ASCENDING
     *                 ASCENDING}.
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#ORDER_BY
     *                 ORDER_BY}: Comma-separated list of the columns to be
     *                 sorted by as well as the sort direction, e.g.,
     *                 'timestamp asc, x desc'.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#CONVERT_WKTS_TO_WKBS
     *                 CONVERT_WKTS_TO_WKBS}: If {@code true}, then WKT string
     *                 columns will be returned as WKB bytes.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.GetRecordsByColumnRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsByColumnResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GetRecordsByColumnResponse getRecordsByColumn(String tableName, List<String> columnNames, long offset, long limit, Map<String, String> options) throws GPUdbException {
        GetRecordsByColumnRequest actualRequest_ = new GetRecordsByColumnRequest(tableName, columnNames, offset, limit, null, options);
        RawGetRecordsByColumnResponse actualResponse_ = new RawGetRecordsByColumnResponse();
        submitRequest("/get/records/bycolumn", actualRequest_, actualResponse_, false);
        GetRecordsByColumnResponse response_ = new GetRecordsByColumnResponse();
        response_.setTableName(actualResponse_.getTableName());
        response_.setDataType( Type.fromDynamicSchema( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse() ) );
        response_.setData( DynamicTableRecord.transpose( actualResponse_.getResponseSchemaStr(), actualResponse_.getBinaryEncodedResponse(), response_.getDataType() ) );
        response_.setTotalNumberOfRecords(actualResponse_.getTotalNumberOfRecords());
        response_.setHasMoreRecords(actualResponse_.getHasMoreRecords());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves the complete series/track records from the given
     * {@code worldTableName} based on the partial track information contained
     * in
     * the {@code tableName}.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.
     * <p>
     * In contrast to {@link GPUdb#getRecordsRaw(GetRecordsRequest)} this
     * returns records grouped by
     * series/track. So if {@code offset} is 0 and {@code limit} is 5 this
     * operation
     * would return the first 5 series/tracks in {@code tableName}. Each
     * series/track
     * will be returned sorted by their TIMESTAMP column.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RawGetRecordsBySeriesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RawGetRecordsBySeriesResponse getRecordsBySeriesRaw(GetRecordsBySeriesRequest request) throws GPUdbException {
        RawGetRecordsBySeriesResponse actualResponse_ = new RawGetRecordsBySeriesResponse();
        submitRequest("/get/records/byseries", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves the complete series/track records from the given
     * {@code worldTableName} based on the partial track information contained
     * in
     * the {@code tableName}.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.
     * <p>
     * In contrast to {@link GPUdb#getRecords(Object, GetRecordsRequest)} this
     * returns records grouped by
     * series/track. So if {@code offset} is 0 and {@code limit} is 5 this
     * operation
     * would return the first 5 series/tracks in {@code tableName}. Each
     * series/track
     * will be returned sorted by their TIMESTAMP column.
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param typeDescriptor  Type descriptor used for decoding returned
     *                        objects.
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsBySeriesResponse
     * 
     * @throws IllegalArgumentException  if {@code typeDescriptor} is not an
     *                                   instance of one of the following:
     *                                   {@link Type}, {@link TypeObjectMap},
     *                                   {@link org.apache.avro.Schema}, or a
     *                                   {@link Class} that implements {@link
     *                                   org.apache.avro.generic.IndexedRecord}
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsBySeriesResponse<TResponse> getRecordsBySeries(Object typeDescriptor, GetRecordsBySeriesRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawGetRecordsBySeriesResponse actualResponse_ = new RawGetRecordsBySeriesResponse();
        submitRequest("/get/records/byseries", request, actualResponse_, false);
        GetRecordsBySeriesResponse<TResponse> response_ = new GetRecordsBySeriesResponse<>();
        response_.setTableNames(actualResponse_.getTableNames());
        response_.setTypeNames(actualResponse_.getTypeNames());
        response_.setTypeSchemas(actualResponse_.getTypeSchemas());
        response_.setData(this.<TResponse>decodeMultiple(typeDescriptor, actualResponse_.getListRecordsBinary()));
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves the complete series/track records from the given
     * {@code worldTableName} based on the partial track information contained
     * in
     * the {@code tableName}.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.
     * <p>
     * In contrast to {@link GPUdb#getRecords(Object, String, long, long, Map)}
     * this returns records grouped by
     * series/track. So if {@code offset} is 0 and {@code limit} is 5 this
     * operation
     * would return the first 5 series/tracks in {@code tableName}. Each
     * series/track
     * will be returned sorted by their TIMESTAMP column.
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param typeDescriptor  Type descriptor used for decoding returned
     *                        objects.
     * @param tableName  Name of the table or view for which series/tracks will
     *                   be fetched, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param worldTableName  Name of the table containing the complete
     *                        series/track information to be returned for the
     *                        tracks present in the {@code tableName}, in
     *                        [schema_name.]table_name format, using standard
     *                        <a
     *                        href="../../../../../concepts/tables/#table-name-resolution"
     *                        target="_top">name resolution rules</a>.
     *                        Typically this is used when retrieving
     *                        series/tracks from a view (which contains partial
     *                        series/tracks) but the user wants to retrieve the
     *                        entire original series/tracks. Can be blank.
     * @param offset  A positive integer indicating the number of initial
     *                series/tracks to skip (useful for paging through the
     *                results).  The default value is 0.The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               series/tracks to be returned. Or END_OF_SET (-9999) to
     *               indicate that the max number of results should be
     *               returned.  The default value is 250.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsBySeriesResponse
     * 
     * @throws IllegalArgumentException  if {@code typeDescriptor} is not an
     *                                   instance of one of the following:
     *                                   {@link Type}, {@link TypeObjectMap},
     *                                   {@link org.apache.avro.Schema}, or a
     *                                   {@link Class} that implements {@link
     *                                   org.apache.avro.generic.IndexedRecord}
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsBySeriesResponse<TResponse> getRecordsBySeries(Object typeDescriptor, String tableName, String worldTableName, int offset, int limit, Map<String, String> options) throws GPUdbException {
        GetRecordsBySeriesRequest actualRequest_ = new GetRecordsBySeriesRequest(tableName, worldTableName, offset, limit, null, options);
        RawGetRecordsBySeriesResponse actualResponse_ = new RawGetRecordsBySeriesResponse();
        submitRequest("/get/records/byseries", actualRequest_, actualResponse_, false);
        GetRecordsBySeriesResponse<TResponse> response_ = new GetRecordsBySeriesResponse<>();
        response_.setTableNames(actualResponse_.getTableNames());
        response_.setTypeNames(actualResponse_.getTypeNames());
        response_.setTypeSchemas(actualResponse_.getTypeSchemas());
        response_.setData(this.<TResponse>decodeMultiple(typeDescriptor, actualResponse_.getListRecordsBinary()));
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves the complete series/track records from the given
     * {@code worldTableName} based on the partial track information contained
     * in
     * the {@code tableName}.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.
     * <p>
     * In contrast to {@link GPUdb#getRecords(GetRecordsRequest)} this returns
     * records grouped by
     * series/track. So if {@code offset} is 0 and {@code limit} is 5 this
     * operation
     * would return the first 5 series/tracks in {@code tableName}. Each
     * series/track
     * will be returned sorted by their TIMESTAMP column.
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsBySeriesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsBySeriesResponse<TResponse> getRecordsBySeries(GetRecordsBySeriesRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawGetRecordsBySeriesResponse actualResponse_ = new RawGetRecordsBySeriesResponse();
        submitRequest("/get/records/byseries", request, actualResponse_, false);
        GetRecordsBySeriesResponse<TResponse> response_ = new GetRecordsBySeriesResponse<>();
        response_.setTableNames(actualResponse_.getTableNames());
        response_.setTypeNames(actualResponse_.getTypeNames());
        response_.setTypeSchemas(actualResponse_.getTypeSchemas());
        response_.setData(this.<TResponse>decodeMultiple(actualResponse_.getTypeNames(), actualResponse_.getListRecordsBinary()));
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves the complete series/track records from the given
     * {@code worldTableName} based on the partial track information contained
     * in
     * the {@code tableName}.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.
     * <p>
     * In contrast to {@link GPUdb#getRecords(String, long, long, Map)} this
     * returns records grouped by
     * series/track. So if {@code offset} is 0 and {@code limit} is 5 this
     * operation
     * would return the first 5 series/tracks in {@code tableName}. Each
     * series/track
     * will be returned sorted by their TIMESTAMP column.
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param tableName  Name of the table or view for which series/tracks will
     *                   be fetched, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param worldTableName  Name of the table containing the complete
     *                        series/track information to be returned for the
     *                        tracks present in the {@code tableName}, in
     *                        [schema_name.]table_name format, using standard
     *                        <a
     *                        href="../../../../../concepts/tables/#table-name-resolution"
     *                        target="_top">name resolution rules</a>.
     *                        Typically this is used when retrieving
     *                        series/tracks from a view (which contains partial
     *                        series/tracks) but the user wants to retrieve the
     *                        entire original series/tracks. Can be blank.
     * @param offset  A positive integer indicating the number of initial
     *                series/tracks to skip (useful for paging through the
     *                results).  The default value is 0.The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               series/tracks to be returned. Or END_OF_SET (-9999) to
     *               indicate that the max number of results should be
     *               returned.  The default value is 250.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsBySeriesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsBySeriesResponse<TResponse> getRecordsBySeries(String tableName, String worldTableName, int offset, int limit, Map<String, String> options) throws GPUdbException {
        GetRecordsBySeriesRequest actualRequest_ = new GetRecordsBySeriesRequest(tableName, worldTableName, offset, limit, null, options);
        RawGetRecordsBySeriesResponse actualResponse_ = new RawGetRecordsBySeriesResponse();
        submitRequest("/get/records/byseries", actualRequest_, actualResponse_, false);
        GetRecordsBySeriesResponse<TResponse> response_ = new GetRecordsBySeriesResponse<>();
        response_.setTableNames(actualResponse_.getTableNames());
        response_.setTypeNames(actualResponse_.getTypeNames());
        response_.setTypeSchemas(actualResponse_.getTypeSchemas());
        response_.setData(this.<TResponse>decodeMultiple(actualResponse_.getTypeNames(), actualResponse_.getListRecordsBinary()));
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves records from a collection. The operation can optionally
     * return the record IDs which can be used in certain queries such as
     * {@link GPUdb#deleteRecords(DeleteRecordsRequest)}.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.
     * <p>
     * Note that when using the Java API, it is not possible to retrieve
     * records from
     * join views using this operation.
     * (DEPRECATED)
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RawGetRecordsFromCollectionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RawGetRecordsFromCollectionResponse getRecordsFromCollectionRaw(GetRecordsFromCollectionRequest request) throws GPUdbException {
        RawGetRecordsFromCollectionResponse actualResponse_ = new RawGetRecordsFromCollectionResponse();
        submitRequest("/get/records/fromcollection", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves records from a collection. The operation can optionally
     * return the record IDs which can be used in certain queries such as
     * {@link GPUdb#deleteRecords(DeleteRecordsRequest)}.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.
     * <p>
     * Note that when using the Java API, it is not possible to retrieve
     * records from
     * join views using this operation.
     * (DEPRECATED)
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param typeDescriptor  Type descriptor used for decoding returned
     *                        objects.
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsFromCollectionResponse
     * 
     * @throws IllegalArgumentException  if {@code typeDescriptor} is not an
     *                                   instance of one of the following:
     *                                   {@link Type}, {@link TypeObjectMap},
     *                                   {@link org.apache.avro.Schema}, or a
     *                                   {@link Class} that implements {@link
     *                                   org.apache.avro.generic.IndexedRecord}
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsFromCollectionResponse<TResponse> getRecordsFromCollection(Object typeDescriptor, GetRecordsFromCollectionRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawGetRecordsFromCollectionResponse actualResponse_ = new RawGetRecordsFromCollectionResponse();
        submitRequest("/get/records/fromcollection", request, actualResponse_, false);
        GetRecordsFromCollectionResponse<TResponse> response_ = new GetRecordsFromCollectionResponse<>();
        response_.setTableName(actualResponse_.getTableName());
        response_.setTypeNames(actualResponse_.getTypeNames());
        response_.setData(this.<TResponse>decode(typeDescriptor, actualResponse_.getRecordsBinary()));
        response_.setRecordIds(actualResponse_.getRecordIds());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves records from a collection. The operation can optionally
     * return the record IDs which can be used in certain queries such as
     * {@link GPUdb#deleteRecords(String, List, Map)}.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.
     * <p>
     * Note that when using the Java API, it is not possible to retrieve
     * records from
     * join views using this operation.
     * (DEPRECATED)
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param typeDescriptor  Type descriptor used for decoding returned
     *                        objects.
     * @param tableName  Name of the collection or table from which records are
     *                   to be retrieved, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing collection or table.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results).  The default value is 0.The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or
     *               END_OF_SET (-9999) to indicate that the maximum number of
     *               results allowed by the server should be
     *               returned.  The number of records returned will never
     *               exceed the server's own limit, defined by the
     *               <a href="../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration.
     *               Use {@code offset} & {@code limit} to request subsequent
     *               pages of results.  The default value is -9999.
     * @param options
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsFromCollectionRequest.Options#RETURN_RECORD_IDS
     *                 RETURN_RECORD_IDS}: If {@code true} then return the
     *                 internal record ID along with each returned record.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsFromCollectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsFromCollectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.GetRecordsFromCollectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsFromCollectionRequest.Options#EXPRESSION
     *                 EXPRESSION}: Optional filter expression to apply to the
     *                 table.  The default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsFromCollectionResponse
     * 
     * @throws IllegalArgumentException  if {@code typeDescriptor} is not an
     *                                   instance of one of the following:
     *                                   {@link Type}, {@link TypeObjectMap},
     *                                   {@link org.apache.avro.Schema}, or a
     *                                   {@link Class} that implements {@link
     *                                   org.apache.avro.generic.IndexedRecord}
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsFromCollectionResponse<TResponse> getRecordsFromCollection(Object typeDescriptor, String tableName, long offset, long limit, Map<String, String> options) throws GPUdbException {
        GetRecordsFromCollectionRequest actualRequest_ = new GetRecordsFromCollectionRequest(tableName, offset, limit, null, options);
        RawGetRecordsFromCollectionResponse actualResponse_ = new RawGetRecordsFromCollectionResponse();
        submitRequest("/get/records/fromcollection", actualRequest_, actualResponse_, false);
        GetRecordsFromCollectionResponse<TResponse> response_ = new GetRecordsFromCollectionResponse<>();
        response_.setTableName(actualResponse_.getTableName());
        response_.setTypeNames(actualResponse_.getTypeNames());
        response_.setData(this.<TResponse>decode(typeDescriptor, actualResponse_.getRecordsBinary()));
        response_.setRecordIds(actualResponse_.getRecordIds());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves records from a collection. The operation can optionally
     * return the record IDs which can be used in certain queries such as
     * {@link GPUdb#deleteRecords(DeleteRecordsRequest)}.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.
     * <p>
     * Note that when using the Java API, it is not possible to retrieve
     * records from
     * join views using this operation.
     * (DEPRECATED)
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsFromCollectionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsFromCollectionResponse<TResponse> getRecordsFromCollection(GetRecordsFromCollectionRequest request) throws GPUdbException {
        if ( !request.getEncoding().equals( "binary" ))
            throw new GPUdbException( "This method only supports binary encoding." );

        RawGetRecordsFromCollectionResponse actualResponse_ = new RawGetRecordsFromCollectionResponse();
        submitRequest("/get/records/fromcollection", request, actualResponse_, false);
        GetRecordsFromCollectionResponse<TResponse> response_ = new GetRecordsFromCollectionResponse<>();
        response_.setTableName(actualResponse_.getTableName());
        response_.setTypeNames(actualResponse_.getTypeNames());
        response_.setData(this.<TResponse>decode(actualResponse_.getTypeNames(), actualResponse_.getRecordsBinary()));
        response_.setRecordIds(actualResponse_.getRecordIds());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    /**
     * Retrieves records from a collection. The operation can optionally
     * return the record IDs which can be used in certain queries such as
     * {@link GPUdb#deleteRecords(String, List, Map)}.
     * <p>
     * This operation supports paging through the data via the {@code offset}
     * and
     * {@code limit} parameters.
     * <p>
     * Note that when using the Java API, it is not possible to retrieve
     * records from
     * join views using this operation.
     * (DEPRECATED)
     * 
     * @param <TResponse>  The type of object being retrieved.
     * @param tableName  Name of the collection or table from which records are
     *                   to be retrieved, in [schema_name.]table_name format,
     *                   using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing collection or table.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results).  The default value is 0.The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or
     *               END_OF_SET (-9999) to indicate that the maximum number of
     *               results allowed by the server should be
     *               returned.  The number of records returned will never
     *               exceed the server's own limit, defined by the
     *               <a href="../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration.
     *               Use {@code offset} & {@code limit} to request subsequent
     *               pages of results.  The default value is -9999.
     * @param options
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsFromCollectionRequest.Options#RETURN_RECORD_IDS
     *                 RETURN_RECORD_IDS}: If {@code true} then return the
     *                 internal record ID along with each returned record.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsFromCollectionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsFromCollectionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.GetRecordsFromCollectionRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.GetRecordsFromCollectionRequest.Options#EXPRESSION
     *                 EXPRESSION}: Optional filter expression to apply to the
     *                 table.  The default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GetRecordsFromCollectionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TResponse> GetRecordsFromCollectionResponse<TResponse> getRecordsFromCollection(String tableName, long offset, long limit, Map<String, String> options) throws GPUdbException {
        GetRecordsFromCollectionRequest actualRequest_ = new GetRecordsFromCollectionRequest(tableName, offset, limit, null, options);
        RawGetRecordsFromCollectionResponse actualResponse_ = new RawGetRecordsFromCollectionResponse();
        submitRequest("/get/records/fromcollection", actualRequest_, actualResponse_, false);
        GetRecordsFromCollectionResponse<TResponse> response_ = new GetRecordsFromCollectionResponse<>();
        response_.setTableName(actualResponse_.getTableName());
        response_.setTypeNames(actualResponse_.getTypeNames());
        response_.setData(this.<TResponse>decode(actualResponse_.getTypeNames(), actualResponse_.getRecordsBinary()));
        response_.setRecordIds(actualResponse_.getRecordIds());
        response_.setInfo(actualResponse_.getInfo());
        return response_;
    }



    public GetVectortileResponse getVectortile(GetVectortileRequest request) throws GPUdbException {
        GetVectortileResponse actualResponse_ = new GetVectortileResponse();
        submitRequest("/get/vectortile", request, actualResponse_, false);
        return actualResponse_;
    }



    public GetVectortileResponse getVectortile(List<String> tableNames, List<String> columnNames, Map<String, List<String>> layers, int tileX, int tileY, int zoom, Map<String, String> options) throws GPUdbException {
        GetVectortileRequest actualRequest_ = new GetVectortileRequest(tableNames, columnNames, layers, tileX, tileY, zoom, options);
        GetVectortileResponse actualResponse_ = new GetVectortileResponse();
        submitRequest("/get/vectortile", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grant user or role the specified permission on the specified object.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionResponse grantPermission(GrantPermissionRequest request) throws GPUdbException {
        GrantPermissionResponse actualResponse_ = new GrantPermissionResponse();
        submitRequest("/grant/permission", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grant user or role the specified permission on the specified object.
     * 
     * @param principal  Name of the user or role for which the permission is
     *                   being granted.  Must be an existing user or role.  The
     *                   default value is ''.
     * @param object  Name of object permission is being granted to.  It is
     *                recommended to use a fully-qualified name when possible.
     * @param objectType  The type of object being granted to
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#CONTEXT
     *                    CONTEXT}: Context
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#CREDENTIAL
     *                    CREDENTIAL}: Credential
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#DATASINK
     *                    DATASINK}: Data Sink
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#DATASOURCE
     *                    DATASOURCE}: Data Source
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#DIRECTORY
     *                    DIRECTORY}: KIFS File Directory
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#GRAPH
     *                    GRAPH}: A Graph object
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#PROC
     *                    PROC}: UDF Procedure
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#SCHEMA
     *                    SCHEMA}: Schema
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#SQL_PROC
     *                    SQL_PROC}: SQL Procedure
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#SYSTEM
     *                    SYSTEM}: System-level access
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#TABLE
     *                    TABLE}: Database Table
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.ObjectType#TABLE_MONITOR
     *                    TABLE_MONITOR}: Table monitor
     *                    </ul>
     * @param permission  Permission being granted.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.Permission#ADMIN
     *                    ADMIN}: Full read/write and administrative access on
     *                    the object.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.Permission#CONNECT
     *                    CONNECT}: Connect access on the given data source or
     *                    data sink.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.Permission#DELETE
     *                    DELETE}: Delete rows from tables.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.Permission#EXECUTE
     *                    EXECUTE}: Ability to Execute the Procedure object.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.Permission#INSERT
     *                    INSERT}: Insert access to tables.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.Permission#READ
     *                    READ}: Ability to read, list and use the object.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.Permission#UPDATE
     *                    UPDATE}: Update access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.Permission#USER_ADMIN
     *                    USER_ADMIN}: Access to administer users and roles
     *                    that do not have system_admin permission.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionRequest.Permission#WRITE
     *                    WRITE}: Access to write, change and delete objects.
     *                    </ul>
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GrantPermissionRequest.Options#COLUMNS
     *                 COLUMNS}: Apply table security to these columns,
     *                 comma-separated.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.GrantPermissionRequest.Options#FILTER_EXPRESSION
     *                 FILTER_EXPRESSION}: Optional filter expression to apply
     *                 to this grant.  Only rows that match the filter will be
     *                 affected.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.GrantPermissionRequest.Options#WITH_GRANT_OPTION
     *                 WITH_GRANT_OPTION}: Allow the recipient to grant the
     *                 same permission (or subset) to others
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GrantPermissionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.GrantPermissionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.GrantPermissionRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionResponse grantPermission(String principal, String object, String objectType, String permission, Map<String, String> options) throws GPUdbException {
        GrantPermissionRequest actualRequest_ = new GrantPermissionRequest(principal, object, objectType, permission, options);
        GrantPermissionResponse actualResponse_ = new GrantPermissionResponse();
        submitRequest("/grant/permission", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a <a
     * href="../../../../../security/sec_concepts/#security-concepts-permissions-credential"
     * target="_top">credential-level permission</a> to a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionCredentialResponse grantPermissionCredential(GrantPermissionCredentialRequest request) throws GPUdbException {
        GrantPermissionCredentialResponse actualResponse_ = new GrantPermissionCredentialResponse();
        submitRequest("/grant/permission/credential", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a <a
     * href="../../../../../security/sec_concepts/#security-concepts-permissions-credential"
     * target="_top">credential-level permission</a> to a user or role.
     * 
     * @param name  Name of the user or role to which the permission will be
     *              granted. Must be an existing user or role.
     * @param permission  Permission to grant to the user or role.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionCredentialRequest.Permission#CREDENTIAL_ADMIN
     *                    CREDENTIAL_ADMIN}: Full read/write and administrative
     *                    access on the credential.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionCredentialRequest.Permission#CREDENTIAL_READ
     *                    CREDENTIAL_READ}: Ability to read and use the
     *                    credential.
     *                    </ul>
     * @param credentialName  Name of the credential on which the permission
     *                        will be granted. Must be an existing credential,
     *                        or an empty string to grant access on all
     *                        credentials.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionCredentialResponse grantPermissionCredential(String name, String permission, String credentialName, Map<String, String> options) throws GPUdbException {
        GrantPermissionCredentialRequest actualRequest_ = new GrantPermissionCredentialRequest(name, permission, credentialName, options);
        GrantPermissionCredentialResponse actualResponse_ = new GrantPermissionCredentialResponse();
        submitRequest("/grant/permission/credential", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a <a href="../../../../../concepts/data_sources/"
     * target="_top">data source</a> permission to a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionDatasourceResponse grantPermissionDatasource(GrantPermissionDatasourceRequest request) throws GPUdbException {
        GrantPermissionDatasourceResponse actualResponse_ = new GrantPermissionDatasourceResponse();
        submitRequest("/grant/permission/datasource", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a <a href="../../../../../concepts/data_sources/"
     * target="_top">data source</a> permission to a user or role.
     * 
     * @param name  Name of the user or role to which the permission will be
     *              granted. Must be an existing user or role.
     * @param permission  Permission to grant to the user or role
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionDatasourceRequest.Permission#ADMIN
     *                    ADMIN}: Admin access on the given data source
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionDatasourceRequest.Permission#CONNECT
     *                    CONNECT}: Connect access on the given data source
     *                    </ul>
     * @param datasourceName  Name of the data source on which the permission
     *                        will be granted. Must be an existing data source,
     *                        or an empty string to grant permission on all
     *                        data sources.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionDatasourceResponse grantPermissionDatasource(String name, String permission, String datasourceName, Map<String, String> options) throws GPUdbException {
        GrantPermissionDatasourceRequest actualRequest_ = new GrantPermissionDatasourceRequest(name, permission, datasourceName, options);
        GrantPermissionDatasourceResponse actualResponse_ = new GrantPermissionDatasourceResponse();
        submitRequest("/grant/permission/datasource", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a <a href="../../../../../tools/kifs/" target="_top">KiFS</a>
     * directory-level permission to a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionDirectoryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionDirectoryResponse grantPermissionDirectory(GrantPermissionDirectoryRequest request) throws GPUdbException {
        GrantPermissionDirectoryResponse actualResponse_ = new GrantPermissionDirectoryResponse();
        submitRequest("/grant/permission/directory", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a <a href="../../../../../tools/kifs/" target="_top">KiFS</a>
     * directory-level permission to a user or role.
     * 
     * @param name  Name of the user or role to which the permission will be
     *              granted. Must be an existing user or role.
     * @param permission  Permission to grant to the user or role.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionDirectoryRequest.Permission#DIRECTORY_READ
     *                    DIRECTORY_READ}: For files in the directory, access
     *                    to list files, download files, or use files in server
     *                    side functions
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionDirectoryRequest.Permission#DIRECTORY_WRITE
     *                    DIRECTORY_WRITE}: Access to upload files to, or
     *                    delete files from, the directory. A user or role with
     *                    write access automatically has read access
     *                    </ul>
     * @param directoryName  Name of the KiFS directory to which the permission
     *                       grants access. An empty directory name grants
     *                       access to all KiFS directories
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionDirectoryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionDirectoryResponse grantPermissionDirectory(String name, String permission, String directoryName, Map<String, String> options) throws GPUdbException {
        GrantPermissionDirectoryRequest actualRequest_ = new GrantPermissionDirectoryRequest(name, permission, directoryName, options);
        GrantPermissionDirectoryResponse actualResponse_ = new GrantPermissionDirectoryResponse();
        submitRequest("/grant/permission/directory", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a proc-level permission to a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionProcResponse grantPermissionProc(GrantPermissionProcRequest request) throws GPUdbException {
        GrantPermissionProcResponse actualResponse_ = new GrantPermissionProcResponse();
        submitRequest("/grant/permission/proc", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a proc-level permission to a user or role.
     * 
     * @param name  Name of the user or role to which the permission will be
     *              granted. Must be an existing user or role.
     * @param permission  Permission to grant to the user or role.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionProcRequest.Permission#PROC_ADMIN
     *                    PROC_ADMIN}: Admin access to the proc.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionProcRequest.Permission#PROC_EXECUTE
     *                    PROC_EXECUTE}: Execute access to the proc.
     *                    </ul>
     * @param procName  Name of the proc to which the permission grants access.
     *                  Must be an existing proc, or an empty string to grant
     *                  access to all procs.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionProcResponse grantPermissionProc(String name, String permission, String procName, Map<String, String> options) throws GPUdbException {
        GrantPermissionProcRequest actualRequest_ = new GrantPermissionProcRequest(name, permission, procName, options);
        GrantPermissionProcResponse actualResponse_ = new GrantPermissionProcResponse();
        submitRequest("/grant/permission/proc", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a system-level permission to a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionSystemResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionSystemResponse grantPermissionSystem(GrantPermissionSystemRequest request) throws GPUdbException {
        GrantPermissionSystemResponse actualResponse_ = new GrantPermissionSystemResponse();
        submitRequest("/grant/permission/system", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a system-level permission to a user or role.
     * 
     * @param name  Name of the user or role to which the permission will be
     *              granted. Must be an existing user or role.
     * @param permission  Permission to grant to the user or role.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionSystemRequest.Permission#SYSTEM_ADMIN
     *                    SYSTEM_ADMIN}: Full access to all data and system
     *                    functions.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionSystemRequest.Permission#SYSTEM_USER_ADMIN
     *                    SYSTEM_USER_ADMIN}: Access to administer users and
     *                    roles that do not have system_admin permission.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionSystemRequest.Permission#SYSTEM_WRITE
     *                    SYSTEM_WRITE}: Read and write access to all tables.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionSystemRequest.Permission#SYSTEM_READ
     *                    SYSTEM_READ}: Read-only access to all tables.
     *                    </ul>
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionSystemResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionSystemResponse grantPermissionSystem(String name, String permission, Map<String, String> options) throws GPUdbException {
        GrantPermissionSystemRequest actualRequest_ = new GrantPermissionSystemRequest(name, permission, options);
        GrantPermissionSystemResponse actualResponse_ = new GrantPermissionSystemResponse();
        submitRequest("/grant/permission/system", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a table-level permission to a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionTableResponse grantPermissionTable(GrantPermissionTableRequest request) throws GPUdbException {
        GrantPermissionTableResponse actualResponse_ = new GrantPermissionTableResponse();
        submitRequest("/grant/permission/table", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants a table-level permission to a user or role.
     * 
     * @param name  Name of the user or role to which the permission will be
     *              granted. Must be an existing user or role.
     * @param permission  Permission to grant to the user or role.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionTableRequest.Permission#TABLE_ADMIN
     *                    TABLE_ADMIN}: Full read/write and administrative
     *                    access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionTableRequest.Permission#TABLE_INSERT
     *                    TABLE_INSERT}: Insert access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionTableRequest.Permission#TABLE_UPDATE
     *                    TABLE_UPDATE}: Update access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionTableRequest.Permission#TABLE_DELETE
     *                    TABLE_DELETE}: Delete access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.GrantPermissionTableRequest.Permission#TABLE_READ
     *                    TABLE_READ}: Read access to the table.
     *                    </ul>
     * @param tableName  Name of the table to which the permission grants
     *                   access, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table, view, or schema. If a schema, the
     *                   permission also applies to tables and views in the
     *                   schema.
     * @param filterExpression  Optional filter expression to apply to this
     *                          grant.  Only rows that match the filter will be
     *                          affected.  The default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.GrantPermissionTableRequest.Options#COLUMNS
     *                 COLUMNS}: Apply security to these columns,
     *                 comma-separated.  The default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantPermissionTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantPermissionTableResponse grantPermissionTable(String name, String permission, String tableName, String filterExpression, Map<String, String> options) throws GPUdbException {
        GrantPermissionTableRequest actualRequest_ = new GrantPermissionTableRequest(name, permission, tableName, filterExpression, options);
        GrantPermissionTableResponse actualResponse_ = new GrantPermissionTableResponse();
        submitRequest("/grant/permission/table", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants membership in a role to a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantRoleResponse grantRole(GrantRoleRequest request) throws GPUdbException {
        GrantRoleResponse actualResponse_ = new GrantRoleResponse();
        submitRequest("/grant/role", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Grants membership in a role to a user or role.
     * 
     * @param role  Name of the role in which membership will be granted. Must
     *              be an existing role.
     * @param member  Name of the user or role that will be granted membership
     *                in {@code role}. Must be an existing user or role.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  GrantRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public GrantRoleResponse grantRole(String role, String member, Map<String, String> options) throws GPUdbException {
        GrantRoleRequest actualRequest_ = new GrantRoleRequest(role, member, options);
        GrantRoleResponse actualResponse_ = new GrantRoleResponse();
        submitRequest("/grant/role", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Checks if the specified user has the specified permission on the
     * specified object.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasPermissionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasPermissionResponse hasPermission(HasPermissionRequest request) throws GPUdbException {
        HasPermissionResponse actualResponse_ = new HasPermissionResponse();
        submitRequest("/has/permission", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Checks if the specified user has the specified permission on the
     * specified object.
     * 
     * @param principal  Name of the user for which the permission is being
     *                   checked. Must be an existing user. If blank, will use
     *                   the current user.  The default value is ''.
     * @param object  Name of object to check for the requested permission.  It
     *                is recommended to use a fully-qualified name when
     *                possible.
     * @param objectType  The type of object being checked
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#CONTEXT
     *                    CONTEXT}: Context
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#CREDENTIAL
     *                    CREDENTIAL}: Credential
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#DATASINK
     *                    DATASINK}: Data Sink
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#DATASOURCE
     *                    DATASOURCE}: Data Source
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#DIRECTORY
     *                    DIRECTORY}: KiFS File Directory
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#GRAPH
     *                    GRAPH}: A Graph object
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#PROC
     *                    PROC}: UDF Procedure
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#SCHEMA
     *                    SCHEMA}: Schema
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#SQL_PROC
     *                    SQL_PROC}: SQL Procedure
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#SYSTEM
     *                    SYSTEM}: System-level access
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#TABLE
     *                    TABLE}: Database Table
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.ObjectType#TABLE_MONITOR
     *                    TABLE_MONITOR}: Table monitor
     *                    </ul>
     * @param permission  Permission to check for.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.Permission#ADMIN
     *                    ADMIN}: Full read/write and administrative access on
     *                    the object.
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.Permission#CONNECT
     *                    CONNECT}: Connect access on the given data source or
     *                    data sink.
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.Permission#DELETE
     *                    DELETE}: Delete rows from tables.
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.Permission#EXECUTE
     *                    EXECUTE}: Ability to Execute the Procedure object.
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.Permission#INSERT
     *                    INSERT}: Insert access to tables.
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.Permission#READ
     *                    READ}: Ability to read, list and use the object.
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.Permission#UPDATE
     *                    UPDATE}: Update access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.Permission#USER_ADMIN
     *                    USER_ADMIN}: Access to administer users and roles
     *                    that do not have system_admin permission.
     *                            <li> {@link
     *                    com.gpudb.protocol.HasPermissionRequest.Permission#WRITE
     *                    WRITE}: Access to write, change and delete objects.
     *                    </ul>
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.HasPermissionRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code false} will return an
     *                 error if the provided {@code object} does not exist or
     *                 is blank. If {@code true} then it will return {@code
     *                 false} for {@code hasPermission}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.HasPermissionRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.HasPermissionRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.HasPermissionRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasPermissionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasPermissionResponse hasPermission(String principal, String object, String objectType, String permission, Map<String, String> options) throws GPUdbException {
        HasPermissionRequest actualRequest_ = new HasPermissionRequest(principal, object, objectType, permission, options);
        HasPermissionResponse actualResponse_ = new HasPermissionResponse();
        submitRequest("/has/permission", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Checks the existence of a proc with the given name.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasProcResponse hasProc(HasProcRequest request) throws GPUdbException {
        HasProcResponse actualResponse_ = new HasProcResponse();
        submitRequest("/has/proc", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Checks the existence of a proc with the given name.
     * 
     * @param procName  Name of the proc to check for existence.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasProcResponse hasProc(String procName, Map<String, String> options) throws GPUdbException {
        HasProcRequest actualRequest_ = new HasProcRequest(procName, options);
        HasProcResponse actualResponse_ = new HasProcResponse();
        submitRequest("/has/proc", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Checks if the specified user has the specified role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasRoleResponse hasRole(HasRoleRequest request) throws GPUdbException {
        HasRoleResponse actualResponse_ = new HasRoleResponse();
        submitRequest("/has/role", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Checks if the specified user has the specified role.
     * 
     * @param principal  Name of the user for which role membersih is being
     *                   checked. Must be an existing user. If blank, will use
     *                   the current user.  The default value is ''.
     * @param role  Name of role to check for membership.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.HasRoleRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code false} will return an
     *                 error if the provided {@code role} does not exist or is
     *                 blank. If {@code true} then it will return {@code false}
     *                 for {@code hasRole}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.HasRoleRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.HasRoleRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.HasRoleRequest.Options#FALSE FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.HasRoleRequest.Options#ONLY_DIRECT
     *                 ONLY_DIRECT}: If {@code false} will search recursively
     *                 if the {@code principal} is a member of {@code role}.
     *                 If {@code true} then {@code principal} must directly be
     *                 a member of {@code role}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.HasRoleRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.HasRoleRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.HasRoleRequest.Options#FALSE FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasRoleResponse hasRole(String principal, String role, Map<String, String> options) throws GPUdbException {
        HasRoleRequest actualRequest_ = new HasRoleRequest(principal, role, options);
        HasRoleResponse actualResponse_ = new HasRoleResponse();
        submitRequest("/has/role", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Checks for the existence of a schema with the given name.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasSchemaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasSchemaResponse hasSchema(HasSchemaRequest request) throws GPUdbException {
        HasSchemaResponse actualResponse_ = new HasSchemaResponse();
        submitRequest("/has/schema", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Checks for the existence of a schema with the given name.
     * 
     * @param schemaName  Name of the schema to check for existence, in root,
     *                    using standard <a
     *                    href="../../../../../concepts/tables/#table-name-resolution"
     *                    target="_top">name resolution rules</a>.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasSchemaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasSchemaResponse hasSchema(String schemaName, Map<String, String> options) throws GPUdbException {
        HasSchemaRequest actualRequest_ = new HasSchemaRequest(schemaName, options);
        HasSchemaResponse actualResponse_ = new HasSchemaResponse();
        submitRequest("/has/schema", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Checks for the existence of a table with the given name.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasTableResponse hasTable(HasTableRequest request) throws GPUdbException {
        HasTableResponse actualResponse_ = new HasTableResponse();
        submitRequest("/has/table", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Checks for the existence of a table with the given name.
     * 
     * @param tableName  Name of the table to check for existence, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasTableResponse hasTable(String tableName, Map<String, String> options) throws GPUdbException {
        HasTableRequest actualRequest_ = new HasTableRequest(tableName, options);
        HasTableResponse actualResponse_ = new HasTableResponse();
        submitRequest("/has/table", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Check for the existence of a type.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasTypeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasTypeResponse hasType(HasTypeRequest request) throws GPUdbException {
        HasTypeResponse actualResponse_ = new HasTypeResponse();
        submitRequest("/has/type", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Check for the existence of a type.
     * 
     * @param typeId  Id of the type returned in response to {@link
     *                GPUdb#createType(String, String, Map, Map)} request.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  HasTypeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public HasTypeResponse hasType(String typeId, Map<String, String> options) throws GPUdbException {
        HasTypeRequest actualRequest_ = new HasTypeRequest(typeId, options);
        HasTypeResponse actualResponse_ = new HasTypeResponse();
        submitRequest("/has/type", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public ImportModelResponse importModel(ImportModelRequest request) throws GPUdbException {
        ImportModelResponse actualResponse_ = new ImportModelResponse();
        submitRequest("/import/model", request, actualResponse_, false);
        return actualResponse_;
    }



    public ImportModelResponse importModel(String modelName, String registryName, String container, String runFunction, String modelType, Map<String, String> options) throws GPUdbException {
        ImportModelRequest actualRequest_ = new ImportModelRequest(modelName, registryName, container, runFunction, modelType, options);
        ImportModelResponse actualResponse_ = new ImportModelResponse();
        submitRequest("/import/model", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Adds multiple records to the specified table. The operation is
     * synchronous, meaning that a response will not be returned until all the
     * records
     * are fully inserted and available. The response payload provides the
     * counts of
     * the number of records actually inserted and/or updated, and can provide
     * the
     * unique identifier of each added record.
     * <p>
     * The {@code options} parameter can be used to customize this function's
     * behavior.
     * <p>
     * The {@code update_on_existing_pk} option specifies the record
     * collision policy for inserting into a table with a
     * <a href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, but is ignored if
     * no primary key exists.
     * <p>
     * The {@code return_record_ids} option indicates that the
     * database should return the unique identifiers of inserted records.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertRecordsResponse insertRecordsRaw(RawInsertRecordsRequest request) throws GPUdbException {
        InsertRecordsResponse actualResponse_ = new InsertRecordsResponse();
        submitRequest("/insert/records", request, actualResponse_, true);
        return actualResponse_;
    }



    /**
     * Adds multiple records to the specified table. The operation is
     * synchronous, meaning that a response will not be returned until all the
     * records
     * are fully inserted and available. The response payload provides the
     * counts of
     * the number of records actually inserted and/or updated, and can provide
     * the
     * unique identifier of each added record.
     * <p>
     * The {@code options} parameter can be used to customize this function's
     * behavior.
     * <p>
     * The {@code update_on_existing_pk} option specifies the record
     * collision policy for inserting into a table with a
     * <a href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, but is ignored if
     * no primary key exists.
     * <p>
     * The {@code return_record_ids} option indicates that the
     * database should return the unique identifiers of inserted records.
     * 
     * @param <TRequest>  The type of object being added.
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TRequest> InsertRecordsResponse insertRecords(InsertRecordsRequest<TRequest> request) throws GPUdbException {
        RawInsertRecordsRequest actualRequest_ = new RawInsertRecordsRequest(request.getTableName(), this.encode( request.getData() ), null, null, request.getOptions());
        InsertRecordsResponse actualResponse_ = new InsertRecordsResponse();
        submitRequest("/insert/records", actualRequest_, actualResponse_, true);
        return actualResponse_;
    }



    /**
     * Adds multiple records to the specified table. The operation is
     * synchronous, meaning that a response will not be returned until all the
     * records
     * are fully inserted and available. The response payload provides the
     * counts of
     * the number of records actually inserted and/or updated, and can provide
     * the
     * unique identifier of each added record.
     * <p>
     * The {@code options} parameter can be used to customize this function's
     * behavior.
     * <p>
     * The {@code update_on_existing_pk} option specifies the record
     * collision policy for inserting into a table with a
     * <a href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, but is ignored if
     * no primary key exists.
     * <p>
     * The {@code return_record_ids} option indicates that the
     * database should return the unique identifiers of inserted records.
     * 
     * @param <TRequest>  The type of object being added.
     * @param typeObjectMap  Type object map used for encoding input objects.
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsResponse
     * 
     * @throws IllegalArgumentException  if {@code typeObjectMap} is not an
     *                                   instance of one of the following:
     *                                   {@link Type}, {@link TypeObjectMap},
     *                                   {@link org.apache.avro.Schema}, or a
     *                                   {@link Class} that implements {@link
     *                                   org.apache.avro.generic.IndexedRecord}
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TRequest> InsertRecordsResponse insertRecords(TypeObjectMap<TRequest> typeObjectMap, InsertRecordsRequest<TRequest> request) throws GPUdbException {
        RawInsertRecordsRequest actualRequest_ = new RawInsertRecordsRequest(request.getTableName(), this.encode( typeObjectMap, request.getData() ), null, null, request.getOptions());
        InsertRecordsResponse actualResponse_ = new InsertRecordsResponse();
        submitRequest("/insert/records", actualRequest_, actualResponse_, true);
        return actualResponse_;
    }



    /**
     * Adds multiple records to the specified table. The operation is
     * synchronous, meaning that a response will not be returned until all the
     * records
     * are fully inserted and available. The response payload provides the
     * counts of
     * the number of records actually inserted and/or updated, and can provide
     * the
     * unique identifier of each added record.
     * <p>
     * The {@code options} parameter can be used to customize this function's
     * behavior.
     * <p>
     * The {@code update_on_existing_pk} option specifies the record
     * collision policy for inserting into a table with a
     * <a href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, but is ignored if
     * no primary key exists.
     * <p>
     * The {@code return_record_ids} option indicates that the
     * database should return the unique identifiers of inserted records.
     * 
     * @param <TRequest>  The type of object being added.
     * @param tableName  Name of table to which the records are to be added, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table.
     * @param data  An array of binary-encoded data for the records to be
     *              added. All records must be of the same type as that of the
     *              table. Empty array if {@code listEncoding} is {@code json}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for inserting into a table
     *                 with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>. If set to
     *                 {@code true}, any existing table record with primary
     *                 key values that match those of a record being inserted
     *                 will be replaced by that new record (the new
     *                 data will be "upserted"). If set to {@code false},
     *                 any existing table record with primary key values that
     *                 match those of a record being inserted will
     *                 remain unchanged, while the new record will be rejected
     *                 and the error handled as determined by
     *                 {@code ignore_existing_pk}, {@code allow_partial_batch},
     *                 &
     *                 {@code return_individual_errors}.  If the specified
     *                 table does not have a primary
     *                 key, then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}: Upsert new records when primary keys match
     *                 existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}: Reject new records when primary keys match
     *                 existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 inserting into a table with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only used when
     *                 not in upsert mode (upsert mode is disabled when {@code
     *                 update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any record being inserted that is rejected
     *                 for having primary key values that match those of an
     *                 existing table record will be ignored with no
     *                 error generated.  If {@code false}, the rejection of any
     *                 record for having primary key values matching an
     *                 existing record will result in an error being
     *                 reported, as determined by {@code allow_partial_batch} &
     *                 {@code return_individual_errors}.  If the specified
     *                 table does not
     *                 have a primary key or if upsert mode is in effect
     *                 ({@code update_on_existing_pk} is
     *                 {@code true}), then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}: Ignore new records whose primary key values
     *                 collide with those of existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}: Treat as errors any new records whose primary
     *                 key values collide with those of existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#RETURN_RECORD_IDS
     *                 RETURN_RECORD_IDS}: If {@code true} then return the
     *                 internal record id along for each inserted record.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, any strings
     *                 which are too long for their target charN string columns
     *                 will be truncated to fit.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#RETURN_INDIVIDUAL_ERRORS
     *                 RETURN_INDIVIDUAL_ERRORS}: If set to {@code true},
     *                 success will always be returned, and any errors found
     *                 will be included in the info map.  The
     *                 "bad_record_indices" entry is a comma-separated list of
     *                 bad records (0-based).  And if so, there will also be an
     *                 "error_N" entry for each record with an error, where N
     *                 is the index (0-based).
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#ALLOW_PARTIAL_BATCH
     *                 ALLOW_PARTIAL_BATCH}: If set to {@code true}, all
     *                 correct records will be inserted and incorrect records
     *                 will be rejected and reported.  Otherwise, the entire
     *                 batch will be rejected if any records are incorrect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#DRY_RUN
     *                 DRY_RUN}: If set to {@code true}, no data will be saved
     *                 and any errors will be returned.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TRequest> InsertRecordsResponse insertRecords(String tableName, List<TRequest> data, Map<String, String> options) throws GPUdbException {
        RawInsertRecordsRequest actualRequest_ = new RawInsertRecordsRequest(tableName, this.encode( data ), null, null, options);
        InsertRecordsResponse actualResponse_ = new InsertRecordsResponse();
        submitRequest("/insert/records", actualRequest_, actualResponse_, true);
        return actualResponse_;
    }



    /**
     * Adds multiple records to the specified table. The operation is
     * synchronous, meaning that a response will not be returned until all the
     * records
     * are fully inserted and available. The response payload provides the
     * counts of
     * the number of records actually inserted and/or updated, and can provide
     * the
     * unique identifier of each added record.
     * <p>
     * The {@code options} parameter can be used to customize this function's
     * behavior.
     * <p>
     * The {@code update_on_existing_pk} option specifies the record
     * collision policy for inserting into a table with a
     * <a href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, but is ignored if
     * no primary key exists.
     * <p>
     * The {@code return_record_ids} option indicates that the
     * database should return the unique identifiers of inserted records.
     * 
     * @param <TRequest>  The type of object being added.
     * @param typeObjectMap  Type object map used for encoding input objects.
     * @param tableName  Name of table to which the records are to be added, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table.
     * @param data  An array of binary-encoded data for the records to be
     *              added. All records must be of the same type as that of the
     *              table. Empty array if {@code listEncoding} is {@code json}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for inserting into a table
     *                 with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>. If set to
     *                 {@code true}, any existing table record with primary
     *                 key values that match those of a record being inserted
     *                 will be replaced by that new record (the new
     *                 data will be "upserted"). If set to {@code false},
     *                 any existing table record with primary key values that
     *                 match those of a record being inserted will
     *                 remain unchanged, while the new record will be rejected
     *                 and the error handled as determined by
     *                 {@code ignore_existing_pk}, {@code allow_partial_batch},
     *                 &
     *                 {@code return_individual_errors}.  If the specified
     *                 table does not have a primary
     *                 key, then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}: Upsert new records when primary keys match
     *                 existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}: Reject new records when primary keys match
     *                 existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 inserting into a table with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only used when
     *                 not in upsert mode (upsert mode is disabled when {@code
     *                 update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any record being inserted that is rejected
     *                 for having primary key values that match those of an
     *                 existing table record will be ignored with no
     *                 error generated.  If {@code false}, the rejection of any
     *                 record for having primary key values matching an
     *                 existing record will result in an error being
     *                 reported, as determined by {@code allow_partial_batch} &
     *                 {@code return_individual_errors}.  If the specified
     *                 table does not
     *                 have a primary key or if upsert mode is in effect
     *                 ({@code update_on_existing_pk} is
     *                 {@code true}), then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}: Ignore new records whose primary key values
     *                 collide with those of existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}: Treat as errors any new records whose primary
     *                 key values collide with those of existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#RETURN_RECORD_IDS
     *                 RETURN_RECORD_IDS}: If {@code true} then return the
     *                 internal record id along for each inserted record.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, any strings
     *                 which are too long for their target charN string columns
     *                 will be truncated to fit.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#RETURN_INDIVIDUAL_ERRORS
     *                 RETURN_INDIVIDUAL_ERRORS}: If set to {@code true},
     *                 success will always be returned, and any errors found
     *                 will be included in the info map.  The
     *                 "bad_record_indices" entry is a comma-separated list of
     *                 bad records (0-based).  And if so, there will also be an
     *                 "error_N" entry for each record with an error, where N
     *                 is the index (0-based).
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#ALLOW_PARTIAL_BATCH
     *                 ALLOW_PARTIAL_BATCH}: If set to {@code true}, all
     *                 correct records will be inserted and incorrect records
     *                 will be rejected and reported.  Otherwise, the entire
     *                 batch will be rejected if any records are incorrect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#DRY_RUN
     *                 DRY_RUN}: If set to {@code true}, no data will be saved
     *                 and any errors will be returned.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawInsertRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsResponse
     * 
     * @throws IllegalArgumentException  if {@code typeObjectMap} is not an
     *                                   instance of one of the following:
     *                                   {@link Type}, {@link TypeObjectMap},
     *                                   {@link org.apache.avro.Schema}, or a
     *                                   {@link Class} that implements {@link
     *                                   org.apache.avro.generic.IndexedRecord}
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TRequest> InsertRecordsResponse insertRecords(TypeObjectMap<TRequest> typeObjectMap, String tableName, List<TRequest> data, Map<String, String> options) throws GPUdbException {
        RawInsertRecordsRequest actualRequest_ = new RawInsertRecordsRequest(tableName, this.encode( typeObjectMap, data ), null, null, options);
        InsertRecordsResponse actualResponse_ = new InsertRecordsResponse();
        submitRequest("/insert/records", actualRequest_, actualResponse_, true);
        return actualResponse_;
    }



    /**
     * Reads from one or more files and inserts the data into a new or existing
     * table.
     * The source data can be located either in <a
     * href="../../../../../tools/kifs/" target="_top">KiFS</a>; on the
     * cluster, accessible to
     * the database; or remotely, accessible via a pre-defined external
     * <a href="../../../../../concepts/data_sources/" target="_top">data
     * source</a>.
     * <p>

     * For delimited text files, there are two loading schemes: positional and
     * name-based. The name-based
     * loading scheme is enabled when the file has a header present and
     * {@code text_has_header} is set to
     * {@code true}. In this scheme, the source file(s) field names
     * must match the target table's column names exactly; however, the source
     * file can have more fields
     * than the target table has columns. If {@code error_handling} is set to
     * {@code permissive}, the source file can have fewer fields
     * than the target table has columns. If the name-based loading scheme is
     * being used, names matching
     * the file header's names may be provided to {@code columns_to_load}
     * instead of
     * numbers, but ranges are not supported.
     * <p>
     * Note: Due to data being loaded in parallel, there is no insertion order
     * guaranteed.  For tables with
     * primary keys, in the case of a primary key collision, this means it is
     * indeterminate which record
     * will be inserted first and remain, while the rest of the colliding key
     * records are discarded.
     * <p>
     * Returns once all files are processed.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsFromFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertRecordsFromFilesResponse insertRecordsFromFiles(InsertRecordsFromFilesRequest request) throws GPUdbException {
        InsertRecordsFromFilesResponse actualResponse_ = new InsertRecordsFromFilesResponse();
        submitRequest("/insert/records/fromfiles", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Reads from one or more files and inserts the data into a new or existing
     * table.
     * The source data can be located either in <a
     * href="../../../../../tools/kifs/" target="_top">KiFS</a>; on the
     * cluster, accessible to
     * the database; or remotely, accessible via a pre-defined external
     * <a href="../../../../../concepts/data_sources/" target="_top">data
     * source</a>.
     * <p>

     * For delimited text files, there are two loading schemes: positional and
     * name-based. The name-based
     * loading scheme is enabled when the file has a header present and
     * {@code text_has_header} is set to
     * {@code true}. In this scheme, the source file(s) field names
     * must match the target table's column names exactly; however, the source
     * file can have more fields
     * than the target table has columns. If {@code error_handling} is set to
     * {@code permissive}, the source file can have fewer fields
     * than the target table has columns. If the name-based loading scheme is
     * being used, names matching
     * the file header's names may be provided to {@code columns_to_load}
     * instead of
     * numbers, but ranges are not supported.
     * <p>
     * Note: Due to data being loaded in parallel, there is no insertion order
     * guaranteed.  For tables with
     * primary keys, in the case of a primary key collision, this means it is
     * indeterminate which record
     * will be inserted first and remain, while the rest of the colliding key
     * records are discarded.
     * <p>
     * Returns once all files are processed.
     * 
     * @param tableName  Name of the table into which the data will be
     *                   inserted, in
     *                   [schema_name.]table_name format, using standard
     *                   <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     *                   If the table does not exist, the table will be created
     *                   using either an existing
     *                   {@code type_id} or the type inferred from the
     *                   file, and the new table name will have to meet
     *                   standard
     *                   <a
     *                   href="../../../../../concepts/tables/#table-naming-criteria"
     *                   target="_top">table naming criteria</a>.
     * @param filepaths  A list of file paths from which data will be sourced;
     *                   For paths in <a href="../../../../../tools/kifs/"
     *                   target="_top">KiFS</a>, use the uri prefix of kifs://
     *                   followed by the path to
     *                   a file or directory. File matching by prefix is
     *                   supported, e.g. kifs://dir/file would match dir/file_1
     *                   and dir/file_2. When prefix matching is used, the path
     *                   must start with a full, valid KiFS directory name.
     *                   If an external data source is specified in {@code
     *                   datasource_name}, these file
     *                   paths must resolve to accessible files at that data
     *                   source location. Prefix matching is supported.
     *                   If the data source is hdfs, prefixes must be aligned
     *                   with directories, i.e. partial file names will
     *                   not match.
     *                   If no data source is specified, the files are assumed
     *                   to be local to the database and must all be
     *                   accessible to the gpudb user, residing on the path (or
     *                   relative to the path) specified by the
     *                   external files directory in the Kinetica
     *                   <a
     *                   href="../../../../../config/#config-main-external-files"
     *                   target="_top">configuration file</a>. Wildcards (*)
     *                   can be used to
     *                   specify a group of files.  Prefix matching is
     *                   supported, the prefixes must be aligned with
     *                   directories.
     *                   If the first path ends in .tsv, the text delimiter
     *                   will be defaulted to a tab character.
     *                   If the first path ends in .psv, the text delimiter
     *                   will be defaulted to a pipe character (|).
     * @param modifyColumns  Not implemented yet.  The default value is an
     *                       empty {@link Map}.
     * @param createTableOptions  Options from {@link GPUdb#createTable(String,
     *                            String, Map)}, allowing the structure of the
     *                            table to
     *                            be defined independently of the data source,
     *                            when creating the target table
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#TYPE_ID
     *                            TYPE_ID}: ID of a currently registered <a
     *                            href="../../../../../concepts/types/"
     *                            target="_top">type</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#NO_ERROR_IF_EXISTS
     *                            NO_ERROR_IF_EXISTS}: If {@code true},
     *                            prevents an error from occurring if the table
     *                            already exists and is of the given type.  If
     *                            a table with
     *                            the same name but a different type exists, it
     *                            is still an error.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#IS_REPLICATED
     *                            IS_REPLICATED}: Affects the <a
     *                            href="../../../../../concepts/tables/#distribution"
     *                            target="_top">distribution scheme</a>
     *                            for the table's data.  If {@code true} and
     *                            the
     *                            given table has no explicit <a
     *                            href="../../../../../concepts/tables/#shard-key"
     *                            target="_top">shard key</a> defined, the
     *                            table will be <a
     *                            href="../../../../../concepts/tables/#replication"
     *                            target="_top">replicated</a>.  If
     *                            {@code false}, the table will be
     *                            <a
     *                            href="../../../../../concepts/tables/#sharding"
     *                            target="_top">sharded</a> according to the
     *                            shard key specified in the
     *                            given {@code type_id}, or
     *                            <a
     *                            href="../../../../../concepts/tables/#random-sharding"
     *                            target="_top">randomly sharded</a>, if no
     *                            shard key is specified.
     *                            Note that a type containing a shard key
     *                            cannot be used to create a replicated table.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#FOREIGN_KEYS
     *                            FOREIGN_KEYS}: Semicolon-separated list of
     *                            <a
     *                            href="../../../../../concepts/tables/#foreign-keys"
     *                            target="_top">foreign keys</a>, of the format
     *                            '(source_column_name [, ...]) references
     *                            target_table_name(primary_key_column_name [,
     *                            ...]) [as foreign_key_name]'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#FOREIGN_SHARD_KEY
     *                            FOREIGN_SHARD_KEY}: Foreign shard key of the
     *                            format
     *                            'source_column references shard_by_column
     *                            from target_table(primary_key_column)'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#PARTITION_TYPE
     *                            PARTITION_TYPE}: <a
     *                            href="../../../../../concepts/tables/#partitioning"
     *                            target="_top">Partitioning</a> scheme to use.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#RANGE
     *                            RANGE}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#INTERVAL
     *                            INTERVAL}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#LIST
     *                            LIST}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#HASH
     *                            HASH}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#SERIES
     *                            SERIES}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a>.
     *                            </ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#PARTITION_KEYS
     *                            PARTITION_KEYS}: Comma-separated list of
     *                            partition keys, which are the columns or
     *                            column expressions by which records will be
     *                            assigned to partitions defined by
     *                            {@code partition_definitions}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#PARTITION_DEFINITIONS
     *                            PARTITION_DEFINITIONS}: Comma-separated list
     *                            of partition definitions, whose format
     *                            depends
     *                            on the choice of {@code partition_type}.  See
     *                            <a
     *                            href="../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>,
     *                            <a
     *                            href="../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>,
     *                            <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>,
     *                            <a
     *                            href="../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>, or
     *                            <a
     *                            href="../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a> for
     *                            example formats.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#IS_AUTOMATIC_PARTITION
     *                            IS_AUTOMATIC_PARTITION}: If {@code true},
     *                            a new partition will be created for values
     *                            which don't fall into an existing partition.
     *                            Currently,
     *                            only supported for <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitions</a>.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#TTL
     *                            TTL}: Sets the <a
     *                            href="../../../../../concepts/ttl/"
     *                            target="_top">TTL</a> of the table specified
     *                            in {@code tableName}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#CHUNK_SIZE
     *                            CHUNK_SIZE}: Indicates the number of records
     *                            per chunk to be used for this table.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#IS_RESULT_TABLE
     *                            IS_RESULT_TABLE}: Indicates whether the table
     *                            is a
     *                            <a
     *                            href="../../../../../concepts/tables_memory_only/"
     *                            target="_top">memory-only table</a>. A result
     *                            table cannot contain columns with
     *                            store_only or text_search <a
     *                            href="../../../../../concepts/types/#data-handling"
     *                            target="_top">data-handling</a> or that are
     *                            <a
     *                            href="../../../../../concepts/types/#primitive-types"
     *                            target="_top">non-charN strings</a>, and it
     *                            will not be retained if the
     *                            server is restarted.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromFilesRequest.CreateTableOptions#STRATEGY_DEFINITION
     *                            STRATEGY_DEFINITION}: The <a
     *                            href="../../../../../rm/concepts/#tier-strategies"
     *                            target="_top">tier strategy</a>
     *                            for the table and its columns.
     *                            </ul>
     *                            The default value is an empty {@link Map}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#BAD_RECORD_TABLE_NAME
     *                 BAD_RECORD_TABLE_NAME}: Name of a table to which records
     *                 that were rejected are written.
     *                 The bad-record-table has the following columns:
     *                 line_number (long), line_rejected (string),
     *                 error_message (string).  When {@code error_handling} is
     *                 {@code abort}, bad records table is not populated.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#BAD_RECORD_TABLE_LIMIT
     *                 BAD_RECORD_TABLE_LIMIT}: A positive integer indicating
     *                 the maximum number of records that can be
     *                 written to the bad-record-table.  The default value is
     *                 '10000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#BAD_RECORD_TABLE_LIMIT_PER_INPUT
     *                 BAD_RECORD_TABLE_LIMIT_PER_INPUT}: For subscriptions, a
     *                 positive integer indicating the maximum number
     *                 of records that can be written to the bad-record-table
     *                 per file/payload. Default value will be
     *                 {@code bad_record_table_limit} and total size of the
     *                 table per rank is limited to
     *                 {@code bad_record_table_limit}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#BATCH_SIZE
     *                 BATCH_SIZE}: Number of records to insert per batch when
     *                 inserting data.  The default value is '50000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#COLUMN_FORMATS
     *                 COLUMN_FORMATS}: For each target column specified,
     *                 applies the column-property-bound
     *                 format to the source data loaded into that column.  Each
     *                 column format will contain a mapping of one
     *                 or more of its column properties to an appropriate
     *                 format for each property.  Currently supported
     *                 column properties include date, time, & datetime. The
     *                 parameter value must be formatted as a JSON
     *                 string of maps of column names to maps of column
     *                 properties to their corresponding column formats,
     *                 e.g.,
     *                 '{ "order_date" : { "date" : "%Y.%m.%d" }, "order_time"
     *                 : { "time" : "%H:%M:%S" } }'.
     *                 See {@code default_column_formats} for valid format
     *                 syntax.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#COLUMNS_TO_LOAD
     *                 COLUMNS_TO_LOAD}: Specifies a comma-delimited list of
     *                 columns from the source data to
     *                 load.  If more than one file is being loaded, this list
     *                 applies to all files.
     *                 Column numbers can be specified discretely or as a
     *                 range.  For example, a value of '5,7,1..3' will
     *                 insert values from the fifth column in the source data
     *                 into the first column in the target table,
     *                 from the seventh column in the source data into the
     *                 second column in the target table, and from the
     *                 first through third columns in the source data into the
     *                 third through fifth columns in the target
     *                 table.
     *                 If the source data contains a header, column names
     *                 matching the file header names may be provided
     *                 instead of column numbers.  If the target table doesn't
     *                 exist, the table will be created with the
     *                 columns in this order.  If the target table does exist
     *                 with columns in a different order than the
     *                 source data, this list can be used to match the order of
     *                 the target table.  For example, a value of
     *                 'C, B, A' will create a three column table with column
     *                 C, followed by column B, followed by column
     *                 A; or will insert those fields in that order into a
     *                 table created with columns in that order.  If
     *                 the target table exists, the column names must match the
     *                 source data field names for a name-mapping
     *                 to be successful.
     *                 Mutually exclusive with {@code columns_to_skip}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#COLUMNS_TO_SKIP
     *                 COLUMNS_TO_SKIP}: Specifies a comma-delimited list of
     *                 columns from the source data to
     *                 skip.  Mutually exclusive with {@code columns_to_load}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#COMPRESSION_TYPE
     *                 COMPRESSION_TYPE}: Source data compression type
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#NONE
     *                 NONE}: No compression.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#AUTO
     *                 AUTO}: Auto detect compression type
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#GZIP
     *                 GZIP}: gzip file compression.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#BZIP2
     *                 BZIP2}: bzip2 file compression.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#AUTO
     *                 AUTO}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#DATASOURCE_NAME
     *                 DATASOURCE_NAME}: Name of an existing external data
     *                 source from which data file(s) specified in {@code
     *                 filepaths} will be loaded
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#DEFAULT_COLUMN_FORMATS
     *                 DEFAULT_COLUMN_FORMATS}: Specifies the default format to
     *                 be applied to source data loaded
     *                 into columns with the corresponding column property.
     *                 Currently supported column properties include
     *                 date, time, & datetime.  This default
     *                 column-property-bound format can be overridden by
     *                 specifying a
     *                 column property & format for a given target column in
     *                 {@code column_formats}. For
     *                 each specified annotation, the format will apply to all
     *                 columns with that annotation unless a custom
     *                 {@code column_formats} for that annotation is specified.
     *                 The parameter value must be formatted as a JSON string
     *                 that is a map of column properties to their
     *                 respective column formats, e.g., '{ "date" : "%Y.%m.%d",
     *                 "time" : "%H:%M:%S" }'.  Column
     *                 formats are specified as a string of control characters
     *                 and plain text. The supported control
     *                 characters are 'Y', 'm', 'd', 'H', 'M', 'S', and 's',
     *                 which follow the Linux 'strptime()'
     *                 specification, as well as 's', which specifies seconds
     *                 and fractional seconds (though the fractional
     *                 component will be truncated past milliseconds).
     *                 Formats for the 'date' annotation must include the 'Y',
     *                 'm', and 'd' control characters. Formats for
     *                 the 'time' annotation must include the 'H', 'M', and
     *                 either 'S' or 's' (but not both) control
     *                 characters. Formats for the 'datetime' annotation meet
     *                 both the 'date' and 'time' control character
     *                 requirements. For example, '{"datetime" : "%m/%d/%Y
     *                 %H:%M:%S" }' would be used to interpret text
     *                 as "05/04/2000 12:12:11"
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#ERROR_HANDLING
     *                 ERROR_HANDLING}: Specifies how errors should be handled
     *                 upon insertion.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#PERMISSIVE
     *                 PERMISSIVE}: Records with missing columns are populated
     *                 with nulls if possible; otherwise, the malformed records
     *                 are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#IGNORE_BAD_RECORDS
     *                 IGNORE_BAD_RECORDS}: Malformed records are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#ABORT
     *                 ABORT}: Stops current insertion and aborts entire
     *                 operation when an error is encountered.  Primary key
     *                 collisions are considered abortable errors in this mode.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#ABORT
     *                 ABORT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FILE_TYPE
     *                 FILE_TYPE}: Specifies the type of the file(s) whose
     *                 records will be inserted.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#AVRO
     *                 AVRO}: Avro file format
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#DELIMITED_TEXT
     *                 DELIMITED_TEXT}: Delimited text file format; e.g., CSV,
     *                 TSV, PSV, etc.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#GDB
     *                 GDB}: Esri/GDB file format
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#JSON
     *                 JSON}: Json file format
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#PARQUET
     *                 PARQUET}: Apache Parquet file format
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#SHAPEFILE
     *                 SHAPEFILE}: ShapeFile file format
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#DELIMITED_TEXT
     *                 DELIMITED_TEXT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#GDAL_CONFIGURATION_OPTIONS
     *                 GDAL_CONFIGURATION_OPTIONS}: Comma separated list of
     *                 gdal conf options, for the specific requets: key=value
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 inserting into a table with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only used when
     *                 not in upsert mode (upsert mode is disabled when {@code
     *                 update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any record being inserted that is rejected
     *                 for having primary key values that match those of an
     *                 existing table record will be ignored with no
     *                 error generated.  If {@code false}, the rejection of any
     *                 record for having primary key values matching an
     *                 existing record will result in an error being
     *                 reported, as determined by {@code error_handling}.  If
     *                 the specified table does not
     *                 have a primary key or if upsert mode is in effect
     *                 ({@code update_on_existing_pk} is
     *                 {@code true}), then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TRUE
     *                 TRUE}: Ignore new records whose primary key values
     *                 collide with those of existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}: Treat as errors any new records whose primary
     *                 key values collide with those of existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#INGESTION_MODE
     *                 INGESTION_MODE}: Whether to do a full load, dry run, or
     *                 perform a type inference on the source data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FULL
     *                 FULL}: Run a type inference on the source data (if
     *                 needed) and ingest
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#DRY_RUN
     *                 DRY_RUN}: Does not load data, but walks through the
     *                 source data and determines the number of valid records,
     *                 taking into account the current mode of {@code
     *                 error_handling}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TYPE_INFERENCE_ONLY
     *                 TYPE_INFERENCE_ONLY}: Infer the type of the source data
     *                 and return, without ingesting any data.  The inferred
     *                 type is returned in the response.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FULL
     *                 FULL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#KAFKA_CONSUMERS_PER_RANK
     *                 KAFKA_CONSUMERS_PER_RANK}: Number of Kafka consumer
     *                 threads per rank (valid range 1-6).  The default value
     *                 is '1'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#KAFKA_GROUP_ID
     *                 KAFKA_GROUP_ID}: The group id to be used when consuming
     *                 data from a Kafka topic (valid only for Kafka datasource
     *                 subscriptions).
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#KAFKA_OFFSET_RESET_POLICY
     *                 KAFKA_OFFSET_RESET_POLICY}: Policy to determine whether
     *                 the Kafka data consumption starts either at earliest
     *                 offset or latest offset.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#EARLIEST
     *                 EARLIEST}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#LATEST
     *                 LATEST}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#EARLIEST
     *                 EARLIEST}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#KAFKA_OPTIMISTIC_INGEST
     *                 KAFKA_OPTIMISTIC_INGEST}: Enable optimistic ingestion
     *                 where Kafka topic offsets and table data are committed
     *                 independently to achieve parallelism.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#KAFKA_SUBSCRIPTION_CANCEL_AFTER
     *                 KAFKA_SUBSCRIPTION_CANCEL_AFTER}: Sets the Kafka
     *                 subscription lifespan (in minutes). Expired subscription
     *                 will be cancelled automatically.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#KAFKA_TYPE_INFERENCE_FETCH_TIMEOUT
     *                 KAFKA_TYPE_INFERENCE_FETCH_TIMEOUT}: Maximum time to
     *                 collect Kafka messages before type inferencing on the
     *                 set of them.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#LAYER
     *                 LAYER}: Geo files layer(s) name(s): comma separated.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#LOADING_MODE
     *                 LOADING_MODE}: Scheme for distributing the extraction
     *                 and loading of data from the source data file(s). This
     *                 option applies only when loading files that are local to
     *                 the database
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#HEAD
     *                 HEAD}: The head node loads all data. All files must be
     *                 available to the head node.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#DISTRIBUTED_SHARED
     *                 DISTRIBUTED_SHARED}: The head node coordinates loading
     *                 data by worker
     *                 processes across all nodes from shared files available
     *                 to all workers.
     *                 NOTE:
     *                 Instead of existing on a shared source, the files can be
     *                 duplicated on a source local to each host
     *                 to improve performance, though the files must appear as
     *                 the same data set from the perspective of
     *                 all hosts performing the load.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#DISTRIBUTED_LOCAL
     *                 DISTRIBUTED_LOCAL}: A single worker process on each node
     *                 loads all files
     *                 that are available to it. This option works best when
     *                 each worker loads files from its own file
     *                 system, to maximize performance. In order to avoid data
     *                 duplication, either each worker performing
     *                 the load needs to have visibility to a set of files
     *                 unique to it (no file is visible to more than
     *                 one node) or the target table needs to have a primary
     *                 key (which will allow the worker to
     *                 automatically deduplicate data).
     *                 NOTE:
     *                 If the target table doesn't exist, the table structure
     *                 will be determined by the head node. If the
     *                 head node has no files local to it, it will be unable to
     *                 determine the structure and the request
     *                 will fail.
     *                 If the head node is configured to have no worker
     *                 processes, no data strictly accessible to the head
     *                 node will be loaded.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#HEAD
     *                 HEAD}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#LOCAL_TIME_OFFSET
     *                 LOCAL_TIME_OFFSET}: Apply an offset to Avro local
     *                 timestamp columns.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#MAX_RECORDS_TO_LOAD
     *                 MAX_RECORDS_TO_LOAD}: Limit the number of records to
     *                 load in this request: if this number
     *                 is larger than {@code batch_size}, then the number of
     *                 records loaded will be
     *                 limited to the next whole number of {@code batch_size}
     *                 (per working thread).
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#NUM_TASKS_PER_RANK
     *                 NUM_TASKS_PER_RANK}: Number of tasks for reading file
     *                 per rank. Default will be system configuration
     *                 parameter, external_file_reader_num_tasks.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#POLL_INTERVAL
     *                 POLL_INTERVAL}: If {@code true}, the number of
     *                 seconds between attempts to load external files into the
     *                 table.  If zero, polling will be continuous
     *                 as long as data is found.  If no data is found, the
     *                 interval will steadily increase to a maximum of
     *                 60 seconds.  The default value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#PRIMARY_KEYS
     *                 PRIMARY_KEYS}: Comma separated list of column names to
     *                 set as primary keys, when not specified in the type.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#SCHEMA_REGISTRY_SCHEMA_NAME
     *                 SCHEMA_REGISTRY_SCHEMA_NAME}: Name of the Avro schema in
     *                 the schema registry to use when reading Avro records.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#SHARD_KEYS
     *                 SHARD_KEYS}: Comma separated list of column names to set
     *                 as shard keys, when not specified in the type.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#SKIP_LINES
     *                 SKIP_LINES}: Skip number of lines from begining of file.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#SUBSCRIBE
     *                 SUBSCRIBE}: Continuously poll the data source to check
     *                 for new data and load it into the table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TABLE_INSERT_MODE
     *                 TABLE_INSERT_MODE}: Insertion scheme to use when
     *                 inserting records from multiple shapefiles.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#SINGLE
     *                 SINGLE}: Insert all records into a single table.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TABLE_PER_FILE
     *                 TABLE_PER_FILE}: Insert records from each file into a
     *                 new table corresponding to that file.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#SINGLE
     *                 SINGLE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TEXT_COMMENT_STRING
     *                 TEXT_COMMENT_STRING}: Specifies the character string
     *                 that should be interpreted as a comment line
     *                 prefix in the source data.  All lines in the data
     *                 starting with the provided string are ignored.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '#'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TEXT_DELIMITER
     *                 TEXT_DELIMITER}: Specifies the character delimiting
     *                 field values in the source data
     *                 and field names in the header (if present).
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is ','.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TEXT_ESCAPE_CHARACTER
     *                 TEXT_ESCAPE_CHARACTER}: Specifies the character that is
     *                 used to escape other characters in
     *                 the source data.
     *                 An 'a', 'b', 'f', 'n', 'r', 't', or 'v' preceded by an
     *                 escape character will be interpreted as the
     *                 ASCII bell, backspace, form feed, line feed, carriage
     *                 return, horizontal tab, & vertical tab,
     *                 respectively.  For example, the escape character
     *                 followed by an 'n' will be interpreted as a newline
     *                 within a field value.
     *                 The escape character can also be used to escape the
     *                 quoting character, and will be treated as an
     *                 escape character whether it is within a quoted field
     *                 value or not.
     *                 For {@code delimited_text} {@code file_type} only.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TEXT_HAS_HEADER
     *                 TEXT_HAS_HEADER}: Indicates whether the source data
     *                 contains a header row.
     *                 For {@code delimited_text} {@code file_type} only.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TEXT_HEADER_PROPERTY_DELIMITER
     *                 TEXT_HEADER_PROPERTY_DELIMITER}: Specifies the delimiter
     *                 for
     *                 <a
     *                 href="../../../../../concepts/types/#column-properties"
     *                 target="_top">column properties</a> in the header row
     *                 (if
     *                 present).  Cannot be set to same value as {@code
     *                 text_delimiter}.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '|'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TEXT_NULL_STRING
     *                 TEXT_NULL_STRING}: Specifies the character string that
     *                 should be interpreted as a null
     *                 value in the source data.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '\\N'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TEXT_QUOTE_CHARACTER
     *                 TEXT_QUOTE_CHARACTER}: Specifies the character that
     *                 should be interpreted as a field value
     *                 quoting character in the source data.  The character
     *                 must appear at beginning and end of field value
     *                 to take effect.  Delimiters within quoted fields are
     *                 treated as literals and not delimiters.  Within
     *                 a quoted field, two consecutive quote characters will be
     *                 interpreted as a single literal quote
     *                 character, effectively escaping it.  To not have a quote
     *                 character, specify an empty string.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '"'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TEXT_SEARCH_COLUMNS
     *                 TEXT_SEARCH_COLUMNS}: Add 'text_search' property to
     *                 internally inferenced string columns.
     *                 Comma seperated list of column names or '*' for all
     *                 columns. To add 'text_search' property only to
     *                 string columns greater than or equal to a minimum size,
     *                 also set the
     *                 {@code text_search_min_column_length}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TEXT_SEARCH_MIN_COLUMN_LENGTH
     *                 TEXT_SEARCH_MIN_COLUMN_LENGTH}: Set the minimum column
     *                 size for strings to apply the 'text_search' property to.
     *                 Used only when {@code text_search_columns} has a value.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, truncate
     *                 string values that are longer than the column's type
     *                 size.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TRUNCATE_TABLE
     *                 TRUNCATE_TABLE}: If set to {@code true}, truncates the
     *                 table specified by {@code tableName} prior to loading
     *                 the file(s).
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TYPE_INFERENCE_MODE
     *                 TYPE_INFERENCE_MODE}: Optimize type inferencing for
     *                 either speed or accuracy.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#ACCURACY
     *                 ACCURACY}: Scans data to get exactly-typed & sized
     *                 columns for all data scanned.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#SPEED
     *                 SPEED}: Scans data and picks the widest possible column
     *                 types so that 'all' values will fit with minimum data
     *                 scanned
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#SPEED
     *                 SPEED}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for inserting into a table
     *                 with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>. If set to
     *                 {@code true}, any existing table record with primary
     *                 key values that match those of a record being inserted
     *                 will be replaced by that new record (the new
     *                 data will be 'upserted'). If set to {@code false},
     *                 any existing table record with primary key values that
     *                 match those of a record being inserted will
     *                 remain unchanged, while the new record will be rejected
     *                 and the error handled as determined by
     *                 {@code ignore_existing_pk} & {@code error_handling}.  If
     *                 the
     *                 specified table does not have a primary key, then this
     *                 option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#TRUE
     *                 TRUE}: Upsert new records when primary keys match
     *                 existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}: Reject new records when primary keys match
     *                 existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromFilesRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsFromFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertRecordsFromFilesResponse insertRecordsFromFiles(String tableName, List<String> filepaths, Map<String, Map<String, String>> modifyColumns, Map<String, String> createTableOptions, Map<String, String> options) throws GPUdbException {
        InsertRecordsFromFilesRequest actualRequest_ = new InsertRecordsFromFilesRequest(tableName, filepaths, modifyColumns, createTableOptions, options);
        InsertRecordsFromFilesResponse actualResponse_ = new InsertRecordsFromFilesResponse();
        submitRequest("/insert/records/fromfiles", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Reads from the given text-based or binary payload and inserts the
     * data into a new or existing table.  The table will be created if it
     * doesn't
     * already exist.
     * <p>
     * Returns once all records are processed.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsFromPayloadResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertRecordsFromPayloadResponse insertRecordsFromPayload(InsertRecordsFromPayloadRequest request) throws GPUdbException {
        InsertRecordsFromPayloadResponse actualResponse_ = new InsertRecordsFromPayloadResponse();
        submitRequest("/insert/records/frompayload", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Reads from the given text-based or binary payload and inserts the
     * data into a new or existing table.  The table will be created if it
     * doesn't
     * already exist.
     * <p>
     * Returns once all records are processed.
     * 
     * @param tableName  Name of the table into which the data will be
     *                   inserted, in
     *                   [schema_name.]table_name format, using standard
     *                   <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     *                   If the table does not exist, the table will be created
     *                   using either an existing
     *                   {@code type_id} or the type inferred from the
     *                   payload, and the new table name will have to meet
     *                   standard
     *                   <a
     *                   href="../../../../../concepts/tables/#table-naming-criteria"
     *                   target="_top">table naming criteria</a>.
     * @param dataText  Records formatted as delimited text
     * @param dataBytes  Records formatted as binary data
     * @param modifyColumns  Not implemented yet.  The default value is an
     *                       empty {@link Map}.
     * @param createTableOptions  Options used when creating the target table.
     *                            Includes type to use. The other options match
     *                            those in {@link GPUdb#createTable(String,
     *                            String, Map)}
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#TYPE_ID
     *                            TYPE_ID}: ID of a currently registered <a
     *                            href="../../../../../concepts/types/"
     *                            target="_top">type</a>.  The default value is
     *                            ''.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#NO_ERROR_IF_EXISTS
     *                            NO_ERROR_IF_EXISTS}: If {@code true},
     *                            prevents an error from occurring if the table
     *                            already exists and is of the given type.  If
     *                            a table with the same ID but a different type
     *                            exists, it is still an error.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#IS_REPLICATED
     *                            IS_REPLICATED}: Affects the <a
     *                            href="../../../../../concepts/tables/#distribution"
     *                            target="_top">distribution scheme</a> for the
     *                            table's data.  If {@code true} and the given
     *                            type has no explicit <a
     *                            href="../../../../../concepts/tables/#shard-key"
     *                            target="_top">shard key</a> defined, the
     *                            table will be <a
     *                            href="../../../../../concepts/tables/#replication"
     *                            target="_top">replicated</a>.  If {@code
     *                            false}, the table will be <a
     *                            href="../../../../../concepts/tables/#sharding"
     *                            target="_top">sharded</a> according to the
     *                            shard key specified in the given {@code
     *                            type_id}, or <a
     *                            href="../../../../../concepts/tables/#random-sharding"
     *                            target="_top">randomly sharded</a>, if no
     *                            shard key is specified.  Note that a type
     *                            containing a shard key cannot be used to
     *                            create a replicated table.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#FOREIGN_KEYS
     *                            FOREIGN_KEYS}: Semicolon-separated list of <a
     *                            href="../../../../../concepts/tables/#foreign-keys"
     *                            target="_top">foreign keys</a>, of the format
     *                            '(source_column_name [, ...]) references
     *                            target_table_name(primary_key_column_name [,
     *                            ...]) [as foreign_key_name]'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#FOREIGN_SHARD_KEY
     *                            FOREIGN_SHARD_KEY}: Foreign shard key of the
     *                            format 'source_column references
     *                            shard_by_column from
     *                            target_table(primary_key_column)'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#PARTITION_TYPE
     *                            PARTITION_TYPE}: <a
     *                            href="../../../../../concepts/tables/#partitioning"
     *                            target="_top">Partitioning</a> scheme to use.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#RANGE
     *                            RANGE}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#INTERVAL
     *                            INTERVAL}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#LIST
     *                            LIST}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#HASH
     *                            HASH}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#SERIES
     *                            SERIES}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a>.
     *                            </ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#PARTITION_KEYS
     *                            PARTITION_KEYS}: Comma-separated list of
     *                            partition keys, which are the columns or
     *                            column expressions by which records will be
     *                            assigned to partitions defined by {@code
     *                            partition_definitions}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#PARTITION_DEFINITIONS
     *                            PARTITION_DEFINITIONS}: Comma-separated list
     *                            of partition definitions, whose format
     *                            depends on the choice of {@code
     *                            partition_type}.  See <a
     *                            href="../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>, <a
     *                            href="../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>, <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>, <a
     *                            href="../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>, or <a
     *                            href="../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a> for
     *                            example formats.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#IS_AUTOMATIC_PARTITION
     *                            IS_AUTOMATIC_PARTITION}: If {@code true}, a
     *                            new partition will be created for values
     *                            which don't fall into an existing partition.
     *                            Currently only supported for <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitions</a>.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#TTL
     *                            TTL}: Sets the <a
     *                            href="../../../../../concepts/ttl/"
     *                            target="_top">TTL</a> of the table specified
     *                            in {@code tableName}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#CHUNK_SIZE
     *                            CHUNK_SIZE}: Indicates the number of records
     *                            per chunk to be used for this table.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#IS_RESULT_TABLE
     *                            IS_RESULT_TABLE}: Indicates whether the table
     *                            is a <a
     *                            href="../../../../../concepts/tables_memory_only/"
     *                            target="_top">memory-only table</a>. A result
     *                            table cannot contain columns with store_only
     *                            or text_search <a
     *                            href="../../../../../concepts/types/#data-handling"
     *                            target="_top">data-handling</a> or that are
     *                            <a
     *                            href="../../../../../concepts/types/#primitive-types"
     *                            target="_top">non-charN strings</a>, and it
     *                            will not be retained if the server is
     *                            restarted.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromPayloadRequest.CreateTableOptions#STRATEGY_DEFINITION
     *                            STRATEGY_DEFINITION}: The <a
     *                            href="../../../../../rm/concepts/#tier-strategies"
     *                            target="_top">tier strategy</a> for the table
     *                            and its columns.
     *                            </ul>
     *                            The default value is an empty {@link Map}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#AVRO_HEADER_BYTES
     *                 AVRO_HEADER_BYTES}: Optional number of bytes to skip
     *                 when reading an avro record.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#AVRO_NUM_RECORDS
     *                 AVRO_NUM_RECORDS}: Optional number of avro records, if
     *                 data includes only records.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#AVRO_SCHEMA
     *                 AVRO_SCHEMA}: Optional string representing avro schema,
     *                 for insert records in avro format, that does not include
     *                 is schema.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#AVRO_SCHEMALESS
     *                 AVRO_SCHEMALESS}: When user provides 'avro_schema', avro
     *                 data is assumed to be schemaless, unless specified.
     *                 Default is 'true' when given avro_schema. Igonred when
     *                 avro_schema is not given.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#BAD_RECORD_TABLE_NAME
     *                 BAD_RECORD_TABLE_NAME}: Optional name of a table to
     *                 which records that were rejected are written.  The
     *                 bad-record-table has the following columns: line_number
     *                 (long), line_rejected (string), error_message (string).
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#BAD_RECORD_TABLE_LIMIT
     *                 BAD_RECORD_TABLE_LIMIT}: A positive integer indicating
     *                 the maximum number of records that can be  written to
     *                 the bad-record-table.   Default value is 10000
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#BAD_RECORD_TABLE_LIMIT_PER_INPUT
     *                 BAD_RECORD_TABLE_LIMIT_PER_INPUT}: For subscriptions: A
     *                 positive integer indicating the maximum number of
     *                 records that can be written to the bad-record-table per
     *                 file/payload. Default value will be
     *                 'bad_record_table_limit' and total size of the table per
     *                 rank is limited to 'bad_record_table_limit'
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#BATCH_SIZE
     *                 BATCH_SIZE}: Internal tuning parameter--number of
     *                 records per batch when inserting data.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#COLUMN_FORMATS
     *                 COLUMN_FORMATS}: For each target column specified,
     *                 applies the column-property-bound format to the source
     *                 data
     *                 loaded into that column.  Each column format will
     *                 contain a mapping of one or more of its column
     *                 properties to an appropriate format for each property.
     *                 Currently supported column properties
     *                 include date, time, & datetime. The parameter value must
     *                 be formatted as a JSON string of maps of
     *                 column names to maps of column properties to their
     *                 corresponding column formats, e.g.,
     *                 '{ "order_date" : { "date" : "%Y.%m.%d" }, "order_time"
     *                 : { "time" : "%H:%M:%S" } }'.
     *                 See {@code default_column_formats} for valid format
     *                 syntax.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#COLUMNS_TO_LOAD
     *                 COLUMNS_TO_LOAD}: Specifies a comma-delimited list of
     *                 columns from the source data to
     *                 load.  If more than one file is being loaded, this list
     *                 applies to all files.
     *                 Column numbers can be specified discretely or as a
     *                 range.  For example, a value of '5,7,1..3' will
     *                 insert values from the fifth column in the source data
     *                 into the first column in the target table,
     *                 from the seventh column in the source data into the
     *                 second column in the target table, and from the
     *                 first through third columns in the source data into the
     *                 third through fifth columns in the target
     *                 table.
     *                 If the source data contains a header, column names
     *                 matching the file header names may be provided
     *                 instead of column numbers.  If the target table doesn't
     *                 exist, the table will be created with the
     *                 columns in this order.  If the target table does exist
     *                 with columns in a different order than the
     *                 source data, this list can be used to match the order of
     *                 the target table.  For example, a value of
     *                 'C, B, A' will create a three column table with column
     *                 C, followed by column B, followed by column
     *                 A; or will insert those fields in that order into a
     *                 table created with columns in that order.  If
     *                 the target table exists, the column names must match the
     *                 source data field names for a name-mapping
     *                 to be successful.
     *                 Mutually exclusive with {@code columns_to_skip}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#COLUMNS_TO_SKIP
     *                 COLUMNS_TO_SKIP}: Specifies a comma-delimited list of
     *                 columns from the source data to
     *                 skip.  Mutually exclusive with {@code columns_to_load}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#COMPRESSION_TYPE
     *                 COMPRESSION_TYPE}: Optional: payload compression type
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#NONE
     *                 NONE}: Uncompressed
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#AUTO
     *                 AUTO}: Default. Auto detect compression type
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#GZIP
     *                 GZIP}: gzip file compression.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#BZIP2
     *                 BZIP2}: bzip2 file compression.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#AUTO
     *                 AUTO}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#DEFAULT_COLUMN_FORMATS
     *                 DEFAULT_COLUMN_FORMATS}: Specifies the default format to
     *                 be applied to source data loaded
     *                 into columns with the corresponding column property.
     *                 Currently supported column properties include
     *                 date, time, & datetime.  This default
     *                 column-property-bound format can be overridden by
     *                 specifying a
     *                 column property & format for a given target column in
     *                 {@code column_formats}. For
     *                 each specified annotation, the format will apply to all
     *                 columns with that annotation unless a custom
     *                 {@code column_formats} for that annotation is specified.
     *                 The parameter value must be formatted as a JSON string
     *                 that is a map of column properties to their
     *                 respective column formats, e.g., '{ "date" : "%Y.%m.%d",
     *                 "time" : "%H:%M:%S" }'.  Column
     *                 formats are specified as a string of control characters
     *                 and plain text. The supported control
     *                 characters are 'Y', 'm', 'd', 'H', 'M', 'S', and 's',
     *                 which follow the Linux 'strptime()'
     *                 specification, as well as 's', which specifies seconds
     *                 and fractional seconds (though the fractional
     *                 component will be truncated past milliseconds).
     *                 Formats for the 'date' annotation must include the 'Y',
     *                 'm', and 'd' control characters. Formats for
     *                 the 'time' annotation must include the 'H', 'M', and
     *                 either 'S' or 's' (but not both) control
     *                 characters. Formats for the 'datetime' annotation meet
     *                 both the 'date' and 'time' control character
     *                 requirements. For example, '{"datetime" : "%m/%d/%Y
     *                 %H:%M:%S" }' would be used to interpret text
     *                 as "05/04/2000 12:12:11"
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#ERROR_HANDLING
     *                 ERROR_HANDLING}: Specifies how errors should be handled
     *                 upon insertion.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#PERMISSIVE
     *                 PERMISSIVE}: Records with missing columns are populated
     *                 with nulls if possible; otherwise, the malformed records
     *                 are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#IGNORE_BAD_RECORDS
     *                 IGNORE_BAD_RECORDS}: Malformed records are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#ABORT
     *                 ABORT}: Stops current insertion and aborts entire
     *                 operation when an error is encountered.  Primary key
     *                 collisions are considered abortable errors in this mode.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#ABORT
     *                 ABORT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FILE_TYPE
     *                 FILE_TYPE}: Specifies the type of the file(s) whose
     *                 records will be inserted.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#AVRO
     *                 AVRO}: Avro file format
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#DELIMITED_TEXT
     *                 DELIMITED_TEXT}: Delimited text file format; e.g., CSV,
     *                 TSV, PSV, etc.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#GDB
     *                 GDB}: Esri/GDB file format
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#JSON
     *                 JSON}: Json file format
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#PARQUET
     *                 PARQUET}: Apache Parquet file format
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SHAPEFILE
     *                 SHAPEFILE}: ShapeFile file format
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#DELIMITED_TEXT
     *                 DELIMITED_TEXT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#GDAL_CONFIGURATION_OPTIONS
     *                 GDAL_CONFIGURATION_OPTIONS}: Comma separated list of
     *                 gdal conf options, for the specific requets: key=value.
     *                 The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 inserting into a table with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only used when
     *                 not in upsert mode (upsert mode is disabled when {@code
     *                 update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any record being inserted that is rejected
     *                 for having primary key values that match those of an
     *                 existing table record will be ignored with no
     *                 error generated.  If {@code false}, the rejection of any
     *                 record for having primary key values matching an
     *                 existing record will result in an error being
     *                 reported, as determined by {@code error_handling}.  If
     *                 the specified table does not
     *                 have a primary key or if upsert mode is in effect
     *                 ({@code update_on_existing_pk} is
     *                 {@code true}), then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TRUE
     *                 TRUE}: Ignore new records whose primary key values
     *                 collide with those of existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}: Treat as errors any new records whose primary
     *                 key values collide with those of existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#INGESTION_MODE
     *                 INGESTION_MODE}: Whether to do a full load, dry run, or
     *                 perform a type inference on the source data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FULL
     *                 FULL}: Run a type inference on the source data (if
     *                 needed) and ingest
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#DRY_RUN
     *                 DRY_RUN}: Does not load data, but walks through the
     *                 source data and determines the number of valid records,
     *                 taking into account the current mode of {@code
     *                 error_handling}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TYPE_INFERENCE_ONLY
     *                 TYPE_INFERENCE_ONLY}: Infer the type of the source data
     *                 and return, without ingesting any data.  The inferred
     *                 type is returned in the response.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FULL
     *                 FULL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#LAYER
     *                 LAYER}: Optional: geo files layer(s) name(s): comma
     *                 separated.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#LOADING_MODE
     *                 LOADING_MODE}: Scheme for distributing the extraction
     *                 and loading of data from the source data file(s). This
     *                 option applies only when loading files that are local to
     *                 the database
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#HEAD
     *                 HEAD}: The head node loads all data. All files must be
     *                 available to the head node.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#DISTRIBUTED_SHARED
     *                 DISTRIBUTED_SHARED}: The head node coordinates loading
     *                 data by worker
     *                 processes across all nodes from shared files available
     *                 to all workers.
     *                 NOTE:
     *                 Instead of existing on a shared source, the files can be
     *                 duplicated on a source local to each host
     *                 to improve performance, though the files must appear as
     *                 the same data set from the perspective of
     *                 all hosts performing the load.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#DISTRIBUTED_LOCAL
     *                 DISTRIBUTED_LOCAL}: A single worker process on each node
     *                 loads all files
     *                 that are available to it. This option works best when
     *                 each worker loads files from its own file
     *                 system, to maximize performance. In order to avoid data
     *                 duplication, either each worker performing
     *                 the load needs to have visibility to a set of files
     *                 unique to it (no file is visible to more than
     *                 one node) or the target table needs to have a primary
     *                 key (which will allow the worker to
     *                 automatically deduplicate data).
     *                 NOTE:
     *                 If the target table doesn't exist, the table structure
     *                 will be determined by the head node. If the
     *                 head node has no files local to it, it will be unable to
     *                 determine the structure and the request
     *                 will fail.
     *                 If the head node is configured to have no worker
     *                 processes, no data strictly accessible to the head
     *                 node will be loaded.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#HEAD
     *                 HEAD}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#LOCAL_TIME_OFFSET
     *                 LOCAL_TIME_OFFSET}: For Avro local timestamp columns
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#MAX_RECORDS_TO_LOAD
     *                 MAX_RECORDS_TO_LOAD}: Limit the number of records to
     *                 load in this request: If this number is larger than a
     *                 batch_size, then the number of records loaded will be
     *                 limited to the next whole number of batch_size (per
     *                 working thread).  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#NUM_TASKS_PER_RANK
     *                 NUM_TASKS_PER_RANK}: Optional: number of tasks for
     *                 reading file per rank. Default will be
     *                 external_file_reader_num_tasks
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#POLL_INTERVAL
     *                 POLL_INTERVAL}: If {@code true}, the number of seconds
     *                 between attempts to load external files into the table.
     *                 If zero, polling will be continuous as long as data is
     *                 found.  If no data is found, the interval will steadily
     *                 increase to a maximum of 60 seconds.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#PRIMARY_KEYS
     *                 PRIMARY_KEYS}: Optional: comma separated list of column
     *                 names, to set as primary keys, when not specified in the
     *                 type.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SCHEMA_REGISTRY_SCHEMA_ID
     *                 SCHEMA_REGISTRY_SCHEMA_ID}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SCHEMA_REGISTRY_SCHEMA_NAME
     *                 SCHEMA_REGISTRY_SCHEMA_NAME}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SCHEMA_REGISTRY_SCHEMA_VERSION
     *                 SCHEMA_REGISTRY_SCHEMA_VERSION}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SHARD_KEYS
     *                 SHARD_KEYS}: Optional: comma separated list of column
     *                 names, to set as primary keys, when not specified in the
     *                 type.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SKIP_LINES
     *                 SKIP_LINES}: Skip number of lines from begining of file.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SUBSCRIBE
     *                 SUBSCRIBE}: Continuously poll the data source to check
     *                 for new data and load it into the table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TABLE_INSERT_MODE
     *                 TABLE_INSERT_MODE}: Optional: table_insert_mode. When
     *                 inserting records from multiple files: if table_per_file
     *                 then insert from each file into a new table. Currently
     *                 supported only for shapefiles.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SINGLE
     *                 SINGLE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TABLE_PER_FILE
     *                 TABLE_PER_FILE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SINGLE
     *                 SINGLE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TEXT_COMMENT_STRING
     *                 TEXT_COMMENT_STRING}: Specifies the character string
     *                 that should be interpreted as a comment line
     *                 prefix in the source data.  All lines in the data
     *                 starting with the provided string are ignored.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '#'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TEXT_DELIMITER
     *                 TEXT_DELIMITER}: Specifies the character delimiting
     *                 field values in the source data
     *                 and field names in the header (if present).
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is ','.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TEXT_ESCAPE_CHARACTER
     *                 TEXT_ESCAPE_CHARACTER}: Specifies the character that is
     *                 used to escape other characters in
     *                 the source data.
     *                 An 'a', 'b', 'f', 'n', 'r', 't', or 'v' preceded by an
     *                 escape character will be interpreted as the
     *                 ASCII bell, backspace, form feed, line feed, carriage
     *                 return, horizontal tab, & vertical tab,
     *                 respectively.  For example, the escape character
     *                 followed by an 'n' will be interpreted as a newline
     *                 within a field value.
     *                 The escape character can also be used to escape the
     *                 quoting character, and will be treated as an
     *                 escape character whether it is within a quoted field
     *                 value or not.
     *                 For {@code delimited_text} {@code file_type} only.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TEXT_HAS_HEADER
     *                 TEXT_HAS_HEADER}: Indicates whether the source data
     *                 contains a header row.
     *                 For {@code delimited_text} {@code file_type} only.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TEXT_HEADER_PROPERTY_DELIMITER
     *                 TEXT_HEADER_PROPERTY_DELIMITER}: Specifies the delimiter
     *                 for
     *                 <a
     *                 href="../../../../../concepts/types/#column-properties"
     *                 target="_top">column properties</a> in the header row
     *                 (if
     *                 present).  Cannot be set to same value as {@code
     *                 text_delimiter}.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '|'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TEXT_NULL_STRING
     *                 TEXT_NULL_STRING}: Specifies the character string that
     *                 should be interpreted as a null
     *                 value in the source data.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '\\N'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TEXT_QUOTE_CHARACTER
     *                 TEXT_QUOTE_CHARACTER}: Specifies the character that
     *                 should be interpreted as a field value
     *                 quoting character in the source data.  The character
     *                 must appear at beginning and end of field value
     *                 to take effect.  Delimiters within quoted fields are
     *                 treated as literals and not delimiters.  Within
     *                 a quoted field, two consecutive quote characters will be
     *                 interpreted as a single literal quote
     *                 character, effectively escaping it.  To not have a quote
     *                 character, specify an empty string.
     *                 For {@code delimited_text} {@code file_type} only.  The
     *                 default value is '"'.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TEXT_SEARCH_COLUMNS
     *                 TEXT_SEARCH_COLUMNS}: Add 'text_search' property to
     *                 internally inferenced string columns. Comma seperated
     *                 list of column names or '*' for all columns. To add
     *                 text_search property only to string columns of minimum
     *                 size, set also the option
     *                 'text_search_min_column_length'
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TEXT_SEARCH_MIN_COLUMN_LENGTH
     *                 TEXT_SEARCH_MIN_COLUMN_LENGTH}: Set minimum column size.
     *                 Used only when 'text_search_columns' has a value.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, truncate
     *                 string values that are longer than the column's type
     *                 size.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TRUNCATE_TABLE
     *                 TRUNCATE_TABLE}: If set to {@code true}, truncates the
     *                 table specified by {@code tableName} prior to loading
     *                 the file(s).
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TYPE_INFERENCE_MODE
     *                 TYPE_INFERENCE_MODE}: optimize type inference for:
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#ACCURACY
     *                 ACCURACY}: Scans data to get exactly-typed & sized
     *                 columns for all data scanned.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SPEED
     *                 SPEED}: Scans data and picks the widest possible column
     *                 types so that 'all' values will fit with minimum data
     *                 scanned
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#SPEED
     *                 SPEED}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for inserting into a table
     *                 with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>. If set to
     *                 {@code true}, any existing table record with primary
     *                 key values that match those of a record being inserted
     *                 will be replaced by that new record (the new
     *                 data will be "upserted"). If set to {@code false},
     *                 any existing table record with primary key values that
     *                 match those of a record being inserted will
     *                 remain unchanged, while the new record will be rejected
     *                 and the error handled as determined by
     *                 {@code ignore_existing_pk} & {@code error_handling}.  If
     *                 the
     *                 specified table does not have a primary key, then this
     *                 option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#TRUE
     *                 TRUE}: Upsert new records when primary keys match
     *                 existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}: Reject new records when primary keys match
     *                 existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromPayloadRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsFromPayloadResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertRecordsFromPayloadResponse insertRecordsFromPayload(String tableName, String dataText, ByteBuffer dataBytes, Map<String, Map<String, String>> modifyColumns, Map<String, String> createTableOptions, Map<String, String> options) throws GPUdbException {
        InsertRecordsFromPayloadRequest actualRequest_ = new InsertRecordsFromPayloadRequest(tableName, dataText, dataBytes, modifyColumns, createTableOptions, options);
        InsertRecordsFromPayloadResponse actualResponse_ = new InsertRecordsFromPayloadResponse();
        submitRequest("/insert/records/frompayload", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Computes remote query result and inserts the result data into a new or
     * existing table
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsFromQueryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertRecordsFromQueryResponse insertRecordsFromQuery(InsertRecordsFromQueryRequest request) throws GPUdbException {
        InsertRecordsFromQueryResponse actualResponse_ = new InsertRecordsFromQueryResponse();
        submitRequest("/insert/records/fromquery", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Computes remote query result and inserts the result data into a new or
     * existing table
     * 
     * @param tableName  Name of the table into which the data will be
     *                   inserted, in
     *                   [schema_name.]table_name format, using standard
     *                   <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     *                   If the table does not exist, the table will be created
     *                   using either an existing
     *                   {@code type_id} or the type inferred from the
     *                   remote query, and the new table name will have to meet
     *                   standard
     *                   <a
     *                   href="../../../../../concepts/tables/#table-naming-criteria"
     *                   target="_top">table naming criteria</a>.
     * @param remoteQuery  Query for which result data needs to be imported
     * @param modifyColumns  Not implemented yet.  The default value is an
     *                       empty {@link Map}.
     * @param createTableOptions  Options used when creating the target table.
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TYPE_ID
     *                            TYPE_ID}: ID of a currently registered <a
     *                            href="../../../../../concepts/types/"
     *                            target="_top">type</a>.  The default value is
     *                            ''.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#NO_ERROR_IF_EXISTS
     *                            NO_ERROR_IF_EXISTS}: If {@code true},
     *                            prevents an error from occurring if the table
     *                            already exists and is of the given type.  If
     *                            a table with the same ID but a different type
     *                            exists, it is still an error.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_REPLICATED
     *                            IS_REPLICATED}: Affects the <a
     *                            href="../../../../../concepts/tables/#distribution"
     *                            target="_top">distribution scheme</a> for the
     *                            table's data.  If {@code true} and the given
     *                            type has no explicit <a
     *                            href="../../../../../concepts/tables/#shard-key"
     *                            target="_top">shard key</a> defined, the
     *                            table will be <a
     *                            href="../../../../../concepts/tables/#replication"
     *                            target="_top">replicated</a>.  If {@code
     *                            false}, the table will be <a
     *                            href="../../../../../concepts/tables/#sharding"
     *                            target="_top">sharded</a> according to the
     *                            shard key specified in the given {@code
     *                            type_id}, or <a
     *                            href="../../../../../concepts/tables/#random-sharding"
     *                            target="_top">randomly sharded</a>, if no
     *                            shard key is specified.  Note that a type
     *                            containing a shard key cannot be used to
     *                            create a replicated table.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FOREIGN_KEYS
     *                            FOREIGN_KEYS}: Semicolon-separated list of <a
     *                            href="../../../../../concepts/tables/#foreign-keys"
     *                            target="_top">foreign keys</a>, of the format
     *                            '(source_column_name [, ...]) references
     *                            target_table_name(primary_key_column_name [,
     *                            ...]) [as foreign_key_name]'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FOREIGN_SHARD_KEY
     *                            FOREIGN_SHARD_KEY}: Foreign shard key of the
     *                            format 'source_column references
     *                            shard_by_column from
     *                            target_table(primary_key_column)'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_TYPE
     *                            PARTITION_TYPE}: <a
     *                            href="../../../../../concepts/tables/#partitioning"
     *                            target="_top">Partitioning</a> scheme to use.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#RANGE
     *                            RANGE}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#INTERVAL
     *                            INTERVAL}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#LIST
     *                            LIST}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#HASH
     *                            HASH}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#SERIES
     *                            SERIES}: Use <a
     *                            href="../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a>.
     *                            </ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_KEYS
     *                            PARTITION_KEYS}: Comma-separated list of
     *                            partition keys, which are the columns or
     *                            column expressions by which records will be
     *                            assigned to partitions defined by {@code
     *                            partition_definitions}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_DEFINITIONS
     *                            PARTITION_DEFINITIONS}: Comma-separated list
     *                            of partition definitions, whose format
     *                            depends on the choice of {@code
     *                            partition_type}.  See <a
     *                            href="../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>, <a
     *                            href="../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>, <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>, <a
     *                            href="../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>, or <a
     *                            href="../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a> for
     *                            example formats.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_AUTOMATIC_PARTITION
     *                            IS_AUTOMATIC_PARTITION}: If {@code true}, a
     *                            new partition will be created for values
     *                            which don't fall into an existing partition.
     *                            Currently only supported for <a
     *                            href="../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitions</a>.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TTL
     *                            TTL}: Sets the <a
     *                            href="../../../../../concepts/ttl/"
     *                            target="_top">TTL</a> of the table specified
     *                            in {@code tableName}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#CHUNK_SIZE
     *                            CHUNK_SIZE}: Indicates the number of records
     *                            per chunk to be used for this table.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_RESULT_TABLE
     *                            IS_RESULT_TABLE}: Indicates whether the table
     *                            is a <a
     *                            href="../../../../../concepts/tables_memory_only/"
     *                            target="_top">memory-only table</a>. A result
     *                            table cannot contain columns with store_only
     *                            or text_search <a
     *                            href="../../../../../concepts/types/#data-handling"
     *                            target="_top">data-handling</a> or that are
     *                            <a
     *                            href="../../../../../concepts/types/#primitive-types"
     *                            target="_top">non-charN strings</a>, and it
     *                            will not be retained if the server is
     *                            restarted.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#STRATEGY_DEFINITION
     *                            STRATEGY_DEFINITION}: The <a
     *                            href="../../../../../rm/concepts/#tier-strategies"
     *                            target="_top">tier strategy</a> for the table
     *                            and its columns.
     *                            </ul>
     *                            The default value is an empty {@link Map}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BAD_RECORD_TABLE_NAME
     *                 BAD_RECORD_TABLE_NAME}: Optional name of a table to
     *                 which records that were rejected are written.  The
     *                 bad-record-table has the following columns: line_number
     *                 (long), line_rejected (string), error_message (string).
     *                 When error handling is Abort, bad records table is not
     *                 populated.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BAD_RECORD_TABLE_LIMIT
     *                 BAD_RECORD_TABLE_LIMIT}: A positive integer indicating
     *                 the maximum number of records that can be  written to
     *                 the bad-record-table.   Default value is 10000
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BATCH_SIZE
     *                 BATCH_SIZE}: Number of records per batch when inserting
     *                 data.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DATASOURCE_NAME
     *                 DATASOURCE_NAME}: Name of an existing external data
     *                 source from which table will be loaded
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ERROR_HANDLING
     *                 ERROR_HANDLING}: Specifies how errors should be handled
     *                 upon insertion.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PERMISSIVE
     *                 PERMISSIVE}: Records with missing columns are populated
     *                 with nulls if possible; otherwise, the malformed records
     *                 are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_BAD_RECORDS
     *                 IGNORE_BAD_RECORDS}: Malformed records are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT
     *                 ABORT}: Stops current insertion and aborts entire
     *                 operation when an error is encountered.  Primary key
     *                 collisions are considered abortable errors in this mode.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT
     *                 ABORT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 inserting into a table with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only used when
     *                 not in upsert mode (upsert mode is disabled when {@code
     *                 update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any record being inserted that is rejected
     *                 for having primary key values that match those of an
     *                 existing table record will be ignored with no
     *                 error generated.  If {@code false}, the rejection of any
     *                 record for having primary key values matching an
     *                 existing record will result in an error being
     *                 reported, as determined by {@code error_handling}.  If
     *                 the specified table does not
     *                 have a primary key or if upsert mode is in effect
     *                 ({@code update_on_existing_pk} is
     *                 {@code true}), then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}: Ignore new records whose primary key values
     *                 collide with those of existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}: Treat as errors any new records whose primary
     *                 key values collide with those of existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#INGESTION_MODE
     *                 INGESTION_MODE}: Whether to do a full load, dry run, or
     *                 perform a type inference on the source data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL
     *                 FULL}: Run a type inference on the source data (if
     *                 needed) and ingest
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DRY_RUN
     *                 DRY_RUN}: Does not load data, but walks through the
     *                 source data and determines the number of valid records,
     *                 taking into account the current mode of {@code
     *                 error_handling}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TYPE_INFERENCE_ONLY
     *                 TYPE_INFERENCE_ONLY}: Infer the type of the source data
     *                 and return, without ingesting any data.  The inferred
     *                 type is returned in the response.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL
     *                 FULL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#JDBC_FETCH_SIZE
     *                 JDBC_FETCH_SIZE}: The JDBC fetch size, which determines
     *                 how many rows to fetch per round trip.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#JDBC_SESSION_INIT_STATEMENT
     *                 JDBC_SESSION_INIT_STATEMENT}: Executes the statement per
     *                 each jdbc session before doing actual load.  The default
     *                 value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#NUM_SPLITS_PER_RANK
     *                 NUM_SPLITS_PER_RANK}: Optional: number of splits for
     *                 reading data per rank. Default will be
     *                 external_file_reader_num_tasks.  The default value is
     *                 ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#NUM_TASKS_PER_RANK
     *                 NUM_TASKS_PER_RANK}: Optional: number of tasks for
     *                 reading data per rank. Default will be
     *                 external_file_reader_num_tasks
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PRIMARY_KEYS
     *                 PRIMARY_KEYS}: Optional: comma separated list of column
     *                 names, to set as primary keys, when not specified in the
     *                 type.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#SHARD_KEYS
     *                 SHARD_KEYS}: Optional: comma separated list of column
     *                 names, to set as primary keys, when not specified in the
     *                 type.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#SUBSCRIBE
     *                 SUBSCRIBE}: Continuously poll the data source to check
     *                 for new data and load it into the table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUNCATE_TABLE
     *                 TRUNCATE_TABLE}: If set to {@code true}, truncates the
     *                 table specified by {@code tableName} prior to loading
     *                 the data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY
     *                 REMOTE_QUERY}: Remote SQL query from which data will be
     *                 sourced
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_ORDER_BY
     *                 REMOTE_QUERY_ORDER_BY}: Name of column to be used for
     *                 splitting the query into multiple sub-queries using
     *                 ordering of given column.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_FILTER_COLUMN
     *                 REMOTE_QUERY_FILTER_COLUMN}: Name of column to be used
     *                 for splitting the query into multiple sub-queries using
     *                 the data distribution of given column.  The default
     *                 value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_INCREASING_COLUMN
     *                 REMOTE_QUERY_INCREASING_COLUMN}: Column on subscribed
     *                 remote query result that will increase for new records
     *                 (e.g., TIMESTAMP).  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_PARTITION_COLUMN
     *                 REMOTE_QUERY_PARTITION_COLUMN}: Alias name for
     *                 remote_query_filter_column.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, truncate
     *                 string values that are longer than the column's type
     *                 size.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for inserting into a table
     *                 with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>. If set to
     *                 {@code true}, any existing table record with primary
     *                 key values that match those of a record being inserted
     *                 will be replaced by that new record (the new
     *                 data will be "upserted"). If set to {@code false},
     *                 any existing table record with primary key values that
     *                 match those of a record being inserted will
     *                 remain unchanged, while the new record will be rejected
     *                 and the error handled as determined by
     *                 {@code ignore_existing_pk} & {@code error_handling}.  If
     *                 the
     *                 specified table does not have a primary key, then this
     *                 option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}: Upsert new records when primary keys match
     *                 existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}: Reject new records when primary keys match
     *                 existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsFromQueryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertRecordsFromQueryResponse insertRecordsFromQuery(String tableName, String remoteQuery, Map<String, Map<String, String>> modifyColumns, Map<String, String> createTableOptions, Map<String, String> options) throws GPUdbException {
        InsertRecordsFromQueryRequest actualRequest_ = new InsertRecordsFromQueryRequest(tableName, remoteQuery, modifyColumns, createTableOptions, options);
        InsertRecordsFromQueryResponse actualResponse_ = new InsertRecordsFromQueryResponse();
        submitRequest("/insert/records/fromquery", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Generates a specified number of random records and adds them to the
     * given table.
     * There is an optional parameter that allows the user to customize the
     * ranges of
     * the column values. It also allows the user to specify linear profiles
     * for some
     * or all columns in which case linear values are generated rather than
     * random
     * ones. Only individual tables are supported for this operation.
     * <p>
     * This operation is synchronous, meaning that a response will not be
     * returned
     * until all random records are fully available.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsRandomResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertRecordsRandomResponse insertRecordsRandom(InsertRecordsRandomRequest request) throws GPUdbException {
        InsertRecordsRandomResponse actualResponse_ = new InsertRecordsRandomResponse();
        submitRequest("/insert/records/random", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Generates a specified number of random records and adds them to the
     * given table.
     * There is an optional parameter that allows the user to customize the
     * ranges of
     * the column values. It also allows the user to specify linear profiles
     * for some
     * or all columns in which case linear values are generated rather than
     * random
     * ones. Only individual tables are supported for this operation.
     * <p>
     * This operation is synchronous, meaning that a response will not be
     * returned
     * until all random records are fully available.
     * 
     * @param tableName  Table to which random records will be added, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table, not a view.
     * @param count  Number of records to generate.
     * @param options  Optional parameter to pass in specifications for the
     *                 randomness of the values.  This map is different from
     *                 the *options* parameter of most other endpoints in that
     *                 it is a map of string to map of string to doubles, while
     *                 most others are maps of string to string.  In this map,
     *                 the top level keys represent which column's parameters
     *                 are being specified, while the internal keys represents
     *                 which parameter is being specified.  These parameters
     *                 take on different meanings depending on the type of the
     *                 column.  Below follows a more detailed description of
     *                 the map:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#SEED
     *                 SEED}: If provided, the internal random number generator
     *                 will be initialized with the given value.  The minimum
     *                 is 0.  This allows for the same set of random numbers to
     *                 be generated across invocation of this endpoint in case
     *                 the user wants to repeat the test.  Since {@code
     *                 options}, is a map of maps, we need an internal map to
     *                 provide the seed value.  For example, to pass 100 as the
     *                 seed value through this parameter, you need something
     *                 equivalent to: 'options' = {'seed': { 'value': 100 } }
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#VALUE
     *                 VALUE}: The seed value to use
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#ALL
     *                 ALL}: This key indicates that the specifications relayed
     *                 in the internal map are to be applied to all columns of
     *                 the records.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#MIN
     *                 MIN}: For numerical columns, the minimum of the
     *                 generated values is set to this value.  Default is
     *                 -99999.  For point, shape, and track columns, min for
     *                 numeric 'x' and 'y' columns needs to be within [-180,
     *                 180] and [-90, 90], respectively. The default minimum
     *                 possible values for these columns in such cases are
     *                 -180.0 and -90.0. For the 'TIMESTAMP' column, the
     *                 default minimum corresponds to Jan 1, 2010.
     *                 For string columns, the minimum length of the randomly
     *                 generated strings is set to this value (default is 0).
     *                 If both minimum and maximum are provided, minimum must
     *                 be less than or equal to max. Value needs to be within
     *                 [0, 200].
     *                 If the min is outside the accepted ranges for strings
     *                 columns and 'x' and 'y' columns for point/shape/track,
     *                 then those parameters will not be set; however, an error
     *                 will not be thrown in such a case. It is the
     *                 responsibility of the user to use the {@code all}
     *                 parameter judiciously.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#MAX
     *                 MAX}: For numerical columns, the maximum of the
     *                 generated values is set to this value. Default is 99999.
     *                 For point, shape, and track columns, max for numeric 'x'
     *                 and 'y' columns needs to be within [-180, 180] and [-90,
     *                 90], respectively. The default minimum possible values
     *                 for these columns in such cases are 180.0 and 90.0.
     *                 For string columns, the maximum length of the randomly
     *                 generated strings is set to this value (default is 200).
     *                 If both minimum and maximum are provided, *max* must be
     *                 greater than or equal to *min*. Value needs to be within
     *                 [0, 200].
     *                 If the *max* is outside the accepted ranges for strings
     *                 columns and 'x' and 'y' columns for point/shape/track,
     *                 then those parameters will not be set; however, an error
     *                 will not be thrown in such a case. It is the
     *                 responsibility of the user to use the {@code all}
     *                 parameter judiciously.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#INTERVAL
     *                 INTERVAL}: If specified, generate values for all columns
     *                 evenly spaced with the given interval value. If a max
     *                 value is specified for a given column the data is
     *                 randomly generated between min and max and decimated
     *                 down to the interval. If no max is provided the data is
     *                 linerally generated starting at the minimum value
     *                 (instead of generating random data). For non-decimated
     *                 string-type columns the interval value is ignored.
     *                 Instead the values are generated following the pattern:
     *                 'attrname_creationIndex#', i.e. the column name suffixed
     *                 with an underscore and a running counter (starting at
     *                 0). For string types with limited size (eg char4) the
     *                 prefix is dropped. No nulls will be generated for
     *                 nullable columns.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#NULL_PERCENTAGE
     *                 NULL_PERCENTAGE}: If specified, then generate the given
     *                 percentage of the count as nulls for all nullable
     *                 columns.  This option will be ignored for non-nullable
     *                 columns.  The value must be within the range [0, 1.0].
     *                 The default value is 5% (0.05).
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#CARDINALITY
     *                 CARDINALITY}: If specified, limit the randomly generated
     *                 values to a fixed set. Not allowed on a column with
     *                 interval specified, and is not applicable to WKT or
     *                 Track-specific columns. The value must be greater than
     *                 0. This option is disabled by default.
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#ATTR_NAME
     *                 ATTR_NAME}: Use the desired column name in place of
     *                 {@code attr_name}, and set the following parameters for
     *                 the column specified. This overrides any parameter set
     *                 by {@code all}.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#MIN
     *                 MIN}: For numerical columns, the minimum of the
     *                 generated values is set to this value.  Default is
     *                 -99999.  For point, shape, and track columns, min for
     *                 numeric 'x' and 'y' columns needs to be within [-180,
     *                 180] and [-90, 90], respectively. The default minimum
     *                 possible values for these columns in such cases are
     *                 -180.0 and -90.0. For the 'TIMESTAMP' column, the
     *                 default minimum corresponds to Jan 1, 2010.
     *                 For string columns, the minimum length of the randomly
     *                 generated strings is set to this value (default is 0).
     *                 If both minimum and maximum are provided, minimum must
     *                 be less than or equal to max. Value needs to be within
     *                 [0, 200].
     *                 If the min is outside the accepted ranges for strings
     *                 columns and 'x' and 'y' columns for point/shape/track,
     *                 then those parameters will not be set; however, an error
     *                 will not be thrown in such a case. It is the
     *                 responsibility of the user to use the {@code all}
     *                 parameter judiciously.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#MAX
     *                 MAX}: For numerical columns, the maximum of the
     *                 generated values is set to this value. Default is 99999.
     *                 For point, shape, and track columns, max for numeric 'x'
     *                 and 'y' columns needs to be within [-180, 180] and [-90,
     *                 90], respectively. The default minimum possible values
     *                 for these columns in such cases are 180.0 and 90.0.
     *                 For string columns, the maximum length of the randomly
     *                 generated strings is set to this value (default is 200).
     *                 If both minimum and maximum are provided, *max* must be
     *                 greater than or equal to *min*. Value needs to be within
     *                 [0, 200].
     *                 If the *max* is outside the accepted ranges for strings
     *                 columns and 'x' and 'y' columns for point/shape/track,
     *                 then those parameters will not be set; however, an error
     *                 will not be thrown in such a case. It is the
     *                 responsibility of the user to use the {@code all}
     *                 parameter judiciously.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#INTERVAL
     *                 INTERVAL}: If specified, generate values for all columns
     *                 evenly spaced with the given interval value. If a max
     *                 value is specified for a given column the data is
     *                 randomly generated between min and max and decimated
     *                 down to the interval. If no max is provided the data is
     *                 linerally generated starting at the minimum value
     *                 (instead of generating random data). For non-decimated
     *                 string-type columns the interval value is ignored.
     *                 Instead the values are generated following the pattern:
     *                 'attrname_creationIndex#', i.e. the column name suffixed
     *                 with an underscore and a running counter (starting at
     *                 0). For string types with limited size (eg char4) the
     *                 prefix is dropped. No nulls will be generated for
     *                 nullable columns.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#NULL_PERCENTAGE
     *                 NULL_PERCENTAGE}: If specified and if this column is
     *                 nullable, then generate the given percentage of the
     *                 count as nulls.  This option will result in an error if
     *                 the column is not nullable.  The value must be within
     *                 the range [0, 1.0].  The default value is 5% (0.05).
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#CARDINALITY
     *                 CARDINALITY}: If specified, limit the randomly generated
     *                 values to a fixed set. Not allowed on a column with
     *                 interval specified, and is not applicable to WKT or
     *                 Track-specific columns. The value must be greater than
     *                 0. This option is disabled by default.
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#TRACK_LENGTH
     *                 TRACK_LENGTH}: This key-map pair is only valid for track
     *                 data sets (an error is thrown otherwise).  No nulls
     *                 would be generated for nullable columns.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#MIN
     *                 MIN}: Minimum possible length for generated series;
     *                 default is 100 records per series. Must be an integral
     *                 value within the range [1, 500]. If both min and max are
     *                 specified, min must be less than or equal to max.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsRandomRequest.Options#MAX
     *                 MAX}: Maximum possible length for generated series;
     *                 default is 500 records per series. Must be an integral
     *                 value within the range [1, 500]. If both min and max are
     *                 specified, max must be greater than or equal to min.
     *                 </ul>
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertRecordsRandomResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertRecordsRandomResponse insertRecordsRandom(String tableName, long count, Map<String, Map<String, Double>> options) throws GPUdbException {
        InsertRecordsRandomRequest actualRequest_ = new InsertRecordsRandomRequest(tableName, count, options);
        InsertRecordsRandomResponse actualResponse_ = new InsertRecordsRandomResponse();
        submitRequest("/insert/records/random", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Adds a symbol or icon (i.e. an image) to represent data points when data
     * is rendered visually. Users must provide the symbol identifier (string),
     * a format (currently supported: 'svg' and 'svg_path'), the data for the
     * symbol, and any additional optional parameter (e.g. color). To have a
     * symbol used for rendering create a table with a string column named
     * 'SYMBOLCODE' (along with 'x' or 'y' for example). Then when the table is
     * rendered (via <a href="../../../../../api/rest/wms_rest/"
     * target="_top">WMS</a>) if the 'dosymbology' parameter is 'true' then the
     * value of the 'SYMBOLCODE' column is used to pick the symbol displayed
     * for each point.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertSymbolResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertSymbolResponse insertSymbol(InsertSymbolRequest request) throws GPUdbException {
        InsertSymbolResponse actualResponse_ = new InsertSymbolResponse();
        submitRequest("/insert/symbol", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Adds a symbol or icon (i.e. an image) to represent data points when data
     * is rendered visually. Users must provide the symbol identifier (string),
     * a format (currently supported: 'svg' and 'svg_path'), the data for the
     * symbol, and any additional optional parameter (e.g. color). To have a
     * symbol used for rendering create a table with a string column named
     * 'SYMBOLCODE' (along with 'x' or 'y' for example). Then when the table is
     * rendered (via <a href="../../../../../api/rest/wms_rest/"
     * target="_top">WMS</a>) if the 'dosymbology' parameter is 'true' then the
     * value of the 'SYMBOLCODE' column is used to pick the symbol displayed
     * for each point.
     * 
     * @param symbolId  The id of the symbol being added. This is the same id
     *                  that should be in the 'SYMBOLCODE' column for objects
     *                  using this symbol
     * @param symbolFormat  Specifies the symbol format. Must be either 'svg'
     *                      or 'svg_path'.
     *                      Supported values:
     *                      <ul>
     *                              <li> {@link
     *                      com.gpudb.protocol.InsertSymbolRequest.SymbolFormat#SVG
     *                      SVG}
     *                              <li> {@link
     *                      com.gpudb.protocol.InsertSymbolRequest.SymbolFormat#SVG_PATH
     *                      SVG_PATH}
     *                      </ul>
     * @param symbolData  The actual symbol data. If {@code symbolFormat} is
     *                    'svg' then this should be the raw bytes representing
     *                    an svg file. If {@code symbolFormat} is svg path then
     *                    this should be an svg path string, for example:
     *                    'M25.979,12.896,5.979,12.896,5.979,19.562,25.979,19.562z'
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertSymbolRequest.Options#COLOR
     *                 COLOR}: If {@code symbolFormat} is 'svg' this is
     *                 ignored. If {@code symbolFormat} is 'svg_path' then this
     *                 option specifies the color (in RRGGBB hex format) of the
     *                 path. For example, to have the path rendered in red,
     *                 used 'FF0000'. If 'color' is not provided then '00FF00'
     *                 (i.e. green) is used by default.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  InsertSymbolResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public InsertSymbolResponse insertSymbol(String symbolId, String symbolFormat, ByteBuffer symbolData, Map<String, String> options) throws GPUdbException {
        InsertSymbolRequest actualRequest_ = new InsertSymbolRequest(symbolId, symbolFormat, symbolData, options);
        InsertSymbolResponse actualResponse_ = new InsertSymbolResponse();
        submitRequest("/insert/symbol", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Kills a running proc instance.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  KillProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public KillProcResponse killProc(KillProcRequest request) throws GPUdbException {
        KillProcResponse actualResponse_ = new KillProcResponse();
        submitRequest("/kill/proc", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Kills a running proc instance.
     * 
     * @param runId  The run ID of a running proc instance. If a proc with a
     *               matching run ID is not found or the proc instance has
     *               already completed, no procs will be killed. If not
     *               specified, all running proc instances will be killed.  The
     *               default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.KillProcRequest.Options#RUN_TAG
     *                 RUN_TAG}: If {@code runId} is specified, kill the proc
     *                 instance that has a matching run ID and a matching run
     *                 tag that was provided to {@link
     *                 GPUdb#executeProc(String, Map, Map, List, Map, List,
     *                 Map)}. If {@code runId} is not specified, kill the proc
     *                 instance(s) where a matching run tag was provided to
     *                 {@link GPUdb#executeProc(String, Map, Map, List, Map,
     *                 List, Map)}.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.KillProcRequest.Options#CLEAR_EXECUTE_AT_STARTUP
     *                 CLEAR_EXECUTE_AT_STARTUP}: If {@code true}, kill and
     *                 remove the instance of the proc matching the auto-start
     *                 run ID that was created to run when the database is
     *                 started. The auto-start run ID was returned from {@link
     *                 GPUdb#executeProc(String, Map, Map, List, Map, List,
     *                 Map)} and can be retrieved using {@link
     *                 GPUdb#showProc(String, Map)}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.KillProcRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.KillProcRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.KillProcRequest.Options#FALSE FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  KillProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public KillProcResponse killProc(String runId, Map<String, String> options) throws GPUdbException {
        KillProcRequest actualRequest_ = new KillProcRequest(runId, options);
        KillProcResponse actualResponse_ = new KillProcResponse();
        submitRequest("/kill/proc", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public ListGraphResponse listGraph(ListGraphRequest request) throws GPUdbException {
        ListGraphResponse actualResponse_ = new ListGraphResponse();
        submitRequest("/list/graph", request, actualResponse_, false);
        return actualResponse_;
    }



    public ListGraphResponse listGraph(String graphName, Map<String, String> options) throws GPUdbException {
        ListGraphRequest actualRequest_ = new ListGraphRequest(graphName, options);
        ListGraphResponse actualResponse_ = new ListGraphResponse();
        submitRequest("/list/graph", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Manages global access to a table's data.  By default a table has a
     * {@code lockType} of {@code read_write}, indicating all operations are
     * permitted.  A user may request a {@code read_only} or a {@code
     * write_only} lock, after which only read or write operations,
     * respectively, are permitted on the table until the lock is removed.
     * When {@code lockType} is {@code no_access} then no operations are
     * permitted on the table.  The lock status can be queried by setting
     * {@code lockType} to {@code status}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  LockTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public LockTableResponse lockTable(LockTableRequest request) throws GPUdbException {
        LockTableResponse actualResponse_ = new LockTableResponse();
        submitRequest("/lock/table", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Manages global access to a table's data.  By default a table has a
     * {@code lockType} of {@code read_write}, indicating all operations are
     * permitted.  A user may request a {@code read_only} or a {@code
     * write_only} lock, after which only read or write operations,
     * respectively, are permitted on the table until the lock is removed.
     * When {@code lockType} is {@code no_access} then no operations are
     * permitted on the table.  The lock status can be queried by setting
     * {@code lockType} to {@code status}.
     * 
     * @param tableName  Name of the table to be locked, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  It must be a
     *                   currently existing table or view.
     * @param lockType  The type of lock being applied to the table. Setting it
     *                  to {@code status} will return the current lock status
     *                  of the table without changing it.
     *                  Supported values:
     *                  <ul>
     *                          <li> {@link
     *                  com.gpudb.protocol.LockTableRequest.LockType#STATUS
     *                  STATUS}: Show locked status
     *                          <li> {@link
     *                  com.gpudb.protocol.LockTableRequest.LockType#NO_ACCESS
     *                  NO_ACCESS}: Allow no read/write operations
     *                          <li> {@link
     *                  com.gpudb.protocol.LockTableRequest.LockType#READ_ONLY
     *                  READ_ONLY}: Allow only read operations
     *                          <li> {@link
     *                  com.gpudb.protocol.LockTableRequest.LockType#WRITE_ONLY
     *                  WRITE_ONLY}: Allow only write operations
     *                          <li> {@link
     *                  com.gpudb.protocol.LockTableRequest.LockType#READ_WRITE
     *                  READ_WRITE}: Allow all read/write operations
     *                  </ul>
     *                  The default value is {@link
     *                  com.gpudb.protocol.LockTableRequest.LockType#STATUS
     *                  STATUS}.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  LockTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public LockTableResponse lockTable(String tableName, String lockType, Map<String, String> options) throws GPUdbException {
        LockTableRequest actualRequest_ = new LockTableRequest(tableName, lockType, options);
        LockTableResponse actualResponse_ = new LockTableResponse();
        submitRequest("/lock/table", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Matches a directed route implied by a given set of
     * latitude/longitude points to an existing underlying road network graph
     * using a
     * given solution type.

     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, the
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>,
     * and/or some
     * <a href="../../../../../guide-tags/graph---match/"
     * target="_top">/match/graph examples</a>
     * before using this endpoint.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  MatchGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public MatchGraphResponse matchGraph(MatchGraphRequest request) throws GPUdbException {
        MatchGraphResponse actualResponse_ = new MatchGraphResponse();
        submitRequest("/match/graph", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Matches a directed route implied by a given set of
     * latitude/longitude points to an existing underlying road network graph
     * using a
     * given solution type.

     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, the
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>,
     * and/or some
     * <a href="../../../../../guide-tags/graph---match/"
     * target="_top">/match/graph examples</a>
     * before using this endpoint.
     * 
     * @param graphName  Name of the underlying geospatial graph resource to
     *                   match to using {@code samplePoints}.
     * @param samplePoints  Sample points used to match to an underlying
     *                      geospatial
     *                      graph. Sample points must be specified using
     *                      <a
     *                      href="../../../../../graph_solver/network_graph_solver/#match-identifiers"
     *                      target="_top">identifiers</a>;
     *                      identifiers are grouped as
     *                      <a
     *                      href="../../../../../graph_solver/network_graph_solver/#match-combinations"
     *                      target="_top">combinations</a>.
     *                      Identifiers can be used with: existing column
     *                      names, e.g.,
     *                      'table.column AS SAMPLE_X'; expressions, e.g.,
     *                      'ST_MAKEPOINT(table.x, table.y) AS
     *                      SAMPLE_WKTPOINT'; or constant values, e.g.,
     *                      '{1, 2, 10} AS SAMPLE_TRIPID'.
     * @param solveMethod  The type of solver to use for graph matching.
     *                     Supported values:
     *                     <ul>
     *                             <li> {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MARKOV_CHAIN
     *                     MARKOV_CHAIN}: Matches {@code samplePoints} to the
     *                     graph using the Hidden Markov Model (HMM)-based
     *                     method, which conducts a range-tree closest-edge
     *                     search to find the best combinations of possible
     *                     road segments ({@code num_segments}) for each sample
     *                     point to create the best route. The route is secured
     *                     one point at a time while looking ahead {@code
     *                     chain_width} number of points, so the prediction is
     *                     corrected after each point. This solution type is
     *                     the most accurate but also the most computationally
     *                     intensive. Related options: {@code num_segments} and
     *                     {@code chain_width}.
     *                             <li> {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MATCH_OD_PAIRS
     *                     MATCH_OD_PAIRS}: Matches {@code samplePoints} to
     *                     find the most probable path between origin and
     *                     destination pairs with cost constraints.
     *                             <li> {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MATCH_SUPPLY_DEMAND
     *                     MATCH_SUPPLY_DEMAND}: Matches {@code samplePoints}
     *                     to optimize scheduling multiple supplies (trucks)
     *                     with varying sizes to varying demand sites with
     *                     varying capacities per depot. Related options:
     *                     {@code partial_loading} and {@code
     *                     max_combinations}.
     *                             <li> {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MATCH_BATCH_SOLVES
     *                     MATCH_BATCH_SOLVES}: Matches {@code samplePoints}
     *                     source and destination pairs for the shortest path
     *                     solves in batch mode.
     *                             <li> {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MATCH_LOOPS
     *                     MATCH_LOOPS}: Matches closed loops (Eulerian paths)
     *                     originating and ending at each graph node within min
     *                     and max hops (levels).
     *                             <li> {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MATCH_CHARGING_STATIONS
     *                     MATCH_CHARGING_STATIONS}: Matches an optimal path
     *                     across a number of ev-charging stations between
     *                     source and target locations.
     *                             <li> {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MATCH_SIMILARITY
     *                     MATCH_SIMILARITY}: Matches the intersection set(s)
     *                     by computing the Jaccard similarity score between
     *                     node pairs.
     *                             <li> {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MATCH_PICKUP_DROPOFF
     *                     MATCH_PICKUP_DROPOFF}: Matches the pickups and
     *                     dropoffs by optimizing the total trip costs
     *                             <li> {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MATCH_CLUSTERS
     *                     MATCH_CLUSTERS}: Matches the graph nodes with a
     *                     cluster index using Louvain clustering algorithm
     *                             <li> {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MATCH_PATTERN
     *                     MATCH_PATTERN}: Matches a pattern in the graph
     *                     </ul>
     *                     The default value is {@link
     *                     com.gpudb.protocol.MatchGraphRequest.SolveMethod#MARKOV_CHAIN
     *                     MARKOV_CHAIN}.
     * @param solutionTable  The name of the table used to store the results,
     *                       in [schema_name.]table_name format, using standard
     *                       <a
     *                       href="../../../../../concepts/tables/#table-name-resolution"
     *                       target="_top">name resolution rules</a> and
     *                       meeting <a
     *                       href="../../../../../concepts/tables/#table-naming-criteria"
     *                       target="_top">table naming criteria</a>.  This
     *                       table contains a <a
     *                       href="../../../../../location_intelligence/geo_objects/#geospatial-tracks"
     *                       target="_top">track</a> of geospatial points for
     *                       the matched portion of the graph, a track ID, and
     *                       a score value. Also outputs a details table
     *                       containing a trip ID (that matches the track ID),
     *                       the latitude/longitude pair, the timestamp the
     *                       point was recorded at, and an edge ID
     *                       corresponding to the matched road segment. Must
     *                       not be an existing table of the same name.  The
     *                       default value is ''.
     * @param options  Additional parameters
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#GPS_NOISE
     *                 GPS_NOISE}: GPS noise value (in meters) to remove
     *                 redundant sample points. Use -1 to disable noise
     *                 reduction. The default value accounts for 95% of point
     *                 variation (+ or -5 meters).  The default value is '5.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#NUM_SEGMENTS
     *                 NUM_SEGMENTS}: Maximum number of potentially matching
     *                 road segments for each sample point. For the {@code
     *                 markov_chain} solver, the default is 3.  The default
     *                 value is '3'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#SEARCH_RADIUS
     *                 SEARCH_RADIUS}: Maximum search radius used when snapping
     *                 sample points onto potentially matching surrounding
     *                 segments. The default value corresponds to approximately
     *                 100 meters.  The default value is '0.001'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#CHAIN_WIDTH
     *                 CHAIN_WIDTH}: For the {@code markov_chain} solver only.
     *                 Length of the sample points lookahead window within the
     *                 Markov kernel; the larger the number, the more accurate
     *                 the solution.  The default value is '9'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#SOURCE
     *                 SOURCE}: Optional WKT starting point from {@code
     *                 samplePoints} for the solver. The default behavior for
     *                 the endpoint is to use time to determine the starting
     *                 point.  The default value is 'POINT NULL'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#DESTINATION
     *                 DESTINATION}: Optional WKT ending point from {@code
     *                 samplePoints} for the solver. The default behavior for
     *                 the endpoint is to use time to determine the destination
     *                 point.  The default value is 'POINT NULL'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#PARTIAL_LOADING
     *                 PARTIAL_LOADING}: For the {@code match_supply_demand}
     *                 solver only. When false (non-default), trucks do not
     *                 off-load at the demand (store) side if the remainder is
     *                 less than the store's need
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}:
     *                 Partial off-loading at multiple store (demand) locations
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}: No partial off-loading allowed if supply is less
     *                 than the store's demand.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#MAX_COMBINATIONS
     *                 MAX_COMBINATIONS}: For the {@code match_supply_demand}
     *                 solver only. This is the cutoff for the number of
     *                 generated combinations for sequencing the demand
     *                 locations - can increase this up to 2M.  The default
     *                 value is '10000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#MAX_SUPPLY_COMBINATIONS
     *                 MAX_SUPPLY_COMBINATIONS}: For the {@code
     *                 match_supply_demand} solver only. This is the cutoff for
     *                 the number of generated combinations for sequencing the
     *                 supply locations if/when 'permute_supplies' is true.
     *                 The default value is '10000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#LEFT_TURN_PENALTY
     *                 LEFT_TURN_PENALTY}: This will add an additonal weight
     *                 over the edges labelled as 'left turn' if the 'add_turn'
     *                 option parameter of the {@link GPUdb#createGraph(String,
     *                 boolean, List, List, List, List, Map)} was invoked at
     *                 graph creation.  The default value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#RIGHT_TURN_PENALTY
     *                 RIGHT_TURN_PENALTY}: This will add an additonal weight
     *                 over the edges labelled as' right turn' if the
     *                 'add_turn' option parameter of the {@link
     *                 GPUdb#createGraph(String, boolean, List, List, List,
     *                 List, Map)} was invoked at graph creation.  The default
     *                 value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#INTERSECTION_PENALTY
     *                 INTERSECTION_PENALTY}: This will add an additonal weight
     *                 over the edges labelled as 'intersection' if the
     *                 'add_turn' option parameter of the {@link
     *                 GPUdb#createGraph(String, boolean, List, List, List,
     *                 List, Map)} was invoked at graph creation.  The default
     *                 value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#SHARP_TURN_PENALTY
     *                 SHARP_TURN_PENALTY}: This will add an additonal weight
     *                 over the edges labelled as 'sharp turn' or 'u-turn' if
     *                 the 'add_turn' option parameter of the {@link
     *                 GPUdb#createGraph(String, boolean, List, List, List,
     *                 List, Map)} was invoked at graph creation.  The default
     *                 value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#AGGREGATED_OUTPUT
     *                 AGGREGATED_OUTPUT}: For the {@code match_supply_demand}
     *                 solver only. When it is true (default), each record in
     *                 the output table shows a particular truck's scheduled
     *                 cumulative round trip path (MULTILINESTRING) and the
     *                 corresponding aggregated cost. Otherwise, each record
     *                 shows a single scheduled truck route (LINESTRING)
     *                 towards a particular demand location (store id) with its
     *                 corresponding cost.  The default value is 'true'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#OUTPUT_TRACKS
     *                 OUTPUT_TRACKS}: For the {@code match_supply_demand}
     *                 solver only. When it is true (non-default), the output
     *                 will be in tracks format for all the round trips of each
     *                 truck in which the timestamps are populated directly
     *                 from the edge weights starting from their originating
     *                 depots.  The default value is 'false'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#MAX_TRIP_COST
     *                 MAX_TRIP_COST}: For the {@code match_supply_demand} and
     *                 {@code match_pickup_dropoff} solvers only. If this
     *                 constraint is greater than zero (default) then the
     *                 trucks/rides will skip travelling from one demand/pick
     *                 location to another if the cost between them is greater
     *                 than this number (distance or time). Zero (default)
     *                 value means no check is performed.  The default value is
     *                 '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FILTER_FOLDING_PATHS
     *                 FILTER_FOLDING_PATHS}: For the {@code markov_chain}
     *                 solver only. When true (non-default), the paths per
     *                 sequence combination is checked for folding over
     *                 patterns and can significantly increase the execution
     *                 time depending on the chain width and the number of gps
     *                 samples.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}:
     *                 Filter out the folded paths.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}: Do not filter out the folded paths
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#UNIT_UNLOADING_COST
     *                 UNIT_UNLOADING_COST}: For the {@code
     *                 match_supply_demand} solver only. The unit cost per load
     *                 amount to be delivered. If this value is greater than
     *                 zero (default) then the additional cost of this unit
     *                 load multiplied by the total dropped load will be added
     *                 over to the trip cost to the demand location.  The
     *                 default value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#MAX_NUM_THREADS
     *                 MAX_NUM_THREADS}: For the {@code markov_chain} solver
     *                 only. If specified (greater than zero), the maximum
     *                 number of threads will not be greater than the specified
     *                 value. It can be lower due to the memory and the number
     *                 cores available. Default value of zero allows the
     *                 algorithm to set the maximal number of threads within
     *                 these constraints.  The default value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#SERVICE_LIMIT
     *                 SERVICE_LIMIT}: For the {@code match_supply_demand}
     *                 solver only. If specified (greater than zero), any
     *                 supply actor's total service cost (distance or time)
     *                 will be limited by the specified value including
     *                 multiple rounds (if set).  The default value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#ENABLE_REUSE
     *                 ENABLE_REUSE}: For the {@code match_supply_demand}
     *                 solver only. If specified (true), all supply actors can
     *                 be scheduled for second rounds from their originating
     *                 depots.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}:
     *                 Allows reusing supply actors (trucks, e.g.) for
     *                 scheduling again.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}: Supply actors are scheduled only once from their
     *                 depots.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#MAX_STOPS
     *                 MAX_STOPS}: For the {@code match_supply_demand} solver
     *                 only. If specified (greater than zero), a supply actor
     *                 (truck) can at most have this many stops (demand
     *                 locations) in one round trip. Otherwise, it is
     *                 unlimited. If 'enable_truck_reuse' is on, this condition
     *                 will be applied separately at each round trip use of the
     *                 same truck.  The default value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#SERVICE_RADIUS
     *                 SERVICE_RADIUS}: For the {@code match_supply_demand} and
     *                 {@code match_pickup_dropoff} solvers only. If specified
     *                 (greater than zero), it filters the demands/picks
     *                 outside this radius centered around the supply
     *                 actor/ride's originating location (distance or time).
     *                 The default value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#PERMUTE_SUPPLIES
     *                 PERMUTE_SUPPLIES}: For the {@code match_supply_demand}
     *                 solver only. If specified (true), supply side actors are
     *                 permuted for the demand combinations during msdo
     *                 optimization - note that this option increases
     *                 optimization time significantly - use of
     *                 'max_combinations' option is recommended to prevent
     *                 prohibitively long runs
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}:
     *                 Generates sequences over supply side permutations if
     *                 total supply is less than twice the total demand
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}: Permutations are not performed, rather a
     *                 specific order of supplies based on capacity is computed
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#BATCH_TSM_MODE
     *                 BATCH_TSM_MODE}: For the {@code match_supply_demand}
     *                 solver only. When enabled, it sets the number of visits
     *                 on each demand location by a single salesman at each
     *                 trip is considered to be (one) 1, otherwise there is no
     *                 bound.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}:
     *                 Sets only one visit per demand location by a salesman
     *                 (tsm mode)
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}: No preset limit (usual msdo mode)
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#ROUND_TRIP
     *                 ROUND_TRIP}: For the {@code match_supply_demand} solver
     *                 only. When enabled, the supply will have to return back
     *                 to the origination location.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}:
     *                 The optimization is done for trips in round trip manner
     *                 always returning to originating locations
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}: Supplies do not have to come back to their
     *                 originating locations in their routes. The routes are
     *                 considered finished at the final dropoff.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#NUM_CYCLES
     *                 NUM_CYCLES}: For the {@code match_clusters} solver only.
     *                 Terminates the cluster exchange iterations across
     *                 2-step-cycles (outer loop) when quality does not improve
     *                 during iterations.  The default value is '10'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#NUM_LOOPS_PER_CYCLE
     *                 NUM_LOOPS_PER_CYCLE}: For the {@code match_clusters}
     *                 solver only. Terminates the cluster exchanges within the
     *                 first step iterations of a cycle (inner loop) unless
     *                 convergence is reached.  The default value is '10'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#NUM_OUTPUT_CLUSTERS
     *                 NUM_OUTPUT_CLUSTERS}: For the {@code match_clusters}
     *                 solver only.  Limits the output to the top
     *                 'num_output_clusters' clusters based on density. Default
     *                 value of zero outputs all clusters.  The default value
     *                 is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#MAX_NUM_CLUSTERS
     *                 MAX_NUM_CLUSTERS}: For the {@code match_clusters} solver
     *                 only. If set (value greater than zero), it terminates
     *                 when the number of clusters goes below than this number.
     *                 The default value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#CLUSTER_QUALITY_METRIC
     *                 CLUSTER_QUALITY_METRIC}: For the {@code match_clusters}
     *                 solver only. The quality metric for Louvain modularity
     *                 optimization solver.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#GIRVAN
     *                 GIRVAN}: Uses the Newman Girvan quality metric for
     *                 cluster solver
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#SPECTRAL
     *                 SPECTRAL}: Applies recursive spectral bisection (RSB)
     *                 partitioning solver
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#GIRVAN
     *                 GIRVAN}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#RESTRICTED_TYPE
     *                 RESTRICTED_TYPE}: For the {@code match_supply_demand}
     *                 solver only. Optimization is performed by restricting
     *                 routes labeled by 'MSDO_ODDEVEN_RESTRICTED' only for
     *                 this supply actor (truck) type
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#ODD ODD}:
     *                 Applies odd/even rule restrictions to odd tagged
     *                 vehicles.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#EVEN EVEN}:
     *                 Applies odd/even rule restrictions to even tagged
     *                 vehicles.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#NONE NONE}:
     *                 Does not apply odd/even rule restrictions to any
     *                 vehicles.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#NONE NONE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#SERVER_ID
     *                 SERVER_ID}: Indicates which graph server(s) to send the
     *                 request to. Default is to send to the server, amongst
     *                 those containing the corresponding graph, that has the
     *                 most computational bandwidth.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#INVERSE_SOLVE
     *                 INVERSE_SOLVE}: For the {@code match_batch_solves}
     *                 solver only. Solves source-destination pairs using
     *                 inverse shortest path solver.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}:
     *                 Solves using inverse shortest path solver.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}: Solves using direct shortest path solver.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#MIN_LOOP_LEVEL
     *                 MIN_LOOP_LEVEL}: For the {@code match_loops} solver
     *                 only. Finds closed loops around each node deducible not
     *                 less than this minimal hop (level) deep.  The default
     *                 value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#MAX_LOOP_LEVEL
     *                 MAX_LOOP_LEVEL}: For the {@code match_loops} solver
     *                 only. Finds closed loops around each node deducible not
     *                 more than this maximal hop (level) deep.  The default
     *                 value is '5'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#SEARCH_LIMIT
     *                 SEARCH_LIMIT}: For the {@code match_loops} solver only.
     *                 Searches within this limit of nodes per vertex to detect
     *                 loops. The value zero means there is no limit.  The
     *                 default value is '10000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#OUTPUT_BATCH_SIZE
     *                 OUTPUT_BATCH_SIZE}: For the {@code match_loops} solver
     *                 only. Uses this value as the batch size of the number of
     *                 loops in flushing(inserting) to the output table.  The
     *                 default value is '1000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#CHARGING_CAPACITY
     *                 CHARGING_CAPACITY}: For the {@code
     *                 match_charging_stations} solver only. This is the
     *                 maximum ev-charging capacity of a vehicle (distance in
     *                 meters or time in seconds depending on the unit of the
     *                 graph weights).  The default value is '300000.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#CHARGING_CANDIDATES
     *                 CHARGING_CANDIDATES}: For the {@code
     *                 match_charging_stations} solver only. Solver searches
     *                 for this many number of stations closest around each
     *                 base charging location found by capacity.  The default
     *                 value is '10'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#CHARGING_PENALTY
     *                 CHARGING_PENALTY}: For the {@code
     *                 match_charging_stations} solver only. This is the
     *                 penalty for full charging.  The default value is
     *                 '30000.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#MAX_HOPS
     *                 MAX_HOPS}: For the {@code match_similarity} solver only.
     *                 Searches within this maximum hops for source and target
     *                 node pairs to compute the Jaccard scores.  The default
     *                 value is '3'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRAVERSAL_NODE_LIMIT
     *                 TRAVERSAL_NODE_LIMIT}: For the {@code match_similarity}
     *                 solver only. Limits the traversal depth if it reaches
     *                 this many number of nodes.  The default value is '1000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#PAIRED_SIMILARITY
     *                 PAIRED_SIMILARITY}: For the {@code match_similarity}
     *                 solver only. If true, it computes Jaccard score between
     *                 each pair, otherwise it will compute Jaccard from the
     *                 intersection set between the source and target nodes
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FORCE_UNDIRECTED
     *                 FORCE_UNDIRECTED}: For the {@code match_pattern} solver
     *                 only. Pattern matching will be using both pattern and
     *                 graph as undirected if set to true.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MatchGraphRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  MatchGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public MatchGraphResponse matchGraph(String graphName, List<String> samplePoints, String solveMethod, String solutionTable, Map<String, String> options) throws GPUdbException {
        MatchGraphRequest actualRequest_ = new MatchGraphRequest(graphName, samplePoints, solveMethod, solutionTable, options);
        MatchGraphResponse actualResponse_ = new MatchGraphResponse();
        submitRequest("/match/graph", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Create a new empty result table (specified by {@code tableName}),
     * and insert all records from source tables
     * (specified by {@code sourceTableNames}) based on the field mapping
     * information (specified by {@code fieldMaps}).
     * <p>
     * For merge records details and examples, see
     * <a href="../../../../../concepts/merge_records/" target="_top">Merge
     * Records</a>.  For limitations, see
     * <a
     * href="../../../../../concepts/merge_records/#limitations-and-cautions"
     * target="_top">Merge Records Limitations and Cautions</a>.

     * The field map (specified by {@code fieldMaps}) holds the user-specified
     * maps
     * of target table column names to source table columns. The array of
     * {@code fieldMaps} must match one-to-one with the {@code
     * sourceTableNames},
     * e.g., there's a map present in {@code fieldMaps} for each table listed
     * in
     * {@code sourceTableNames}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  MergeRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public MergeRecordsResponse mergeRecords(MergeRecordsRequest request) throws GPUdbException {
        MergeRecordsResponse actualResponse_ = new MergeRecordsResponse();
        submitRequest("/merge/records", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Create a new empty result table (specified by {@code tableName}),
     * and insert all records from source tables
     * (specified by {@code sourceTableNames}) based on the field mapping
     * information (specified by {@code fieldMaps}).
     * <p>
     * For merge records details and examples, see
     * <a href="../../../../../concepts/merge_records/" target="_top">Merge
     * Records</a>.  For limitations, see
     * <a
     * href="../../../../../concepts/merge_records/#limitations-and-cautions"
     * target="_top">Merge Records Limitations and Cautions</a>.

     * The field map (specified by {@code fieldMaps}) holds the user-specified
     * maps
     * of target table column names to source table columns. The array of
     * {@code fieldMaps} must match one-to-one with the {@code
     * sourceTableNames},
     * e.g., there's a map present in {@code fieldMaps} for each table listed
     * in
     * {@code sourceTableNames}.
     * 
     * @param tableName  The name of the new result table for the records to be
     *                   merged into, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a> and meeting <a
     *                   href="../../../../../concepts/tables/#table-naming-criteria"
     *                   target="_top">table naming criteria</a>.  Must NOT be
     *                   an existing table.
     * @param sourceTableNames  The list of names of source tables to get the
     *                          records from, each in [schema_name.]table_name
     *                          format, using standard <a
     *                          href="../../../../../concepts/tables/#table-name-resolution"
     *                          target="_top">name resolution rules</a>.  Must
     *                          be existing table names.
     * @param fieldMaps  Contains a list of source/target column mappings, one
     *                   mapping for each source table listed in {@code
     *                   sourceTableNames} being merged into the target table
     *                   specified by {@code tableName}.  Each mapping contains
     *                   the target column names (as keys) that the data in the
     *                   mapped source columns or column <a
     *                   href="../../../../../concepts/expressions/"
     *                   target="_top">expressions</a> (as values) will be
     *                   merged into.  All of the source columns being merged
     *                   into a given target column must match in type, as that
     *                   type will determine the type of the new target column.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#CREATE_TEMP_TABLE
     *                 CREATE_TEMP_TABLE}: If {@code true}, a unique temporary
     *                 table name will be generated in the sys_temp schema and
     *                 used in place of {@code tableName}. If {@code persist}
     *                 is {@code false}, then this is always allowed even if
     *                 the caller does not have permission to create tables.
     *                 The generated name is returned in {@code
     *                 qualified_table_name}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#COLLECTION_NAME
     *                 COLLECTION_NAME}: [DEPRECATED--please specify the
     *                 containing schema for the merged table as part of {@code
     *                 tableName} and use {@link GPUdb#createSchema(String,
     *                 Map)} to create the schema if non-existent]  Name of a
     *                 schema for the newly created merged table specified by
     *                 {@code tableName}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#IS_REPLICATED
     *                 IS_REPLICATED}: Indicates the <a
     *                 href="../../../../../concepts/tables/#distribution"
     *                 target="_top">distribution scheme</a> for the data of
     *                 the merged table specified in {@code tableName}.  If
     *                 true, the table will be <a
     *                 href="../../../../../concepts/tables/#replication"
     *                 target="_top">replicated</a>.  If false, the table will
     *                 be <a
     *                 href="../../../../../concepts/tables/#random-sharding"
     *                 target="_top">randomly sharded</a>.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#TTL TTL}:
     *                 Sets the <a href="../../../../../concepts/ttl/"
     *                 target="_top">TTL</a> of the merged table specified in
     *                 {@code tableName}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#PERSIST
     *                 PERSIST}: If {@code true}, then the table specified in
     *                 {@code tableName} will be persisted and will not expire
     *                 unless a {@code ttl} is specified.   If {@code false},
     *                 then the table will be an in-memory table and will
     *                 expire unless a {@code ttl} is specified otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#CHUNK_SIZE
     *                 CHUNK_SIZE}: Indicates the number of records per chunk
     *                 to be used for the merged table specified in {@code
     *                 tableName}.
     *                         <li> {@link
     *                 com.gpudb.protocol.MergeRecordsRequest.Options#VIEW_ID
     *                 VIEW_ID}: view this result table is part of.  The
     *                 default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  MergeRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public MergeRecordsResponse mergeRecords(String tableName, List<String> sourceTableNames, List<Map<String, String>> fieldMaps, Map<String, String> options) throws GPUdbException {
        MergeRecordsRequest actualRequest_ = new MergeRecordsRequest(tableName, sourceTableNames, fieldMaps, options);
        MergeRecordsResponse actualResponse_ = new MergeRecordsResponse();
        submitRequest("/merge/records", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Update an existing graph network using given nodes, edges, weights,
     * restrictions, and options.

     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, and
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>
     * before using this endpoint.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ModifyGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ModifyGraphResponse modifyGraph(ModifyGraphRequest request) throws GPUdbException {
        ModifyGraphResponse actualResponse_ = new ModifyGraphResponse();
        submitRequest("/modify/graph", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Update an existing graph network using given nodes, edges, weights,
     * restrictions, and options.

     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, and
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>
     * before using this endpoint.
     * 
     * @param graphName  Name of the graph resource to modify.
     * @param nodes  Nodes with which to update existing {@code nodes} in graph
     *               specified by {@code graphName}. Review <a
     *               href="../../../../../graph_solver/network_graph_solver/#nodes"
     *               target="_top">Nodes</a> for more information. Nodes must
     *               be specified using <a
     *               href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *               target="_top">identifiers</a>; identifiers are grouped as
     *               <a
     *               href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *               target="_top">combinations</a>. Identifiers can be used
     *               with existing column names, e.g., 'table.column AS
     *               NODE_ID', expressions, e.g., 'ST_MAKEPOINT(column1,
     *               column2) AS NODE_WKTPOINT', or raw values, e.g., '{9, 10,
     *               11} AS NODE_ID'. If using raw values in an identifier
     *               combination, the number of values specified must match
     *               across the combination. Identifier combination(s) do not
     *               have to match the method used to create the graph, e.g.,
     *               if column names were specified to create the graph,
     *               expressions or raw values could also be used to modify the
     *               graph.
     * @param edges  Edges with which to update existing {@code edges} in graph
     *               specified by {@code graphName}. Review <a
     *               href="../../../../../graph_solver/network_graph_solver/#edges"
     *               target="_top">Edges</a> for more information. Edges must
     *               be specified using <a
     *               href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *               target="_top">identifiers</a>; identifiers are grouped as
     *               <a
     *               href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *               target="_top">combinations</a>. Identifiers can be used
     *               with existing column names, e.g., 'table.column AS
     *               EDGE_ID', expressions, e.g., 'SUBSTR(column, 1, 6) AS
     *               EDGE_NODE1_NAME', or raw values, e.g., "{'family',
     *               'coworker'} AS EDGE_LABEL". If using raw values in an
     *               identifier combination, the number of values specified
     *               must match across the combination. Identifier
     *               combination(s) do not have to match the method used to
     *               create the graph, e.g., if column names were specified to
     *               create the graph, expressions or raw values could also be
     *               used to modify the graph.
     * @param weights  Weights with which to update existing {@code weights} in
     *                 graph specified by {@code graphName}. Review <a
     *                 href="../../../../../graph_solver/network_graph_solver/#graph-weights"
     *                 target="_top">Weights</a> for more information. Weights
     *                 must be specified using <a
     *                 href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *                 target="_top">identifiers</a>; identifiers are grouped
     *                 as <a
     *                 href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *                 target="_top">combinations</a>. Identifiers can be used
     *                 with existing column names, e.g., 'table.column AS
     *                 WEIGHTS_EDGE_ID', expressions, e.g., 'ST_LENGTH(wkt) AS
     *                 WEIGHTS_VALUESPECIFIED', or raw values, e.g., '{4, 15}
     *                 AS WEIGHTS_VALUESPECIFIED'. If using raw values in an
     *                 identifier combination, the number of values specified
     *                 must match across the combination. Identifier
     *                 combination(s) do not have to match the method used to
     *                 create the graph, e.g., if column names were specified
     *                 to create the graph, expressions or raw values could
     *                 also be used to modify the graph.
     * @param restrictions  Restrictions with which to update existing {@code
     *                      restrictions} in graph specified by {@code
     *                      graphName}. Review <a
     *                      href="../../../../../graph_solver/network_graph_solver/#graph-restrictions"
     *                      target="_top">Restrictions</a> for more
     *                      information. Restrictions must be specified using
     *                      <a
     *                      href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *                      target="_top">identifiers</a>; identifiers are
     *                      grouped as <a
     *                      href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *                      target="_top">combinations</a>. Identifiers can be
     *                      used with existing column names, e.g.,
     *                      'table.column AS RESTRICTIONS_EDGE_ID',
     *                      expressions, e.g., 'column/2 AS
     *                      RESTRICTIONS_VALUECOMPARED', or raw values, e.g.,
     *                      '{0, 0, 0, 1} AS RESTRICTIONS_ONOFFCOMPARED'. If
     *                      using raw values in an identifier combination, the
     *                      number of values specified must match across the
     *                      combination. Identifier combination(s) do not have
     *                      to match the method used to create the graph, e.g.,
     *                      if column names were specified to create the graph,
     *                      expressions or raw values could also be used to
     *                      modify the graph.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#RESTRICTION_THRESHOLD_VALUE
     *                 RESTRICTION_THRESHOLD_VALUE}: Value-based restriction
     *                 comparison. Any node or edge with a
     *                 RESTRICTIONS_VALUECOMPARED value greater than the {@code
     *                 restriction_threshold_value} will not be included in the
     *                 graph.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#EXPORT_CREATE_RESULTS
     *                 EXPORT_CREATE_RESULTS}: If set to {@code true}, returns
     *                 the graph topology in the response as arrays.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#ENABLE_GRAPH_DRAW
     *                 ENABLE_GRAPH_DRAW}: If set to {@code true}, adds a
     *                 'EDGE_WKTLINE' column identifier to the specified {@code
     *                 graph_table} so the graph can be viewed via WMS; for
     *                 social and non-geospatial graphs, the 'EDGE_WKTLINE'
     *                 column identifier will be populated with spatial
     *                 coordinates derived from a flattening layout algorithm
     *                 so the graph can still be viewed.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#SAVE_PERSIST
     *                 SAVE_PERSIST}: If set to {@code true}, the graph will be
     *                 saved in the persist directory (see the <a
     *                 href="../../../../../config/" target="_top">config
     *                 reference</a> for more information). If set to {@code
     *                 false}, the graph will be removed when the graph server
     *                 is shutdown.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#ADD_TABLE_MONITOR
     *                 ADD_TABLE_MONITOR}: Adds a table monitor to every table
     *                 used in the creation of the graph; this table monitor
     *                 will trigger the graph to update dynamically upon
     *                 inserts to the source table(s). Note that upon database
     *                 restart, if {@code save_persist} is also set to {@code
     *                 true}, the graph will be fully reconstructed and the
     *                 table monitors will be reattached. For more details on
     *                 table monitors, see {@link
     *                 GPUdb#createTableMonitor(String, Map)}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#GRAPH_TABLE
     *                 GRAPH_TABLE}: If specified, the created graph is also
     *                 created as a table with the given name, in
     *                 [schema_name.]table_name format, using standard <a
     *                 href="../../../../../concepts/tables/#table-name-resolution"
     *                 target="_top">name resolution rules</a> and meeting <a
     *                 href="../../../../../concepts/tables/#table-naming-criteria"
     *                 target="_top">table naming criteria</a>.  This table
     *                 will have the following identifier columns: 'EDGE_ID',
     *                 'EDGE_NODE1_ID', 'EDGE_NODE2_ID'. If left blank, no
     *                 table is created.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#REMOVE_LABEL_ONLY
     *                 REMOVE_LABEL_ONLY}: When RESTRICTIONS on labeled
     *                 entities requested, if set to true this will NOT delete
     *                 the entity but only the label associated with the
     *                 entity. Otherwise (default), it'll delete the label AND
     *                 the entity.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#ADD_TURNS
     *                 ADD_TURNS}: Adds dummy 'pillowed' edges around
     *                 intersection nodes where there are more than three edges
     *                 so that additional weight penalties can be imposed by
     *                 the solve endpoints. (increases the total number of
     *                 edges).
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TURN_ANGLE
     *                 TURN_ANGLE}: Value in degrees modifies the thresholds
     *                 for attributing right, left, sharp turns, and
     *                 intersections. It is the vertical deviation angle from
     *                 the incoming edge to the intersection node. The larger
     *                 the value, the larger the threshold for sharp turns and
     *                 intersections; the smaller the value, the larger the
     *                 threshold for right and left turns; 0 < turn_angle < 90.
     *                 The default value is '60'.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#USE_RTREE
     *                 USE_RTREE}: Use an range tree structure to accelerate
     *                 and improve the accuracy of snapping, especially to
     *                 edges.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#LABEL_DELIMITER
     *                 LABEL_DELIMITER}: If provided the label string will be
     *                 split according to this delimiter and each sub-string
     *                 will be applied as a separate label onto the specified
     *                 edge.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#ALLOW_MULTIPLE_EDGES
     *                 ALLOW_MULTIPLE_EDGES}: Multigraph choice; allowing
     *                 multiple edges with the same node pairs if set to true,
     *                 otherwise, new edges with existing same node pairs will
     *                 not be inserted.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ModifyGraphRequest.Options#TRUE
     *                 TRUE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ModifyGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ModifyGraphResponse modifyGraph(String graphName, List<String> nodes, List<String> edges, List<String> weights, List<String> restrictions, Map<String, String> options) throws GPUdbException {
        ModifyGraphRequest actualRequest_ = new ModifyGraphRequest(graphName, nodes, edges, weights, restrictions, options);
        ModifyGraphResponse actualResponse_ = new ModifyGraphResponse();
        submitRequest("/modify/graph", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Employs a topological query on a network graph generated a-priori by
     * {@link GPUdb#createGraph(CreateGraphRequest)} and returns a list of
     * adjacent edge(s) or node(s),
     * also known as an adjacency list, depending on what's been provided to
     * the
     * endpoint; providing edges will return nodes and providing nodes will
     * return
     * edges.
     * <p>
     * To determine the node(s) or edge(s) adjacent to a value from a given
     * column,
     * provide a list of values to {@code queries}. This field can be populated
     * with
     * column values from any table as long as the type is supported by the
     * given
     * identifier. See
     * <a
     * href="../../../../../graph_solver/network_graph_solver/#query-identifiers"
     * target="_top">Query Identifiers</a>
     * for more information.
     * <p>
     * To return the adjacency list in the response, leave {@code
     * adjacencyTable}
     * empty.
     * <p>
     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, the
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>,
     * and/or some
     * <a href="../../../../../guide-tags/graph---query"
     * target="_top">/match/graph examples</a>
     * before using this endpoint.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  QueryGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public QueryGraphResponse queryGraph(QueryGraphRequest request) throws GPUdbException {
        QueryGraphResponse actualResponse_ = new QueryGraphResponse();
        submitRequest("/query/graph", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Employs a topological query on a network graph generated a-priori by
     * {@link GPUdb#createGraph(String, boolean, List, List, List, List, Map)}
     * and returns a list of adjacent edge(s) or node(s),
     * also known as an adjacency list, depending on what's been provided to
     * the
     * endpoint; providing edges will return nodes and providing nodes will
     * return
     * edges.
     * <p>
     * To determine the node(s) or edge(s) adjacent to a value from a given
     * column,
     * provide a list of values to {@code queries}. This field can be populated
     * with
     * column values from any table as long as the type is supported by the
     * given
     * identifier. See
     * <a
     * href="../../../../../graph_solver/network_graph_solver/#query-identifiers"
     * target="_top">Query Identifiers</a>
     * for more information.
     * <p>
     * To return the adjacency list in the response, leave {@code
     * adjacencyTable}
     * empty.
     * <p>
     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, the
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>,
     * and/or some
     * <a href="../../../../../guide-tags/graph---query"
     * target="_top">/match/graph examples</a>
     * before using this endpoint.
     * 
     * @param graphName  Name of the graph resource to query.
     * @param queries  Nodes or edges to be queried specified using <a
     *                 href="../../../../../graph_solver/network_graph_solver/#query-identifiers"
     *                 target="_top">query identifiers</a>. Identifiers can be
     *                 used with existing column names, e.g., 'table.column AS
     *                 QUERY_NODE_ID', raw values, e.g., '{0, 2} AS
     *                 QUERY_NODE_ID', or expressions, e.g.,
     *                 'ST_MAKEPOINT(table.x, table.y) AS QUERY_NODE_WKTPOINT'.
     *                 Multiple values can be provided as long as the same
     *                 identifier is used for all values. If using raw values
     *                 in an identifier combination, the number of values
     *                 specified must match across the combination.
     * @param restrictions  Additional restrictions to apply to the nodes/edges
     *                      of an existing graph. Restrictions must be
     *                      specified using <a
     *                      href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *                      target="_top">identifiers</a>; identifiers are
     *                      grouped as <a
     *                      href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *                      target="_top">combinations</a>. Identifiers can be
     *                      used with existing column names, e.g.,
     *                      'table.column AS RESTRICTIONS_EDGE_ID',
     *                      expressions, e.g., 'column/2 AS
     *                      RESTRICTIONS_VALUECOMPARED', or raw values, e.g.,
     *                      '{0, 0, 0, 1} AS RESTRICTIONS_ONOFFCOMPARED'. If
     *                      using raw values in an identifier combination, the
     *                      number of values specified must match across the
     *                      combination.  The default value is an empty {@link
     *                      List}.
     * @param adjacencyTable  Name of the table to store the resulting
     *                        adjacencies, in [schema_name.]table_name format,
     *                        using standard <a
     *                        href="../../../../../concepts/tables/#table-name-resolution"
     *                        target="_top">name resolution rules</a> and
     *                        meeting <a
     *                        href="../../../../../concepts/tables/#table-naming-criteria"
     *                        target="_top">table naming criteria</a>.  If left
     *                        blank, the query results are instead returned in
     *                        the response. If the 'QUERY_TARGET_NODE_LABEL' <a
     *                        href="../../../../../graph_solver/network_graph_solver/#query-identifiers"
     *                        target="_top">query identifier</a> is used in
     *                        {@code queries}, then two additional columns will
     *                        be available: 'PATH_ID' and 'RING_ID'. See <a
     *                        href="../../../../../graph_solver/network_graph_solver/#using-labels"
     *                        target="_top">Using Labels</a> for more
     *                        information.  The default value is ''.
     * @param rings  Sets the number of rings around the node to query for
     *               adjacency, with '1' being the edges directly attached to
     *               the queried node. Also known as number of hops. For
     *               example, if it is set to '2', the edge(s) directly
     *               attached to the queried node(s) will be returned; in
     *               addition, the edge(s) attached to the node(s) attached to
     *               the initial ring of edge(s) surrounding the queried
     *               node(s) will be returned. If the value is set to '0', any
     *               nodes that meet the criteria in {@code queries} and {@code
     *               restrictions} will be returned. This parameter is only
     *               applicable when querying nodes.  The default value is 1.
     * @param options  Additional parameters
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#FORCE_UNDIRECTED
     *                 FORCE_UNDIRECTED}: If set to {@code true}, all inbound
     *                 edges and outbound edges relative to the node will be
     *                 returned. If set to {@code false}, only outbound edges
     *                 relative to the node will be returned. This parameter is
     *                 only applicable if the queried graph {@code graphName}
     *                 is directed and when querying nodes. Consult <a
     *                 href="../../../../../graph_solver/network_graph_solver/#directed-graphs"
     *                 target="_top">Directed Graphs</a> for more details.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#LIMIT
     *                 LIMIT}: When specified (>0), limits the number of query
     *                 results. The size of the nodes table will be limited by
     *                 the {@code limit} value.  The default value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#OUTPUT_WKT_PATH
     *                 OUTPUT_WKT_PATH}: If true then concatenated wkt line
     *                 segments will be added as the WKT column of the
     *                 adjacency table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#AND_LABELS
     *                 AND_LABELS}: If set to {@code true}, the result of the
     *                 query has entities that satisfy all of the target
     *                 labels, instead of any.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#SERVER_ID
     *                 SERVER_ID}: Indicates which graph server(s) to send the
     *                 request to. Default is to send to the server, amongst
     *                 those containing the corresponding graph, that has the
     *                 most computational bandwidth.
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#OUTPUT_CHARN_LENGTH
     *                 OUTPUT_CHARN_LENGTH}: When specified (>0 and <=256),
     *                 limits the number of char length on the output tables
     *                 for string based nodes. The default length is 64.  The
     *                 default value is '64'.
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#FIND_COMMON_LABELS
     *                 FIND_COMMON_LABELS}: If set to true, for many-to-many
     *                 queries or multi-level traversals, it lists the common
     *                 labels between the source and target nodes and edge
     *                 labels in each path. Otherwise (zero rings), it'll list
     *                 all labels of the node(s) queried.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.QueryGraphRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  QueryGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public QueryGraphResponse queryGraph(String graphName, List<String> queries, List<String> restrictions, String adjacencyTable, int rings, Map<String, String> options) throws GPUdbException {
        QueryGraphRequest actualRequest_ = new QueryGraphRequest(graphName, queries, restrictions, adjacencyTable, rings, options);
        QueryGraphResponse actualResponse_ = new QueryGraphResponse();
        submitRequest("/query/graph", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Rebalances an existing partitioned graph.

     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, the
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>,
     * and/or some <a href="../../../../../guide-tags/graph/"
     * target="_top">graph examples</a> before
     * using this endpoint.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RepartitionGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RepartitionGraphResponse repartitionGraph(RepartitionGraphRequest request) throws GPUdbException {
        RepartitionGraphResponse actualResponse_ = new RepartitionGraphResponse();
        submitRequest("/repartition/graph", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Rebalances an existing partitioned graph.

     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, the
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>,
     * and/or some <a href="../../../../../guide-tags/graph/"
     * target="_top">graph examples</a> before
     * using this endpoint.
     * 
     * @param graphName  Name of the graph resource to rebalance.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RepartitionGraphRequest.Options#NEW_GRAPH_NAME
     *                 NEW_GRAPH_NAME}: If a non-empty value is specified, the
     *                 original graph will be kept
     *                 (non-default behaviour) and a new balanced graph will be
     *                 created under this given name.  When the
     *                 value is empty (default), the generated 'balanced' graph
     *                 will replace the original 'unbalanced'
     *                 graph under the same graph name.  The default value is
     *                 ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.RepartitionGraphRequest.Options#SOURCE_NODE
     *                 SOURCE_NODE}: The distributed shortest path solve is run
     *                 from this source node to
     *                 all the nodes in the graph to create balaced partitions
     *                 using the iso-distance levels of the
     *                 solution.  The source node is selected by the rebalance
     *                 algorithm automatically (default case when
     *                 the value is an empty string). Otherwise, the user
     *                 specified node is used as the source.  The default value
     *                 is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.RepartitionGraphRequest.Options#SQL_REQUEST_AVRO_JSON
     *                 SQL_REQUEST_AVRO_JSON}:   The default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RepartitionGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RepartitionGraphResponse repartitionGraph(String graphName, Map<String, String> options) throws GPUdbException {
        RepartitionGraphRequest actualRequest_ = new RepartitionGraphRequest(graphName, options);
        RepartitionGraphResponse actualResponse_ = new RepartitionGraphResponse();
        submitRequest("/repartition/graph", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public ReserveResourceResponse reserveResource(ReserveResourceRequest request) throws GPUdbException {
        ReserveResourceResponse actualResponse_ = new ReserveResourceResponse();
        submitRequest("/reserve/resource", request, actualResponse_, false);
        return actualResponse_;
    }



    public ReserveResourceResponse reserveResource(String component, String name, String action, long bytesRequested, long ownerId, Map<String, String> options) throws GPUdbException {
        ReserveResourceRequest actualRequest_ = new ReserveResourceRequest(component, name, action, bytesRequested, ownerId, options);
        ReserveResourceResponse actualResponse_ = new ReserveResourceResponse();
        submitRequest("/reserve/resource", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revoke user or role the specified permission on the specified object.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionResponse revokePermission(RevokePermissionRequest request) throws GPUdbException {
        RevokePermissionResponse actualResponse_ = new RevokePermissionResponse();
        submitRequest("/revoke/permission", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revoke user or role the specified permission on the specified object.
     * 
     * @param principal  Name of the user or role for which the permission is
     *                   being revoked.  Must be an existing user or role.  The
     *                   default value is ''.
     * @param object  Name of object permission is being revoked from.  It is
     *                recommended to use a fully-qualified name when possible.
     * @param objectType  The type of object being revoked
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#CONTEXT
     *                    CONTEXT}: Context
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#CREDENTIAL
     *                    CREDENTIAL}: Credential
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#DATASINK
     *                    DATASINK}: Data Sink
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#DATASOURCE
     *                    DATASOURCE}: Data Source
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#DIRECTORY
     *                    DIRECTORY}: KIFS File Directory
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#GRAPH
     *                    GRAPH}: A Graph object
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#PROC
     *                    PROC}: UDF Procedure
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#SCHEMA
     *                    SCHEMA}: Schema
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#SQL_PROC
     *                    SQL_PROC}: SQL Procedure
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#SYSTEM
     *                    SYSTEM}: System-level access
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#TABLE
     *                    TABLE}: Database Table
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.ObjectType#TABLE_MONITOR
     *                    TABLE_MONITOR}: Table monitor
     *                    </ul>
     * @param permission  Permission being revoked.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.Permission#ADMIN
     *                    ADMIN}: Full read/write and administrative access on
     *                    the object.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.Permission#CONNECT
     *                    CONNECT}: Connect access on the given data source or
     *                    data sink.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.Permission#DELETE
     *                    DELETE}: Delete rows from tables.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.Permission#EXECUTE
     *                    EXECUTE}: Ability to Execute the Procedure object.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.Permission#INSERT
     *                    INSERT}: Insert access to tables.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.Permission#READ
     *                    READ}: Ability to read, list and use the object.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.Permission#UPDATE
     *                    UPDATE}: Update access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.Permission#USER_ADMIN
     *                    USER_ADMIN}: Access to administer users and roles
     *                    that do not have system_admin permission.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionRequest.Permission#WRITE
     *                    WRITE}: Access to write, change and delete objects.
     *                    </ul>
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RevokePermissionRequest.Options#COLUMNS
     *                 COLUMNS}: Revoke table security from these columns,
     *                 comma-separated.  The default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionResponse revokePermission(String principal, String object, String objectType, String permission, Map<String, String> options) throws GPUdbException {
        RevokePermissionRequest actualRequest_ = new RevokePermissionRequest(principal, object, objectType, permission, options);
        RevokePermissionResponse actualResponse_ = new RevokePermissionResponse();
        submitRequest("/revoke/permission", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a <a
     * href="../../../../../security/sec_concepts/#security-concepts-permissions-credential"
     * target="_top">credential-level permission</a> from a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionCredentialResponse revokePermissionCredential(RevokePermissionCredentialRequest request) throws GPUdbException {
        RevokePermissionCredentialResponse actualResponse_ = new RevokePermissionCredentialResponse();
        submitRequest("/revoke/permission/credential", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a <a
     * href="../../../../../security/sec_concepts/#security-concepts-permissions-credential"
     * target="_top">credential-level permission</a> from a user or role.
     * 
     * @param name  Name of the user or role from which the permission will be
     *              revoked. Must be an existing user or role.
     * @param permission  Permission to revoke from the user or role.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionCredentialRequest.Permission#CREDENTIAL_ADMIN
     *                    CREDENTIAL_ADMIN}: Full read/write and administrative
     *                    access on the credential.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionCredentialRequest.Permission#CREDENTIAL_READ
     *                    CREDENTIAL_READ}: Ability to read and use the
     *                    credential.
     *                    </ul>
     * @param credentialName  Name of the credential on which the permission
     *                        will be revoked. Must be an existing credential,
     *                        or an empty string to revoke access on all
     *                        credentials.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionCredentialResponse revokePermissionCredential(String name, String permission, String credentialName, Map<String, String> options) throws GPUdbException {
        RevokePermissionCredentialRequest actualRequest_ = new RevokePermissionCredentialRequest(name, permission, credentialName, options);
        RevokePermissionCredentialResponse actualResponse_ = new RevokePermissionCredentialResponse();
        submitRequest("/revoke/permission/credential", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a <a href="../../../../../concepts/data_sources/"
     * target="_top">data source</a> permission from a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionDatasourceResponse revokePermissionDatasource(RevokePermissionDatasourceRequest request) throws GPUdbException {
        RevokePermissionDatasourceResponse actualResponse_ = new RevokePermissionDatasourceResponse();
        submitRequest("/revoke/permission/datasource", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a <a href="../../../../../concepts/data_sources/"
     * target="_top">data source</a> permission from a user or role.
     * 
     * @param name  Name of the user or role from which the permission will be
     *              revoked. Must be an existing user or role.
     * @param permission  Permission to revoke from the user or role
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionDatasourceRequest.Permission#ADMIN
     *                    ADMIN}: Admin access on the given data source
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionDatasourceRequest.Permission#CONNECT
     *                    CONNECT}: Connect access on the given data source
     *                    </ul>
     * @param datasourceName  Name of the data source on which the permission
     *                        will be revoked. Must be an existing data source,
     *                        or an empty string to revoke permission from all
     *                        data sources.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionDatasourceResponse revokePermissionDatasource(String name, String permission, String datasourceName, Map<String, String> options) throws GPUdbException {
        RevokePermissionDatasourceRequest actualRequest_ = new RevokePermissionDatasourceRequest(name, permission, datasourceName, options);
        RevokePermissionDatasourceResponse actualResponse_ = new RevokePermissionDatasourceResponse();
        submitRequest("/revoke/permission/datasource", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a <a href="../../../../../tools/kifs/" target="_top">KiFS</a>
     * directory-level permission from a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionDirectoryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionDirectoryResponse revokePermissionDirectory(RevokePermissionDirectoryRequest request) throws GPUdbException {
        RevokePermissionDirectoryResponse actualResponse_ = new RevokePermissionDirectoryResponse();
        submitRequest("/revoke/permission/directory", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a <a href="../../../../../tools/kifs/" target="_top">KiFS</a>
     * directory-level permission from a user or role.
     * 
     * @param name  Name of the user or role from which the permission will be
     *              revoked. Must be an existing user or role.
     * @param permission  Permission to revoke from the user or role.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionDirectoryRequest.Permission#DIRECTORY_READ
     *                    DIRECTORY_READ}: For files in the directory, access
     *                    to list files, download files, or use files in server
     *                    side functions
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionDirectoryRequest.Permission#DIRECTORY_WRITE
     *                    DIRECTORY_WRITE}: Access to upload files to, or
     *                    delete files from, the directory. A user or role with
     *                    write access automatically has read acceess
     *                    </ul>
     * @param directoryName  Name of the KiFS directory to which the permission
     *                       revokes access
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionDirectoryResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionDirectoryResponse revokePermissionDirectory(String name, String permission, String directoryName, Map<String, String> options) throws GPUdbException {
        RevokePermissionDirectoryRequest actualRequest_ = new RevokePermissionDirectoryRequest(name, permission, directoryName, options);
        RevokePermissionDirectoryResponse actualResponse_ = new RevokePermissionDirectoryResponse();
        submitRequest("/revoke/permission/directory", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a proc-level permission from a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionProcResponse revokePermissionProc(RevokePermissionProcRequest request) throws GPUdbException {
        RevokePermissionProcResponse actualResponse_ = new RevokePermissionProcResponse();
        submitRequest("/revoke/permission/proc", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a proc-level permission from a user or role.
     * 
     * @param name  Name of the user or role from which the permission will be
     *              revoked. Must be an existing user or role.
     * @param permission  Permission to revoke from the user or role.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionProcRequest.Permission#PROC_ADMIN
     *                    PROC_ADMIN}: Admin access to the proc.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionProcRequest.Permission#PROC_EXECUTE
     *                    PROC_EXECUTE}: Execute access to the proc.
     *                    </ul>
     * @param procName  Name of the proc to which the permission grants access.
     *                  Must be an existing proc, or an empty string if the
     *                  permission grants access to all procs.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionProcResponse revokePermissionProc(String name, String permission, String procName, Map<String, String> options) throws GPUdbException {
        RevokePermissionProcRequest actualRequest_ = new RevokePermissionProcRequest(name, permission, procName, options);
        RevokePermissionProcResponse actualResponse_ = new RevokePermissionProcResponse();
        submitRequest("/revoke/permission/proc", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a system-level permission from a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionSystemResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionSystemResponse revokePermissionSystem(RevokePermissionSystemRequest request) throws GPUdbException {
        RevokePermissionSystemResponse actualResponse_ = new RevokePermissionSystemResponse();
        submitRequest("/revoke/permission/system", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a system-level permission from a user or role.
     * 
     * @param name  Name of the user or role from which the permission will be
     *              revoked. Must be an existing user or role.
     * @param permission  Permission to revoke from the user or role.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionSystemRequest.Permission#SYSTEM_ADMIN
     *                    SYSTEM_ADMIN}: Full access to all data and system
     *                    functions.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionSystemRequest.Permission#SYSTEM_USER_ADMIN
     *                    SYSTEM_USER_ADMIN}: Access to administer users and
     *                    roles that do not have system_admin permission.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionSystemRequest.Permission#SYSTEM_WRITE
     *                    SYSTEM_WRITE}: Read and write access to all tables.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionSystemRequest.Permission#SYSTEM_READ
     *                    SYSTEM_READ}: Read-only access to all tables.
     *                    </ul>
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionSystemResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionSystemResponse revokePermissionSystem(String name, String permission, Map<String, String> options) throws GPUdbException {
        RevokePermissionSystemRequest actualRequest_ = new RevokePermissionSystemRequest(name, permission, options);
        RevokePermissionSystemResponse actualResponse_ = new RevokePermissionSystemResponse();
        submitRequest("/revoke/permission/system", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a table-level permission from a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionTableResponse revokePermissionTable(RevokePermissionTableRequest request) throws GPUdbException {
        RevokePermissionTableResponse actualResponse_ = new RevokePermissionTableResponse();
        submitRequest("/revoke/permission/table", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes a table-level permission from a user or role.
     * 
     * @param name  Name of the user or role from which the permission will be
     *              revoked. Must be an existing user or role.
     * @param permission  Permission to revoke from the user or role.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionTableRequest.Permission#TABLE_ADMIN
     *                    TABLE_ADMIN}: Full read/write and administrative
     *                    access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionTableRequest.Permission#TABLE_INSERT
     *                    TABLE_INSERT}: Insert access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionTableRequest.Permission#TABLE_UPDATE
     *                    TABLE_UPDATE}: Update access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionTableRequest.Permission#TABLE_DELETE
     *                    TABLE_DELETE}: Delete access to the table.
     *                            <li> {@link
     *                    com.gpudb.protocol.RevokePermissionTableRequest.Permission#TABLE_READ
     *                    TABLE_READ}: Read access to the table.
     *                    </ul>
     * @param tableName  Name of the table to which the permission grants
     *                   access, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing table, view or schema.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RevokePermissionTableRequest.Options#COLUMNS
     *                 COLUMNS}: Apply security to these columns,
     *                 comma-separated.  The default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokePermissionTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokePermissionTableResponse revokePermissionTable(String name, String permission, String tableName, Map<String, String> options) throws GPUdbException {
        RevokePermissionTableRequest actualRequest_ = new RevokePermissionTableRequest(name, permission, tableName, options);
        RevokePermissionTableResponse actualResponse_ = new RevokePermissionTableResponse();
        submitRequest("/revoke/permission/table", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes membership in a role from a user or role.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokeRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokeRoleResponse revokeRole(RevokeRoleRequest request) throws GPUdbException {
        RevokeRoleResponse actualResponse_ = new RevokeRoleResponse();
        submitRequest("/revoke/role", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Revokes membership in a role from a user or role.
     * 
     * @param role  Name of the role in which membership will be revoked. Must
     *              be an existing role.
     * @param member  Name of the user or role that will be revoked membership
     *                in {@code role}. Must be an existing user or role.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  RevokeRoleResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public RevokeRoleResponse revokeRole(String role, String member, Map<String, String> options) throws GPUdbException {
        RevokeRoleRequest actualRequest_ = new RevokeRoleRequest(role, member, options);
        RevokeRoleResponse actualResponse_ = new RevokeRoleResponse();
        submitRequest("/revoke/role", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public ShowContainerRegistryResponse showContainerRegistry(ShowContainerRegistryRequest request) throws GPUdbException {
        ShowContainerRegistryResponse actualResponse_ = new ShowContainerRegistryResponse();
        submitRequest("/show/container/registry", request, actualResponse_, false);
        return actualResponse_;
    }



    public ShowContainerRegistryResponse showContainerRegistry(String registryName, Map<String, String> options) throws GPUdbException {
        ShowContainerRegistryRequest actualRequest_ = new ShowContainerRegistryRequest(registryName, options);
        ShowContainerRegistryResponse actualResponse_ = new ShowContainerRegistryResponse();
        submitRequest("/show/container/registry", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about a specified <a
     * href="../../../../../concepts/credentials/" target="_top">credential</a>
     * or all credentials.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowCredentialResponse showCredential(ShowCredentialRequest request) throws GPUdbException {
        ShowCredentialResponse actualResponse_ = new ShowCredentialResponse();
        submitRequest("/show/credential", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about a specified <a
     * href="../../../../../concepts/credentials/" target="_top">credential</a>
     * or all credentials.
     * 
     * @param credentialName  Name of the credential on which to retrieve
     *                        information. The name must refer to a currently
     *                        existing credential. If '*' is specified,
     *                        information about all credentials will be
     *                        returned.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowCredentialResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowCredentialResponse showCredential(String credentialName, Map<String, String> options) throws GPUdbException {
        ShowCredentialRequest actualRequest_ = new ShowCredentialRequest(credentialName, options);
        ShowCredentialResponse actualResponse_ = new ShowCredentialResponse();
        submitRequest("/show/credential", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about a specified <a
     * href="../../../../../concepts/data_sinks/" target="_top">data sink</a>
     * or all data sinks.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowDatasinkResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowDatasinkResponse showDatasink(ShowDatasinkRequest request) throws GPUdbException {
        ShowDatasinkResponse actualResponse_ = new ShowDatasinkResponse();
        submitRequest("/show/datasink", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about a specified <a
     * href="../../../../../concepts/data_sinks/" target="_top">data sink</a>
     * or all data sinks.
     * 
     * @param name  Name of the data sink for which to retrieve information.
     *              The name must refer to a currently existing data sink. If
     *              '*' is specified, information about all data sinks will be
     *              returned.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowDatasinkResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowDatasinkResponse showDatasink(String name, Map<String, String> options) throws GPUdbException {
        ShowDatasinkRequest actualRequest_ = new ShowDatasinkRequest(name, options);
        ShowDatasinkResponse actualResponse_ = new ShowDatasinkResponse();
        submitRequest("/show/datasink", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about a specified <a
     * href="../../../../../concepts/data_sources/" target="_top">data
     * source</a> or all data sources.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowDatasourceResponse showDatasource(ShowDatasourceRequest request) throws GPUdbException {
        ShowDatasourceResponse actualResponse_ = new ShowDatasourceResponse();
        submitRequest("/show/datasource", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about a specified <a
     * href="../../../../../concepts/data_sources/" target="_top">data
     * source</a> or all data sources.
     * 
     * @param name  Name of the data source for which to retrieve information.
     *              The name must refer to a currently existing data source. If
     *              '*' is specified, information about all data sources will
     *              be returned.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowDatasourceResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowDatasourceResponse showDatasource(String name, Map<String, String> options) throws GPUdbException {
        ShowDatasourceRequest actualRequest_ = new ShowDatasourceRequest(name, options);
        ShowDatasourceResponse actualResponse_ = new ShowDatasourceResponse();
        submitRequest("/show/datasource", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about directories in <a
     * href="../../../../../tools/kifs/" target="_top">KiFS</a>. Can be used to
     * show a single directory, or all directories.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowDirectoriesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowDirectoriesResponse showDirectories(ShowDirectoriesRequest request) throws GPUdbException {
        ShowDirectoriesResponse actualResponse_ = new ShowDirectoriesResponse();
        submitRequest("/show/directories", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about directories in <a
     * href="../../../../../tools/kifs/" target="_top">KiFS</a>. Can be used to
     * show a single directory, or all directories.
     * 
     * @param directoryName  The KiFS directory name to show. If empty, shows
     *                       all directories.  The default value is ''.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowDirectoriesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowDirectoriesResponse showDirectories(String directoryName, Map<String, String> options) throws GPUdbException {
        ShowDirectoriesRequest actualRequest_ = new ShowDirectoriesRequest(directoryName, options);
        ShowDirectoriesResponse actualResponse_ = new ShowDirectoriesResponse();
        submitRequest("/show/directories", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about a specified <a
     * href="../../../../../concepts/udf/" target="_top">user-defined
     * function</a> (UDF) environment or all environments.
     * Returns detailed information about existing environments.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowEnvironmentResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowEnvironmentResponse showEnvironment(ShowEnvironmentRequest request) throws GPUdbException {
        ShowEnvironmentResponse actualResponse_ = new ShowEnvironmentResponse();
        submitRequest("/show/environment", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about a specified <a
     * href="../../../../../concepts/udf/" target="_top">user-defined
     * function</a> (UDF) environment or all environments.
     * Returns detailed information about existing environments.
     * 
     * @param environmentName  Name of the environment on which to retrieve
     *                         information. The name must refer to a currently
     *                         existing environment. If '*' or an empty value
     *                         is specified, information about all environments
     *                         will be returned.  The default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowEnvironmentRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code true} and if the
     *                 environment specified in {@code environmentName} does
     *                 not exist, no error is returned. If {@code false} and if
     *                 the environment specified in {@code environmentName}
     *                 does not exist, then an error is returned.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowEnvironmentRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowEnvironmentRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowEnvironmentRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowEnvironmentResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowEnvironmentResponse showEnvironment(String environmentName, Map<String, String> options) throws GPUdbException {
        ShowEnvironmentRequest actualRequest_ = new ShowEnvironmentRequest(environmentName, options);
        ShowEnvironmentResponse actualResponse_ = new ShowEnvironmentResponse();
        submitRequest("/show/environment", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about files in <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>. Can be used for individual files, or to show all
     * files in a given directory.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowFilesResponse showFiles(ShowFilesRequest request) throws GPUdbException {
        ShowFilesResponse actualResponse_ = new ShowFilesResponse();
        submitRequest("/show/files", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about files in <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>. Can be used for individual files, or to show all
     * files in a given directory.
     * 
     * @param paths  File paths to show. Each path can be a KiFS directory
     *               name, or a full path to a KiFS file. File paths may
     *               contain wildcard characters after the KiFS directory
     *               delimeter.
     *               Accepted wildcard characters are asterisk (*) to represent
     *               any string of zero or more characters, and question mark
     *               (?) to indicate a single character.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowFilesResponse showFiles(List<String> paths, Map<String, String> options) throws GPUdbException {
        ShowFilesRequest actualRequest_ = new ShowFilesRequest(paths, options);
        ShowFilesResponse actualResponse_ = new ShowFilesResponse();
        submitRequest("/show/files", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public ShowFunctionsResponse showFunctions(ShowFunctionsRequest request) throws GPUdbException {
        ShowFunctionsResponse actualResponse_ = new ShowFunctionsResponse();
        submitRequest("/show/functions", request, actualResponse_, false);
        return actualResponse_;
    }



    public ShowFunctionsResponse showFunctions(List<String> names, Map<String, String> options) throws GPUdbException {
        ShowFunctionsRequest actualRequest_ = new ShowFunctionsRequest(names, options);
        ShowFunctionsResponse actualResponse_ = new ShowFunctionsResponse();
        submitRequest("/show/functions", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information and characteristics of graphs that exist on the graph
     * server.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowGraphResponse showGraph(ShowGraphRequest request) throws GPUdbException {
        ShowGraphResponse actualResponse_ = new ShowGraphResponse();
        submitRequest("/show/graph", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information and characteristics of graphs that exist on the graph
     * server.
     * 
     * @param graphName  Name of the graph on which to retrieve information. If
     *                   left as the default value, information about all
     *                   graphs is returned.  The default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowGraphRequest.Options#SHOW_ORIGINAL_REQUEST
     *                 SHOW_ORIGINAL_REQUEST}: If set to {@code true}, the
     *                 request that was originally used to create the graph is
     *                 also returned as JSON.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowGraphRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowGraphRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowGraphRequest.Options#SERVER_ID
     *                 SERVER_ID}: Indicates which graph server(s) to send the
     *                 request to. Default is to send to get information about
     *                 all the servers.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowGraphResponse showGraph(String graphName, Map<String, String> options) throws GPUdbException {
        ShowGraphRequest actualRequest_ = new ShowGraphRequest(graphName, options);
        ShowGraphResponse actualResponse_ = new ShowGraphResponse();
        submitRequest("/show/graph", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public ShowGraphGrammarResponse showGraphGrammar(ShowGraphGrammarRequest request) throws GPUdbException {
        ShowGraphGrammarResponse actualResponse_ = new ShowGraphGrammarResponse();
        submitRequest("/show/graph/grammar", request, actualResponse_, false);
        return actualResponse_;
    }



    public ShowGraphGrammarResponse showGraphGrammar(Map<String, String> options) throws GPUdbException {
        ShowGraphGrammarRequest actualRequest_ = new ShowGraphGrammarRequest(options);
        ShowGraphGrammarResponse actualResponse_ = new ShowGraphGrammarResponse();
        submitRequest("/show/graph/grammar", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public ShowModelResponse showModel(ShowModelRequest request) throws GPUdbException {
        ShowModelResponse actualResponse_ = new ShowModelResponse();
        submitRequest("/show/model", request, actualResponse_, false);
        return actualResponse_;
    }



    public ShowModelResponse showModel(List<String> modelNames, Map<String, String> options) throws GPUdbException {
        ShowModelRequest actualRequest_ = new ShowModelRequest(modelNames, options);
        ShowModelResponse actualResponse_ = new ShowModelResponse();
        submitRequest("/show/model", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about a proc.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowProcResponse showProc(ShowProcRequest request) throws GPUdbException {
        ShowProcResponse actualResponse_ = new ShowProcResponse();
        submitRequest("/show/proc", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about a proc.
     * 
     * @param procName  Name of the proc to show information about. If
     *                  specified, must be the name of a currently existing
     *                  proc. If not specified, information about all procs
     *                  will be returned.  The default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowProcRequest.Options#INCLUDE_FILES
     *                 INCLUDE_FILES}: If set to {@code true}, the files that
     *                 make up the proc will be returned. If set to {@code
     *                 false}, the files will not be returned.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowProcRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowProcRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowProcRequest.Options#FALSE FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowProcResponse showProc(String procName, Map<String, String> options) throws GPUdbException {
        ShowProcRequest actualRequest_ = new ShowProcRequest(procName, options);
        ShowProcResponse actualResponse_ = new ShowProcResponse();
        submitRequest("/show/proc", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows the statuses of running or completed proc instances. Results are
     * grouped by run ID (as returned from {@link
     * GPUdb#executeProc(ExecuteProcRequest)}) and data segment ID (each
     * invocation of the proc command on a data segment is assigned a data
     * segment ID).
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowProcStatusResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowProcStatusResponse showProcStatus(ShowProcStatusRequest request) throws GPUdbException {
        ShowProcStatusResponse actualResponse_ = new ShowProcStatusResponse();
        submitRequest("/show/proc/status", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows the statuses of running or completed proc instances. Results are
     * grouped by run ID (as returned from {@link GPUdb#executeProc(String,
     * Map, Map, List, Map, List, Map)}) and data segment ID (each invocation
     * of the proc command on a data segment is assigned a data segment ID).
     * 
     * @param runId  The run ID of a specific proc instance for which the
     *               status will be returned. If a proc with a matching run ID
     *               is not found, the response will be empty. If not
     *               specified, the statuses of all executed proc instances
     *               will be returned.  The default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowProcStatusRequest.Options#CLEAR_COMPLETE
     *                 CLEAR_COMPLETE}: If set to {@code true}, if a proc
     *                 instance has completed (either successfully or
     *                 unsuccessfully) then its status will be cleared and no
     *                 longer returned in subsequent calls.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowProcStatusRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowProcStatusRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowProcStatusRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowProcStatusRequest.Options#RUN_TAG
     *                 RUN_TAG}: If {@code runId} is specified, return the
     *                 status for a proc instance that has a matching run ID
     *                 and a matching run tag that was provided to {@link
     *                 GPUdb#executeProc(String, Map, Map, List, Map, List,
     *                 Map)}. If {@code runId} is not specified, return
     *                 statuses for all proc instances where a matching run tag
     *                 was provided to {@link GPUdb#executeProc(String, Map,
     *                 Map, List, Map, List, Map)}.  The default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowProcStatusResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowProcStatusResponse showProcStatus(String runId, Map<String, String> options) throws GPUdbException {
        ShowProcStatusRequest actualRequest_ = new ShowProcStatusRequest(runId, options);
        ShowProcStatusResponse actualResponse_ = new ShowProcStatusResponse();
        submitRequest("/show/proc/status", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Returns information about the internal sub-components (tiered objects)
     * which use resources of the system. The request can either return results
     * from
     * actively used objects (default) or it can be used to query the status of
     * the
     * objects of a given list of tables.
     * Returns detailed information about the requested resource objects.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowResourceObjectsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowResourceObjectsResponse showResourceObjects(ShowResourceObjectsRequest request) throws GPUdbException {
        ShowResourceObjectsResponse actualResponse_ = new ShowResourceObjectsResponse();
        submitRequest("/show/resource/objects", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Returns information about the internal sub-components (tiered objects)
     * which use resources of the system. The request can either return results
     * from
     * actively used objects (default) or it can be used to query the status of
     * the
     * objects of a given list of tables.
     * Returns detailed information about the requested resource objects.
     * 
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#TIERS
     *                 TIERS}: Comma-separated list of tiers to query, leave
     *                 blank for all tiers.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#EXPRESSION
     *                 EXPRESSION}: An expression to filter the returned
     *                 objects. Expression is
     *                 limited to the following operators:
     *                 =,!=,<,<=,>,>=,+,-,*,AND,OR,LIKE. For details see
     *                 <a href="../../../../../concepts/expressions/"
     *                 target="_top">Expressions</a>. To use a more complex
     *                 expression, query the
     *                 ki_catalog.ki_tiered_objects table directly.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#ORDER_BY
     *                 ORDER_BY}: Single column to be sorted by as well as the
     *                 sort direction, e.g., 'size asc'.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#SIZE
     *                 SIZE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#ID
     *                 ID}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#PRIORITY
     *                 PRIORITY}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#TIER
     *                 TIER}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#EVICTABLE
     *                 EVICTABLE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#OWNER_RESOURCE_GROUP
     *                 OWNER_RESOURCE_GROUP}
     *                 </ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#LIMIT
     *                 LIMIT}: An integer indicating the maximum number of
     *                 results to be
     *                 returned, per rank, or (-1) to indicate that the maximum
     *                 number of results allowed by the server
     *                 should be returned.  The number of records returned will
     *                 never exceed the server's own limit,
     *                 defined by the <a
     *                 href="../../../../../config/#config-main-general"
     *                 target="_top">max_get_records_size</a> parameter in the
     *                 server
     *                 configuration.  The default value is '100'.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceObjectsRequest.Options#TABLE_NAMES
     *                 TABLE_NAMES}: Comma-separated list of tables to restrict
     *                 the results to. Use '*' to show all tables.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowResourceObjectsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowResourceObjectsResponse showResourceObjects(Map<String, String> options) throws GPUdbException {
        ShowResourceObjectsRequest actualRequest_ = new ShowResourceObjectsRequest(options);
        ShowResourceObjectsResponse actualResponse_ = new ShowResourceObjectsResponse();
        submitRequest("/show/resource/objects", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Requests various statistics for storage/memory tiers and resource
     * groups.
     * Returns statistics on a per-rank basis.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowResourceStatisticsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowResourceStatisticsResponse showResourceStatistics(ShowResourceStatisticsRequest request) throws GPUdbException {
        ShowResourceStatisticsResponse actualResponse_ = new ShowResourceStatisticsResponse();
        submitRequest("/show/resource/statistics", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Requests various statistics for storage/memory tiers and resource
     * groups.
     * Returns statistics on a per-rank basis.
     * 
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowResourceStatisticsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowResourceStatisticsResponse showResourceStatistics(Map<String, String> options) throws GPUdbException {
        ShowResourceStatisticsRequest actualRequest_ = new ShowResourceStatisticsRequest(options);
        ShowResourceStatisticsResponse actualResponse_ = new ShowResourceStatisticsResponse();
        submitRequest("/show/resource/statistics", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Requests resource group properties.
     * Returns detailed information about the requested resource groups.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowResourceGroupsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowResourceGroupsResponse showResourceGroups(ShowResourceGroupsRequest request) throws GPUdbException {
        ShowResourceGroupsResponse actualResponse_ = new ShowResourceGroupsResponse();
        submitRequest("/show/resourcegroups", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Requests resource group properties.
     * Returns detailed information about the requested resource groups.
     * 
     * @param names  List of names of groups to be shown. A single entry with
     *               an empty string returns all groups.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#SHOW_DEFAULT_VALUES
     *                 SHOW_DEFAULT_VALUES}: If {@code true} include values of
     *                 fields that are based on the default resource group.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#SHOW_DEFAULT_GROUP
     *                 SHOW_DEFAULT_GROUP}: If {@code true} include the default
     *                 and system resource groups in the response. This value
     *                 defaults to false if an explicit list of group names is
     *                 provided, and true otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#SHOW_TIER_USAGE
     *                 SHOW_TIER_USAGE}: If {@code true} include the resource
     *                 group usage on the worker ranks in the response.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowResourceGroupsRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowResourceGroupsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowResourceGroupsResponse showResourceGroups(List<String> names, Map<String, String> options) throws GPUdbException {
        ShowResourceGroupsRequest actualRequest_ = new ShowResourceGroupsRequest(names, options);
        ShowResourceGroupsResponse actualResponse_ = new ShowResourceGroupsResponse();
        submitRequest("/show/resourcegroups", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves information about a <a href="../../../../../concepts/schemas/"
     * target="_top">schema</a> (or all schemas), as specified in {@code
     * schemaName}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSchemaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSchemaResponse showSchema(ShowSchemaRequest request) throws GPUdbException {
        ShowSchemaResponse actualResponse_ = new ShowSchemaResponse();
        submitRequest("/show/schema", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves information about a <a href="../../../../../concepts/schemas/"
     * target="_top">schema</a> (or all schemas), as specified in {@code
     * schemaName}.
     * 
     * @param schemaName  Name of the schema for which to retrieve the
     *                    information. If blank, then info for all schemas is
     *                    returned.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowSchemaRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code false} will return an
     *                 error if the provided {@code schemaName} does not exist.
     *                 If {@code true} then it will return an empty result if
     *                 the provided {@code schemaName} does not exist.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowSchemaRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowSchemaRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowSchemaRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSchemaResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSchemaResponse showSchema(String schemaName, Map<String, String> options) throws GPUdbException {
        ShowSchemaRequest actualRequest_ = new ShowSchemaRequest(schemaName, options);
        ShowSchemaResponse actualResponse_ = new ShowSchemaResponse();
        submitRequest("/show/schema", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows security information relating to users and/or roles. If the caller
     * is not a system administrator, only information relating to the caller
     * and their roles is returned.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSecurityResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSecurityResponse showSecurity(ShowSecurityRequest request) throws GPUdbException {
        ShowSecurityResponse actualResponse_ = new ShowSecurityResponse();
        submitRequest("/show/security", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows security information relating to users and/or roles. If the caller
     * is not a system administrator, only information relating to the caller
     * and their roles is returned.
     * 
     * @param names  A list of names of users and/or roles about which security
     *               information is requested. If none are provided,
     *               information about all users and roles will be returned.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowSecurityRequest.Options#SHOW_CURRENT_USER
     *                 SHOW_CURRENT_USER}: If {@code true}, returns only
     *                 security information for the current user.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowSecurityRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowSecurityRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowSecurityRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSecurityResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSecurityResponse showSecurity(List<String> names, Map<String, String> options) throws GPUdbException {
        ShowSecurityRequest actualRequest_ = new ShowSecurityRequest(names, options);
        ShowSecurityResponse actualResponse_ = new ShowSecurityResponse();
        submitRequest("/show/security", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about SQL procedures, including the full definition of
     * each requested procedure.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSqlProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSqlProcResponse showSqlProc(ShowSqlProcRequest request) throws GPUdbException {
        ShowSqlProcResponse actualResponse_ = new ShowSqlProcResponse();
        submitRequest("/show/sql/proc", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Shows information about SQL procedures, including the full definition of
     * each requested procedure.
     * 
     * @param procedureName  Name of the procedure for which to retrieve the
     *                       information. If blank, then information about all
     *                       procedures is returned.  The default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowSqlProcRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code true}, no error will
     *                 be returned if the requested procedure does not exist.
     *                 If {@code false}, an error will be returned if the
     *                 requested procedure does not exist.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowSqlProcRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowSqlProcRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowSqlProcRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSqlProcResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSqlProcResponse showSqlProc(String procedureName, Map<String, String> options) throws GPUdbException {
        ShowSqlProcRequest actualRequest_ = new ShowSqlProcRequest(procedureName, options);
        ShowSqlProcResponse actualResponse_ = new ShowSqlProcResponse();
        submitRequest("/show/sql/proc", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves the collected column statistics for the specified table(s).
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowStatisticsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowStatisticsResponse showStatistics(ShowStatisticsRequest request) throws GPUdbException {
        ShowStatisticsResponse actualResponse_ = new ShowStatisticsResponse();
        submitRequest("/show/statistics", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves the collected column statistics for the specified table(s).
     * 
     * @param tableNames  Names of tables whose metadata will be fetched, each
     *                    in [schema_name.]table_name format, using standard <a
     *                    href="../../../../../concepts/tables/#table-name-resolution"
     *                    target="_top">name resolution rules</a>.  All
     *                    provided tables must exist, or an error is returned.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowStatisticsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowStatisticsResponse showStatistics(List<String> tableNames, Map<String, String> options) throws GPUdbException {
        ShowStatisticsRequest actualRequest_ = new ShowStatisticsRequest(tableNames, options);
        ShowStatisticsResponse actualResponse_ = new ShowStatisticsResponse();
        submitRequest("/show/statistics", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Returns server configuration and version related information to the
     * caller. The admin tool uses it to present server related information to
     * the user.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSystemPropertiesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSystemPropertiesResponse showSystemProperties(ShowSystemPropertiesRequest request) throws GPUdbException {
        ShowSystemPropertiesResponse actualResponse_ = new ShowSystemPropertiesResponse();
        submitRequest("/show/system/properties", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Returns server configuration and version related information to the
     * caller. The admin tool uses it to present server related information to
     * the user.
     * 
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowSystemPropertiesRequest.Options#PROPERTIES
     *                 PROPERTIES}: A list of comma separated names of
     *                 properties requested. If not specified, all properties
     *                 will be returned.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSystemPropertiesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSystemPropertiesResponse showSystemProperties(Map<String, String> options) throws GPUdbException {
        ShowSystemPropertiesRequest actualRequest_ = new ShowSystemPropertiesRequest(options);
        ShowSystemPropertiesResponse actualResponse_ = new ShowSystemPropertiesResponse();
        submitRequest("/show/system/properties", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Provides server configuration and health related status to the caller.
     * The admin tool uses it to present server related information to the
     * user.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSystemStatusResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSystemStatusResponse showSystemStatus(ShowSystemStatusRequest request) throws GPUdbException {
        ShowSystemStatusResponse actualResponse_ = new ShowSystemStatusResponse();
        submitRequest("/show/system/status", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Provides server configuration and health related status to the caller.
     * The admin tool uses it to present server related information to the
     * user.
     * 
     * @param options  Optional parameters, currently unused.  The default
     *                 value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSystemStatusResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSystemStatusResponse showSystemStatus(Map<String, String> options) throws GPUdbException {
        ShowSystemStatusRequest actualRequest_ = new ShowSystemStatusRequest(options);
        ShowSystemStatusResponse actualResponse_ = new ShowSystemStatusResponse();
        submitRequest("/show/system/status", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Returns the last 100 database requests along with the request timing and
     * internal job id. The admin tool uses it to present request timing
     * information to the user.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSystemTimingResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSystemTimingResponse showSystemTiming(ShowSystemTimingRequest request) throws GPUdbException {
        ShowSystemTimingResponse actualResponse_ = new ShowSystemTimingResponse();
        submitRequest("/show/system/timing", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Returns the last 100 database requests along with the request timing and
     * internal job id. The admin tool uses it to present request timing
     * information to the user.
     * 
     * @param options  Optional parameters, currently unused.  The default
     *                 value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowSystemTimingResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowSystemTimingResponse showSystemTiming(Map<String, String> options) throws GPUdbException {
        ShowSystemTimingRequest actualRequest_ = new ShowSystemTimingRequest(options);
        ShowSystemTimingResponse actualResponse_ = new ShowSystemTimingResponse();
        submitRequest("/show/system/timing", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves detailed information about a table, view, or schema,
     * specified in {@code tableName}. If the supplied {@code tableName} is a
     * schema the call can return information about either the schema itself or
     * the
     * tables and views it contains. If {@code tableName} is empty, information
     * about
     * all schemas will be returned.
     * <p>
     * If the option {@code get_sizes} is set to
     * {@code true}, then the number of records
     * in each table is returned (in {@code sizes} and
     * {@code fullSizes}), along with the total number of objects across all
     * requested tables (in {@code totalSize} and {@code totalFullSize}).
     * <p>
     * For a schema, setting the {@code show_children} option to
     * {@code false} returns only information
     * about the schema itself; setting {@code show_children} to
     * {@code true} returns a list of tables and
     * views contained in the schema, along with their corresponding detail.
     * <p>
     * To retrieve a list of every table, view, and schema in the database, set
     * {@code tableName} to '*' and {@code show_children} to
     * {@code true}.  When doing this, the
     * returned {@code totalSize} and {@code totalFullSize} will not include
     * the sizes of
     * non-base tables (e.g., filters, views, joins, etc.).
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTableResponse showTable(ShowTableRequest request) throws GPUdbException {
        ShowTableResponse actualResponse_ = new ShowTableResponse();
        submitRequest("/show/table", request, actualResponse_, false);

        for (int i_ = 0; i_ < actualResponse_.getTypeIds().size(); ++i_) {
            if( actualResponse_.getTypeSchemas().get(i_).isEmpty() ) {
                // Skip generating a type if no schema is available
                continue;
            }
            setTypeDescriptorIfMissing(actualResponse_.getTypeIds().get(i_), actualResponse_.getTypeLabels().get(i_), actualResponse_.getTypeSchemas().get(i_), actualResponse_.getProperties().get(i_));
        }

        return actualResponse_;
    }



    /**
     * Retrieves detailed information about a table, view, or schema,
     * specified in {@code tableName}. If the supplied {@code tableName} is a
     * schema the call can return information about either the schema itself or
     * the
     * tables and views it contains. If {@code tableName} is empty, information
     * about
     * all schemas will be returned.
     * <p>
     * If the option {@code get_sizes} is set to
     * {@code true}, then the number of records
     * in each table is returned (in {@code sizes} and
     * {@code fullSizes}), along with the total number of objects across all
     * requested tables (in {@code totalSize} and {@code totalFullSize}).
     * <p>
     * For a schema, setting the {@code show_children} option to
     * {@code false} returns only information
     * about the schema itself; setting {@code show_children} to
     * {@code true} returns a list of tables and
     * views contained in the schema, along with their corresponding detail.
     * <p>
     * To retrieve a list of every table, view, and schema in the database, set
     * {@code tableName} to '*' and {@code show_children} to
     * {@code true}.  When doing this, the
     * returned {@code totalSize} and {@code totalFullSize} will not include
     * the sizes of
     * non-base tables (e.g., filters, views, joins, etc.).
     * 
     * @param tableName  Name of the table for which to retrieve the
     *                   information, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  If blank,
     *                   then returns information about all tables and views.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FORCE_SYNCHRONOUS
     *                 FORCE_SYNCHRONOUS}: If {@code true} then the table sizes
     *                 will wait for read lock before returning.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#GET_SIZES
     *                 GET_SIZES}: If {@code true} then the number of records
     *                 in each table, along with a cumulative count, will be
     *                 returned; blank, otherwise.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#GET_CACHED_SIZES
     *                 GET_CACHED_SIZES}: If {@code true} then the number of
     *                 records in each table, along with a cumulative count,
     *                 will be returned; blank, otherwise. This version will
     *                 return the sizes cached at rank 0, which may be stale if
     *                 there is a multihead insert occuring.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#SHOW_CHILDREN
     *                 SHOW_CHILDREN}: If {@code tableName} is a schema, then
     *                 {@code true} will return information about the tables
     *                 and views in the schema, and {@code false} will return
     *                 information about the schema itself. If {@code
     *                 tableName} is a table or view, {@code show_children}
     *                 must be {@code false}. If {@code tableName} is empty,
     *                 then {@code show_children} must be {@code true}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#NO_ERROR_IF_NOT_EXISTS
     *                 NO_ERROR_IF_NOT_EXISTS}: If {@code false} will return an
     *                 error if the provided {@code tableName} does not exist.
     *                 If {@code true} then it will return an empty result.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#GET_COLUMN_INFO
     *                 GET_COLUMN_INFO}: If {@code true} then column info
     *                 (memory usage, etc) will be returned.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowTableRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTableResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTableResponse showTable(String tableName, Map<String, String> options) throws GPUdbException {
        ShowTableRequest actualRequest_ = new ShowTableRequest(tableName, options);
        ShowTableResponse actualResponse_ = new ShowTableResponse();
        submitRequest("/show/table", actualRequest_, actualResponse_, false);

        for (int i_ = 0; i_ < actualResponse_.getTypeIds().size(); ++i_) {
            if( actualResponse_.getTypeSchemas().get(i_).isEmpty() ) {
                // Skip generating a type if no schema is available
                continue;
            }
            setTypeDescriptorIfMissing(actualResponse_.getTypeIds().get(i_), actualResponse_.getTypeLabels().get(i_), actualResponse_.getTypeSchemas().get(i_), actualResponse_.getProperties().get(i_));
        }

        return actualResponse_;
    }



    /**
     * Retrieves the user provided metadata for the specified tables.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTableMetadataResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTableMetadataResponse showTableMetadata(ShowTableMetadataRequest request) throws GPUdbException {
        ShowTableMetadataResponse actualResponse_ = new ShowTableMetadataResponse();
        submitRequest("/show/table/metadata", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves the user provided metadata for the specified tables.
     * 
     * @param tableNames  Names of tables whose metadata will be fetched, in
     *                    [schema_name.]table_name format, using standard <a
     *                    href="../../../../../concepts/tables/#table-name-resolution"
     *                    target="_top">name resolution rules</a>.  All
     *                    provided tables must exist, or an error is returned.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTableMetadataResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTableMetadataResponse showTableMetadata(List<String> tableNames, Map<String, String> options) throws GPUdbException {
        ShowTableMetadataRequest actualRequest_ = new ShowTableMetadataRequest(tableNames, options);
        ShowTableMetadataResponse actualResponse_ = new ShowTableMetadataResponse();
        submitRequest("/show/table/metadata", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Show table monitors and their properties. Table monitors are created
     * using {@link GPUdb#createTableMonitor(CreateTableMonitorRequest)}.
     * Returns detailed information about existing table monitors.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTableMonitorsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTableMonitorsResponse showTableMonitors(ShowTableMonitorsRequest request) throws GPUdbException {
        ShowTableMonitorsResponse actualResponse_ = new ShowTableMonitorsResponse();
        submitRequest("/show/tablemonitors", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Show table monitors and their properties. Table monitors are created
     * using {@link GPUdb#createTableMonitor(String, Map)}.
     * Returns detailed information about existing table monitors.
     * 
     * @param monitorIds  List of monitors to be shown. An empty list or a
     *                    single entry with an empty string returns all table
     *                    monitors.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTableMonitorsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTableMonitorsResponse showTableMonitors(List<String> monitorIds, Map<String, String> options) throws GPUdbException {
        ShowTableMonitorsRequest actualRequest_ = new ShowTableMonitorsRequest(monitorIds, options);
        ShowTableMonitorsResponse actualResponse_ = new ShowTableMonitorsResponse();
        submitRequest("/show/tablemonitors", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Gets names of the tables whose type matches the given criteria. Each
     * table has a particular type. This type comprises the schema and
     * properties of the table and sometimes a type label. This function allows
     * a look up of the existing tables based on full or partial type
     * information. The operation is synchronous.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTablesByTypeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTablesByTypeResponse showTablesByType(ShowTablesByTypeRequest request) throws GPUdbException {
        ShowTablesByTypeResponse actualResponse_ = new ShowTablesByTypeResponse();
        submitRequest("/show/tables/bytype", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Gets names of the tables whose type matches the given criteria. Each
     * table has a particular type. This type comprises the schema and
     * properties of the table and sometimes a type label. This function allows
     * a look up of the existing tables based on full or partial type
     * information. The operation is synchronous.
     * 
     * @param typeId  Type id returned by a call to {@link
     *                GPUdb#createType(String, String, Map, Map)}.
     * @param label  Optional user supplied label which can be used instead of
     *               the type_id to retrieve all tables with the given label.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTablesByTypeResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTablesByTypeResponse showTablesByType(String typeId, String label, Map<String, String> options) throws GPUdbException {
        ShowTablesByTypeRequest actualRequest_ = new ShowTablesByTypeRequest(typeId, label, options);
        ShowTablesByTypeResponse actualResponse_ = new ShowTablesByTypeResponse();
        submitRequest("/show/tables/bytype", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves information regarding the specified triggers or all existing
     * triggers currently active.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTriggersResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTriggersResponse showTriggers(ShowTriggersRequest request) throws GPUdbException {
        ShowTriggersResponse actualResponse_ = new ShowTriggersResponse();
        submitRequest("/show/triggers", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves information regarding the specified triggers or all existing
     * triggers currently active.
     * 
     * @param triggerIds  List of IDs of the triggers whose information is to
     *                    be retrieved. An empty list means information will be
     *                    retrieved on all active triggers.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTriggersResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTriggersResponse showTriggers(List<String> triggerIds, Map<String, String> options) throws GPUdbException {
        ShowTriggersRequest actualRequest_ = new ShowTriggersRequest(triggerIds, options);
        ShowTriggersResponse actualResponse_ = new ShowTriggersResponse();
        submitRequest("/show/triggers", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves information for the specified data type ID or type label. For
     * all data types that match the input criteria, the database returns the
     * type ID, the type schema, the label (if available), and the type's
     * column properties.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTypesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTypesResponse showTypes(ShowTypesRequest request) throws GPUdbException {
        ShowTypesResponse actualResponse_ = new ShowTypesResponse();
        submitRequest("/show/types", request, actualResponse_, false);

        for (int i_ = 0; i_ < actualResponse_.getTypeIds().size(); ++i_) {
            if( actualResponse_.getTypeSchemas().get(i_).isEmpty() ) {
                // Skip generating a type if no schema is available
                continue;
            }
            setTypeDescriptorIfMissing(actualResponse_.getTypeIds().get(i_), actualResponse_.getLabels().get(i_), actualResponse_.getTypeSchemas().get(i_), actualResponse_.getProperties().get(i_));
        }

        return actualResponse_;
    }



    /**
     * Retrieves information for the specified data type ID or type label. For
     * all data types that match the input criteria, the database returns the
     * type ID, the type schema, the label (if available), and the type's
     * column properties.
     * 
     * @param typeId  Type Id returned in response to a call to {@link
     *                GPUdb#createType(String, String, Map, Map)}.
     * @param label  Option string that was supplied by user in a call to
     *               {@link GPUdb#createType(String, String, Map, Map)}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTypesRequest.Options#NO_JOIN_TYPES
     *                 NO_JOIN_TYPES}: When set to 'true', no join types will
     *                 be included.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTypesRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.ShowTypesRequest.Options#FALSE FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.ShowTypesRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowTypesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowTypesResponse showTypes(String typeId, String label, Map<String, String> options) throws GPUdbException {
        ShowTypesRequest actualRequest_ = new ShowTypesRequest(typeId, label, options);
        ShowTypesResponse actualResponse_ = new ShowTypesResponse();
        submitRequest("/show/types", actualRequest_, actualResponse_, false);

        for (int i_ = 0; i_ < actualResponse_.getTypeIds().size(); ++i_) {
            if( actualResponse_.getTypeSchemas().get(i_).isEmpty() ) {
                // Skip generating a type if no schema is available
                continue;
            }
            setTypeDescriptorIfMissing(actualResponse_.getTypeIds().get(i_), actualResponse_.getLabels().get(i_), actualResponse_.getTypeSchemas().get(i_), actualResponse_.getProperties().get(i_));
        }

        return actualResponse_;
    }



    /**
     * Retrieves information about rendered videos.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowVideoResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowVideoResponse showVideo(ShowVideoRequest request) throws GPUdbException {
        ShowVideoResponse actualResponse_ = new ShowVideoResponse();
        submitRequest("/show/video", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Retrieves information about rendered videos.
     * 
     * @param paths  The fully-qualified <a href="../../../../../tools/kifs/"
     *               target="_top">KiFS</a> paths for the videos to show. If
     *               empty, shows all videos.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  ShowVideoResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public ShowVideoResponse showVideo(List<String> paths, Map<String, String> options) throws GPUdbException {
        ShowVideoRequest actualRequest_ = new ShowVideoRequest(paths, options);
        ShowVideoResponse actualResponse_ = new ShowVideoResponse();
        submitRequest("/show/video", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Solves an existing graph for a type of problem (e.g., shortest path,
     * page rank, travelling salesman, etc.) using source nodes, destination
     * nodes, and
     * additional, optional weights and restrictions.
     * <p>
     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, the
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>,
     * and/or some
     * <a href="../../../../../guide-tags/graph---solve"
     * target="_top">/solve/graph examples</a>
     * before using this endpoint.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  SolveGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public SolveGraphResponse solveGraph(SolveGraphRequest request) throws GPUdbException {
        SolveGraphResponse actualResponse_ = new SolveGraphResponse();
        submitRequest("/solve/graph", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Solves an existing graph for a type of problem (e.g., shortest path,
     * page rank, travelling salesman, etc.) using source nodes, destination
     * nodes, and
     * additional, optional weights and restrictions.
     * <p>
     * IMPORTANT: It's highly recommended that you review the
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * concepts documentation, the
     * <a href="../../../../../guides/graph_rest_guide/" target="_top">Graph
     * REST Tutorial</a>,
     * and/or some
     * <a href="../../../../../guide-tags/graph---solve"
     * target="_top">/solve/graph examples</a>
     * before using this endpoint.
     * 
     * @param graphName  Name of the graph resource to solve.
     * @param weightsOnEdges  Additional weights to apply to the edges of an
     *                        existing
     *                        graph. Weights must be specified using
     *                        <a
     *                        href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *                        target="_top">identifiers</a>;
     *                        identifiers are grouped as
     *                        <a
     *                        href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *                        target="_top">combinations</a>.
     *                        Identifiers can be used with existing column
     *                        names, e.g.,
     *                        'table.column AS WEIGHTS_EDGE_ID', expressions,
     *                        e.g.,
     *                        'ST_LENGTH(wkt) AS WEIGHTS_VALUESPECIFIED', or
     *                        constant values, e.g.,
     *                        '{4, 15, 2} AS WEIGHTS_VALUESPECIFIED'. Any
     *                        provided weights will be added
     *                        (in the case of 'WEIGHTS_VALUESPECIFIED') to or
     *                        multiplied with
     *                        (in the case of 'WEIGHTS_FACTORSPECIFIED') the
     *                        existing weight(s). If using
     *                        constant values in an identifier combination, the
     *                        number of values specified
     *                        must match across the combination.  The default
     *                        value is an empty {@link List}.
     * @param restrictions  Additional restrictions to apply to the nodes/edges
     *                      of an
     *                      existing graph. Restrictions must be specified
     *                      using
     *                      <a
     *                      href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *                      target="_top">identifiers</a>;
     *                      identifiers are grouped as
     *                      <a
     *                      href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *                      target="_top">combinations</a>.
     *                      Identifiers can be used with existing column names,
     *                      e.g.,
     *                      'table.column AS RESTRICTIONS_EDGE_ID',
     *                      expressions, e.g.,
     *                      'column/2 AS RESTRICTIONS_VALUECOMPARED', or
     *                      constant values, e.g.,
     *                      '{0, 0, 0, 1} AS RESTRICTIONS_ONOFFCOMPARED'. If
     *                      using constant values in an
     *                      identifier combination, the number of values
     *                      specified must match across the
     *                      combination. If remove_previous_restrictions option
     *                      is set
     *                      to true, any
     *                      provided restrictions will replace the existing
     *                      restrictions. Otherwise, any provided
     *                      restrictions will be added (in the case of
     *                      'RESTRICTIONS_VALUECOMPARED') to or
     *                      replaced (in the case of
     *                      'RESTRICTIONS_ONOFFCOMPARED').  The default value
     *                      is an empty {@link List}.
     * @param solverType  The type of solver to use for the graph.
     *                    Supported values:
     *                    <ul>
     *                            <li> {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#SHORTEST_PATH
     *                    SHORTEST_PATH}: Solves for the optimal (shortest)
     *                    path based on weights and restrictions from one
     *                    source to destinations nodes. Also known as the
     *                    Dijkstra solver.
     *                            <li> {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#PAGE_RANK
     *                    PAGE_RANK}: Solves for the probability of each
     *                    destination node being visited based on the links of
     *                    the graph topology. Weights are not required to use
     *                    this solver.
     *                            <li> {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#PROBABILITY_RANK
     *                    PROBABILITY_RANK}: Solves for the transitional
     *                    probability (Hidden Markov) for each node based on
     *                    the weights (probability assigned over given edges).
     *                            <li> {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#CENTRALITY
     *                    CENTRALITY}: Solves for the degree of a node to
     *                    depict how many pairs of individuals that would have
     *                    to go through the node to reach one another in the
     *                    minimum number of hops. Also known as betweenness.
     *                            <li> {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#MULTIPLE_ROUTING
     *                    MULTIPLE_ROUTING}: Solves for finding the minimum
     *                    cost cumulative path for a round-trip starting from
     *                    the given source and visiting each given destination
     *                    node once then returning to the source. Also known as
     *                    the travelling salesman problem.
     *                            <li> {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#INVERSE_SHORTEST_PATH
     *                    INVERSE_SHORTEST_PATH}: Solves for finding the
     *                    optimal path cost for each destination node to route
     *                    to the source node. Also known as inverse Dijkstra or
     *                    the service man routing problem.
     *                            <li> {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#BACKHAUL_ROUTING
     *                    BACKHAUL_ROUTING}: Solves for optimal routes that
     *                    connect remote asset nodes to the fixed (backbone)
     *                    asset nodes.
     *                            <li> {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#ALLPATHS
     *                    ALLPATHS}: Solves for paths that would give costs
     *                    between max and min solution radia - Make sure to
     *                    limit by the 'max_solution_targets' option. Min cost
     *                    shoudl be >= shortest_path cost.
     *                            <li> {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#STATS_ALL
     *                    STATS_ALL}: Solves for graph statistics such as graph
     *                    diameter, longest pairs, vertex valences, topology
     *                    numbers, average and max cluster sizes, etc.
     *                            <li> {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#CLOSENESS
     *                    CLOSENESS}: Solves for the centrality closeness score
     *                    per node as the sum of the inverse shortest path
     *                    costs to all nodes in the graph.
     *                    </ul>
     *                    The default value is {@link
     *                    com.gpudb.protocol.SolveGraphRequest.SolverType#SHORTEST_PATH
     *                    SHORTEST_PATH}.
     * @param sourceNodes  It can be one of the nodal identifiers - e.g:
     *                     'NODE_WKTPOINT' for source nodes. For {@code
     *                     BACKHAUL_ROUTING}, this list depicts the fixed
     *                     assets.  The default value is an empty {@link List}.
     * @param destinationNodes  It can be one of the nodal identifiers - e.g:
     *                          'NODE_WKTPOINT' for destination (target) nodes.
     *                          For {@code BACKHAUL_ROUTING}, this list depicts
     *                          the remote assets.  The default value is an
     *                          empty {@link List}.
     * @param solutionTable  Name of the table to store the solution, in
     *                       [schema_name.]table_name format, using standard <a
     *                       href="../../../../../concepts/tables/#table-name-resolution"
     *                       target="_top">name resolution rules</a>.  The
     *                       default value is 'graph_solutions'.
     * @param options  Additional parameters
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#MAX_SOLUTION_RADIUS
     *                 MAX_SOLUTION_RADIUS}: For {@code ALLPATHS}, {@code
     *                 SHORTEST_PATH} and {@code INVERSE_SHORTEST_PATH} solvers
     *                 only. Sets the maximum solution cost radius, which
     *                 ignores the {@code destinationNodes} list and instead
     *                 outputs the nodes within the radius sorted by ascending
     *                 cost. If set to '0.0', the setting is ignored.  The
     *                 default value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#MIN_SOLUTION_RADIUS
     *                 MIN_SOLUTION_RADIUS}: For {@code ALLPATHS}, {@code
     *                 SHORTEST_PATH} and {@code INVERSE_SHORTEST_PATH} solvers
     *                 only. Applicable only when {@code max_solution_radius}
     *                 is set. Sets the minimum solution cost radius, which
     *                 ignores the {@code destinationNodes} list and instead
     *                 outputs the nodes within the radius sorted by ascending
     *                 cost. If set to '0.0', the setting is ignored.  The
     *                 default value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#MAX_SOLUTION_TARGETS
     *                 MAX_SOLUTION_TARGETS}: For {@code ALLPATHS}, {@code
     *                 SHORTEST_PATH} and {@code INVERSE_SHORTEST_PATH} solvers
     *                 only. Sets the maximum number of solution targets, which
     *                 ignores the {@code destinationNodes} list and instead
     *                 outputs no more than n number of nodes sorted by
     *                 ascending cost where n is equal to the setting value. If
     *                 set to 0, the setting is ignored.  The default value is
     *                 '1000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#UNIFORM_WEIGHTS
     *                 UNIFORM_WEIGHTS}: When specified, assigns the given
     *                 value to all the edges in the graph. Note that weights
     *                 provided in {@code weightsOnEdges} will override this
     *                 value.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#LEFT_TURN_PENALTY
     *                 LEFT_TURN_PENALTY}: This will add an additonal weight
     *                 over the edges labelled as 'left turn' if the 'add_turn'
     *                 option parameter of the {@link GPUdb#createGraph(String,
     *                 boolean, List, List, List, List, Map)} was invoked at
     *                 graph creation.  The default value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#RIGHT_TURN_PENALTY
     *                 RIGHT_TURN_PENALTY}: This will add an additonal weight
     *                 over the edges labelled as' right turn' if the
     *                 'add_turn' option parameter of the {@link
     *                 GPUdb#createGraph(String, boolean, List, List, List,
     *                 List, Map)} was invoked at graph creation.  The default
     *                 value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#INTERSECTION_PENALTY
     *                 INTERSECTION_PENALTY}: This will add an additonal weight
     *                 over the edges labelled as 'intersection' if the
     *                 'add_turn' option parameter of the {@link
     *                 GPUdb#createGraph(String, boolean, List, List, List,
     *                 List, Map)} was invoked at graph creation.  The default
     *                 value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#SHARP_TURN_PENALTY
     *                 SHARP_TURN_PENALTY}: This will add an additonal weight
     *                 over the edges labelled as 'sharp turn' or 'u-turn' if
     *                 the 'add_turn' option parameter of the {@link
     *                 GPUdb#createGraph(String, boolean, List, List, List,
     *                 List, Map)} was invoked at graph creation.  The default
     *                 value is '0.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#NUM_BEST_PATHS
     *                 NUM_BEST_PATHS}: For {@code MULTIPLE_ROUTING} solvers
     *                 only; sets the number of shortest paths computed from
     *                 each node. This is the heuristic criterion. Default
     *                 value of zero allows the number to be computed
     *                 automatically by the solver. The user may want to
     *                 override this parameter to speed-up the solver.  The
     *                 default value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#MAX_NUM_COMBINATIONS
     *                 MAX_NUM_COMBINATIONS}: For {@code MULTIPLE_ROUTING}
     *                 solvers only; sets the cap on the combinatorial
     *                 sequences generated. If the default value of two
     *                 millions is overridden to a lesser value, it can
     *                 potentially speed up the solver.  The default value is
     *                 '2000000'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#OUTPUT_EDGE_PATH
     *                 OUTPUT_EDGE_PATH}: If true then concatenated edge ids
     *                 will be added as the EDGE path column of the solution
     *                 table for each source and target pair in shortest path
     *                 solves.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#OUTPUT_WKT_PATH
     *                 OUTPUT_WKT_PATH}: If true then concatenated wkt line
     *                 segments will be added as the Wktroute column of the
     *                 solution table for each source and target pair in
     *                 shortest path solves.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#TRUE TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#SERVER_ID
     *                 SERVER_ID}: Indicates which graph server(s) to send the
     *                 request to. Default is to send to the server, amongst
     *                 those containing the corresponding graph, that has the
     *                 most computational bandwidth. For SHORTEST_PATH solver
     *                 type, the input is split amongst the server containing
     *                 the corresponding graph.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#CONVERGENCE_LIMIT
     *                 CONVERGENCE_LIMIT}: For {@code PAGE_RANK} solvers only;
     *                 Maximum percent relative threshold on the pagerank
     *                 scores of each node between consecutive iterations to
     *                 satisfy convergence. Default value is 1 (one) percent.
     *                 The default value is '1.0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#MAX_ITERATIONS
     *                 MAX_ITERATIONS}: For {@code PAGE_RANK} solvers only;
     *                 Maximum number of pagerank iterations for satisfying
     *                 convergence. Default value is 100.  The default value is
     *                 '100'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#MAX_RUNS
     *                 MAX_RUNS}: For all {@code CENTRALITY} solvers only; Sets
     *                 the maximum number of shortest path runs; maximum
     *                 possible value is the number of nodes in the graph.
     *                 Default value of 0 enables this value to be auto
     *                 computed by the solver.  The default value is '0'.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#OUTPUT_CLUSTERS
     *                 OUTPUT_CLUSTERS}: For {@code STATS_ALL} solvers only;
     *                 the cluster index for each node will be inserted as an
     *                 additional column in the output.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#TRUE TRUE}:
     *                 An additional column 'CLUSTER' will be added for each
     *                 node
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#FALSE
     *                 FALSE}: No extra cluster info per node will be available
     *                 in the output
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#SOLVE_HEURISTIC
     *                 SOLVE_HEURISTIC}: Specify heuristic search criterion
     *                 only for the geo graphs and shortest path solves towards
     *                 a single target
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#ASTAR
     *                 ASTAR}: Employs A-STAR heuristics to speed up the
     *                 shortest path traversal
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#NONE NONE}:
     *                 No heuristics are applied
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#NONE NONE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.SolveGraphRequest.Options#ASTAR_RADIUS
     *                 ASTAR_RADIUS}: For path solvers only when
     *                 'solve_heuristic' option is 'astar'. The shortest path
     *                 traversal front includes nodes only within this radius
     *                 (kilometers) as it moves towards the target location.
     *                 The default value is '70'.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  SolveGraphResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public SolveGraphResponse solveGraph(String graphName, List<String> weightsOnEdges, List<String> restrictions, String solverType, List<String> sourceNodes, List<String> destinationNodes, String solutionTable, Map<String, String> options) throws GPUdbException {
        SolveGraphRequest actualRequest_ = new SolveGraphRequest(graphName, weightsOnEdges, restrictions, solverType, sourceNodes, destinationNodes, solutionTable, options);
        SolveGraphResponse actualResponse_ = new SolveGraphResponse();
        submitRequest("/solve/graph", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Runs multiple predicate-based updates in a single call.  With the
     * list of given expressions, any matching record's column values will be
     * updated
     * as provided in {@code newValuesMaps}.  There is also an optional
     * 'upsert'
     * capability where if a particular predicate doesn't match any existing
     * record,
     * then a new record can be inserted.
     * <p>
     * Note that this operation can only be run on an original table and not on
     * a
     * result view.
     * <p>
     * This operation can update primary key values.  By default only
     * 'pure primary key' predicates are allowed when updating primary key
     * values. If
     * the primary key for a table is the column 'attr1', then the operation
     * will only
     * accept predicates of the form: "attr1 == 'foo'" if the attr1 column is
     * being
     * updated.  For a composite primary key (e.g. columns 'attr1' and 'attr2')
     * then
     * this operation will only accept predicates of the form:
     * "(attr1 == 'foo') and (attr2 == 'bar')".  Meaning, all primary key
     * columns
     * must appear in an equality predicate in the expressions.  Furthermore
     * each
     * 'pure primary key' predicate must be unique within a given request.
     * These
     * restrictions can be removed by utilizing some available options through
     * {@code options}.
     * <p>
     * The {@code update_on_existing_pk} option specifies the record primary
     * key collision
     * policy for tables with a <a
     * href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, while
     * {@code ignore_existing_pk} specifies the record primary key collision
     * error-suppression policy when those collisions result in the update
     * being rejected.  Both are
     * ignored on tables with no primary key.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UpdateRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public UpdateRecordsResponse updateRecordsRaw(RawUpdateRecordsRequest request) throws GPUdbException {
        UpdateRecordsResponse actualResponse_ = new UpdateRecordsResponse();
        submitRequest("/update/records", request, actualResponse_, true);
        return actualResponse_;
    }



    /**
     * Runs multiple predicate-based updates in a single call.  With the
     * list of given expressions, any matching record's column values will be
     * updated
     * as provided in {@code newValuesMaps}.  There is also an optional
     * 'upsert'
     * capability where if a particular predicate doesn't match any existing
     * record,
     * then a new record can be inserted.
     * <p>
     * Note that this operation can only be run on an original table and not on
     * a
     * result view.
     * <p>
     * This operation can update primary key values.  By default only
     * 'pure primary key' predicates are allowed when updating primary key
     * values. If
     * the primary key for a table is the column 'attr1', then the operation
     * will only
     * accept predicates of the form: "attr1 == 'foo'" if the attr1 column is
     * being
     * updated.  For a composite primary key (e.g. columns 'attr1' and 'attr2')
     * then
     * this operation will only accept predicates of the form:
     * "(attr1 == 'foo') and (attr2 == 'bar')".  Meaning, all primary key
     * columns
     * must appear in an equality predicate in the expressions.  Furthermore
     * each
     * 'pure primary key' predicate must be unique within a given request.
     * These
     * restrictions can be removed by utilizing some available options through
     * {@code options}.
     * <p>
     * The {@code update_on_existing_pk} option specifies the record primary
     * key collision
     * policy for tables with a <a
     * href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, while
     * {@code ignore_existing_pk} specifies the record primary key collision
     * error-suppression policy when those collisions result in the update
     * being rejected.  Both are
     * ignored on tables with no primary key.
     * 
     * @param <TRequest>  The type of object being added.
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UpdateRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TRequest> UpdateRecordsResponse updateRecords(UpdateRecordsRequest<TRequest> request) throws GPUdbException {
        RawUpdateRecordsRequest actualRequest_ = new RawUpdateRecordsRequest(request.getTableName(), request.getExpressions(), request.getNewValuesMaps(), this.encode( request.getData() ), null, null, request.getOptions());
        UpdateRecordsResponse actualResponse_ = new UpdateRecordsResponse();
        submitRequest("/update/records", actualRequest_, actualResponse_, true);
        return actualResponse_;
    }



    /**
     * Runs multiple predicate-based updates in a single call.  With the
     * list of given expressions, any matching record's column values will be
     * updated
     * as provided in {@code newValuesMaps}.  There is also an optional
     * 'upsert'
     * capability where if a particular predicate doesn't match any existing
     * record,
     * then a new record can be inserted.
     * <p>
     * Note that this operation can only be run on an original table and not on
     * a
     * result view.
     * <p>
     * This operation can update primary key values.  By default only
     * 'pure primary key' predicates are allowed when updating primary key
     * values. If
     * the primary key for a table is the column 'attr1', then the operation
     * will only
     * accept predicates of the form: "attr1 == 'foo'" if the attr1 column is
     * being
     * updated.  For a composite primary key (e.g. columns 'attr1' and 'attr2')
     * then
     * this operation will only accept predicates of the form:
     * "(attr1 == 'foo') and (attr2 == 'bar')".  Meaning, all primary key
     * columns
     * must appear in an equality predicate in the expressions.  Furthermore
     * each
     * 'pure primary key' predicate must be unique within a given request.
     * These
     * restrictions can be removed by utilizing some available options through
     * {@code options}.
     * <p>
     * The {@code update_on_existing_pk} option specifies the record primary
     * key collision
     * policy for tables with a <a
     * href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, while
     * {@code ignore_existing_pk} specifies the record primary key collision
     * error-suppression policy when those collisions result in the update
     * being rejected.  Both are
     * ignored on tables with no primary key.
     * 
     * @param <TRequest>  The type of object being added.
     * @param typeObjectMap  Type object map used for encoding input objects.
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UpdateRecordsResponse
     * 
     * @throws IllegalArgumentException  if {@code typeObjectMap} is not an
     *                                   instance of one of the following:
     *                                   {@link Type}, {@link TypeObjectMap},
     *                                   {@link org.apache.avro.Schema}, or a
     *                                   {@link Class} that implements {@link
     *                                   org.apache.avro.generic.IndexedRecord}
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TRequest> UpdateRecordsResponse updateRecords(TypeObjectMap<TRequest> typeObjectMap, UpdateRecordsRequest<TRequest> request) throws GPUdbException {
        RawUpdateRecordsRequest actualRequest_ = new RawUpdateRecordsRequest(request.getTableName(), request.getExpressions(), request.getNewValuesMaps(), this.encode( typeObjectMap, request.getData() ), null, null, request.getOptions());
        UpdateRecordsResponse actualResponse_ = new UpdateRecordsResponse();
        submitRequest("/update/records", actualRequest_, actualResponse_, true);
        return actualResponse_;
    }



    /**
     * Runs multiple predicate-based updates in a single call.  With the
     * list of given expressions, any matching record's column values will be
     * updated
     * as provided in {@code newValuesMaps}.  There is also an optional
     * 'upsert'
     * capability where if a particular predicate doesn't match any existing
     * record,
     * then a new record can be inserted.
     * <p>
     * Note that this operation can only be run on an original table and not on
     * a
     * result view.
     * <p>
     * This operation can update primary key values.  By default only
     * 'pure primary key' predicates are allowed when updating primary key
     * values. If
     * the primary key for a table is the column 'attr1', then the operation
     * will only
     * accept predicates of the form: "attr1 == 'foo'" if the attr1 column is
     * being
     * updated.  For a composite primary key (e.g. columns 'attr1' and 'attr2')
     * then
     * this operation will only accept predicates of the form:
     * "(attr1 == 'foo') and (attr2 == 'bar')".  Meaning, all primary key
     * columns
     * must appear in an equality predicate in the expressions.  Furthermore
     * each
     * 'pure primary key' predicate must be unique within a given request.
     * These
     * restrictions can be removed by utilizing some available options through
     * {@code options}.
     * <p>
     * The {@code update_on_existing_pk} option specifies the record primary
     * key collision
     * policy for tables with a <a
     * href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, while
     * {@code ignore_existing_pk} specifies the record primary key collision
     * error-suppression policy when those collisions result in the update
     * being rejected.  Both are
     * ignored on tables with no primary key.
     * 
     * @param <TRequest>  The type of object being added.
     * @param tableName  Name of table to be updated, in
     *                   [schema_name.]table_name format, using standard
     *                   <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be a
     *                   currently
     *                   existing table and not a view.
     * @param expressions  A list of the actual predicates, one for each
     *                     update; format should follow the guidelines {@link
     *                     GPUdb#filter(String, String, String, Map) here}.
     * @param newValuesMaps  List of new values for the matching records.  Each
     *                       element is a map with
     *                       (key, value) pairs where the keys are the names of
     *                       the columns whose values are to be updated; the
     *                       values are the new values.  The number of elements
     *                       in the list should match the length of {@code
     *                       expressions}.
     * @param data  An *optional* list of new binary-avro encoded records to
     *              insert, one for each
     *              update.  If one of {@code expressions} does not yield a
     *              matching record to be updated, then the
     *              corresponding element from this list will be added to the
     *              table.  The default value is an empty {@link List}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#GLOBAL_EXPRESSION
     *                 GLOBAL_EXPRESSION}: An optional global expression to
     *                 reduce the search space of the predicates listed in
     *                 {@code expressions}.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#BYPASS_SAFETY_CHECKS
     *                 BYPASS_SAFETY_CHECKS}: When set to {@code true},
     *                 all predicates are available for primary key updates.
     *                 Keep in mind that it is possible to destroy
     *                 data in this case, since a single predicate may match
     *                 multiple objects (potentially all of records
     *                 of a table), and then updating all of those records to
     *                 have the same primary key will, due to the
     *                 primary key uniqueness constraints, effectively delete
     *                 all but one of those updated records.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for updating a table with a
     *                 <a href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>.  There are two ways that
     *                 a record collision can
     *                 occur.
     *                 The first is an "update collision", which happens when
     *                 the update changes the value of the updated
     *                 record's primary key, and that new primary key already
     *                 exists as the primary key of another record
     *                 in the table.
     *                 The second is an "insert collision", which occurs when a
     *                 given filter in {@code expressions}
     *                 finds no records to update, and the alternate insert
     *                 record given in {@code recordsToInsert} (or
     *                 {@code recordsToInsertStr}) contains a primary key
     *                 matching that of an existing record in the
     *                 table.
     *                 If {@code update_on_existing_pk} is set to
     *                 {@code true}, "update collisions" will result in the
     *                 existing record collided into being removed and the
     *                 record updated with values specified in
     *                 {@code newValuesMaps} taking its place; "insert
     *                 collisions" will result in the collided-into
     *                 record being updated with the values in {@code
     *                 recordsToInsert}/{@code recordsToInsertStr}
     *                 (if given).
     *                 If set to {@code false}, the existing collided-into
     *                 record will remain unchanged, while the update will be
     *                 rejected and the error handled as determined
     *                 by {@code ignore_existing_pk}.  If the specified table
     *                 does not have a primary key,
     *                 then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}: Overwrite the collided-into record when updating
     *                 a
     *                 record's primary key or inserting an alternate record
     *                 causes a primary key collision between the
     *                 record being updated/inserted and another existing
     *                 record in the table
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}: Reject updates which cause primary key
     *                 collisions
     *                 between the record being updated/inserted and an
     *                 existing record in the table
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 updating a table with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only used when primary
     *                 key record collisions are rejected ({@code
     *                 update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any record update that is rejected for
     *                 resulting in a primary key collision with an existing
     *                 table record will be ignored with no error
     *                 generated.  If {@code false}, the rejection of any
     *                 update
     *                 for resulting in a primary key collision will cause an
     *                 error to be reported.  If the specified table
     *                 does not have a primary key or if {@code
     *                 update_on_existing_pk} is
     *                 {@code true}, then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}: Ignore updates that result in primary key
     *                 collisions with existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}: Treat as errors any updates that result in
     *                 primary key collisions with existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#UPDATE_PARTITION
     *                 UPDATE_PARTITION}: Force qualifying records to be
     *                 deleted and reinserted so their partition membership
     *                 will be reevaluated.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, any strings
     *                 which are too long for their charN string fields will be
     *                 truncated to fit.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#USE_EXPRESSIONS_IN_NEW_VALUES_MAPS
     *                 USE_EXPRESSIONS_IN_NEW_VALUES_MAPS}: When set to {@code
     *                 true},
     *                 all new values in {@code newValuesMaps} are considered
     *                 as expression values. When set to
     *                 {@code false}, all new values in
     *                 {@code newValuesMaps} are considered as constants.
     *                 NOTE:  When
     *                 {@code true}, string constants will need
     *                 to be quoted to avoid being evaluated as expressions.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#RECORD_ID
     *                 RECORD_ID}: ID of a single record to be updated
     *                 (returned in the call to {@link
     *                 GPUdb#insertRecords(String, List, Map)} or {@link
     *                 GPUdb#getRecordsFromCollection(Object, String, long,
     *                 long, Map)}).
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UpdateRecordsResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TRequest> UpdateRecordsResponse updateRecords(String tableName, List<String> expressions, List<Map<String, String>> newValuesMaps, List<TRequest> data, Map<String, String> options) throws GPUdbException {
        RawUpdateRecordsRequest actualRequest_ = new RawUpdateRecordsRequest(tableName, expressions, newValuesMaps, this.encode( data ), null, null, options);
        UpdateRecordsResponse actualResponse_ = new UpdateRecordsResponse();
        submitRequest("/update/records", actualRequest_, actualResponse_, true);
        return actualResponse_;
    }



    /**
     * Runs multiple predicate-based updates in a single call.  With the
     * list of given expressions, any matching record's column values will be
     * updated
     * as provided in {@code newValuesMaps}.  There is also an optional
     * 'upsert'
     * capability where if a particular predicate doesn't match any existing
     * record,
     * then a new record can be inserted.
     * <p>
     * Note that this operation can only be run on an original table and not on
     * a
     * result view.
     * <p>
     * This operation can update primary key values.  By default only
     * 'pure primary key' predicates are allowed when updating primary key
     * values. If
     * the primary key for a table is the column 'attr1', then the operation
     * will only
     * accept predicates of the form: "attr1 == 'foo'" if the attr1 column is
     * being
     * updated.  For a composite primary key (e.g. columns 'attr1' and 'attr2')
     * then
     * this operation will only accept predicates of the form:
     * "(attr1 == 'foo') and (attr2 == 'bar')".  Meaning, all primary key
     * columns
     * must appear in an equality predicate in the expressions.  Furthermore
     * each
     * 'pure primary key' predicate must be unique within a given request.
     * These
     * restrictions can be removed by utilizing some available options through
     * {@code options}.
     * <p>
     * The {@code update_on_existing_pk} option specifies the record primary
     * key collision
     * policy for tables with a <a
     * href="../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, while
     * {@code ignore_existing_pk} specifies the record primary key collision
     * error-suppression policy when those collisions result in the update
     * being rejected.  Both are
     * ignored on tables with no primary key.
     * 
     * @param <TRequest>  The type of object being added.
     * @param typeObjectMap  Type object map used for encoding input objects.
     * @param tableName  Name of table to be updated, in
     *                   [schema_name.]table_name format, using standard
     *                   <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be a
     *                   currently
     *                   existing table and not a view.
     * @param expressions  A list of the actual predicates, one for each
     *                     update; format should follow the guidelines {@link
     *                     GPUdb#filter(String, String, String, Map) here}.
     * @param newValuesMaps  List of new values for the matching records.  Each
     *                       element is a map with
     *                       (key, value) pairs where the keys are the names of
     *                       the columns whose values are to be updated; the
     *                       values are the new values.  The number of elements
     *                       in the list should match the length of {@code
     *                       expressions}.
     * @param data  An *optional* list of new binary-avro encoded records to
     *              insert, one for each
     *              update.  If one of {@code expressions} does not yield a
     *              matching record to be updated, then the
     *              corresponding element from this list will be added to the
     *              table.  The default value is an empty {@link List}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#GLOBAL_EXPRESSION
     *                 GLOBAL_EXPRESSION}: An optional global expression to
     *                 reduce the search space of the predicates listed in
     *                 {@code expressions}.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#BYPASS_SAFETY_CHECKS
     *                 BYPASS_SAFETY_CHECKS}: When set to {@code true},
     *                 all predicates are available for primary key updates.
     *                 Keep in mind that it is possible to destroy
     *                 data in this case, since a single predicate may match
     *                 multiple objects (potentially all of records
     *                 of a table), and then updating all of those records to
     *                 have the same primary key will, due to the
     *                 primary key uniqueness constraints, effectively delete
     *                 all but one of those updated records.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for updating a table with a
     *                 <a href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>.  There are two ways that
     *                 a record collision can
     *                 occur.
     *                 The first is an "update collision", which happens when
     *                 the update changes the value of the updated
     *                 record's primary key, and that new primary key already
     *                 exists as the primary key of another record
     *                 in the table.
     *                 The second is an "insert collision", which occurs when a
     *                 given filter in {@code expressions}
     *                 finds no records to update, and the alternate insert
     *                 record given in {@code recordsToInsert} (or
     *                 {@code recordsToInsertStr}) contains a primary key
     *                 matching that of an existing record in the
     *                 table.
     *                 If {@code update_on_existing_pk} is set to
     *                 {@code true}, "update collisions" will result in the
     *                 existing record collided into being removed and the
     *                 record updated with values specified in
     *                 {@code newValuesMaps} taking its place; "insert
     *                 collisions" will result in the collided-into
     *                 record being updated with the values in {@code
     *                 recordsToInsert}/{@code recordsToInsertStr}
     *                 (if given).
     *                 If set to {@code false}, the existing collided-into
     *                 record will remain unchanged, while the update will be
     *                 rejected and the error handled as determined
     *                 by {@code ignore_existing_pk}.  If the specified table
     *                 does not have a primary key,
     *                 then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}: Overwrite the collided-into record when updating
     *                 a
     *                 record's primary key or inserting an alternate record
     *                 causes a primary key collision between the
     *                 record being updated/inserted and another existing
     *                 record in the table
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}: Reject updates which cause primary key
     *                 collisions
     *                 between the record being updated/inserted and an
     *                 existing record in the table
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 updating a table with a <a
     *                 href="../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only used when primary
     *                 key record collisions are rejected ({@code
     *                 update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any record update that is rejected for
     *                 resulting in a primary key collision with an existing
     *                 table record will be ignored with no error
     *                 generated.  If {@code false}, the rejection of any
     *                 update
     *                 for resulting in a primary key collision will cause an
     *                 error to be reported.  If the specified table
     *                 does not have a primary key or if {@code
     *                 update_on_existing_pk} is
     *                 {@code true}, then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}: Ignore updates that result in primary key
     *                 collisions with existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}: Treat as errors any updates that result in
     *                 primary key collisions with existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#UPDATE_PARTITION
     *                 UPDATE_PARTITION}: Force qualifying records to be
     *                 deleted and reinserted so their partition membership
     *                 will be reevaluated.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, any strings
     *                 which are too long for their charN string fields will be
     *                 truncated to fit.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#USE_EXPRESSIONS_IN_NEW_VALUES_MAPS
     *                 USE_EXPRESSIONS_IN_NEW_VALUES_MAPS}: When set to {@code
     *                 true},
     *                 all new values in {@code newValuesMaps} are considered
     *                 as expression values. When set to
     *                 {@code false}, all new values in
     *                 {@code newValuesMaps} are considered as constants.
     *                 NOTE:  When
     *                 {@code true}, string constants will need
     *                 to be quoted to avoid being evaluated as expressions.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.RawUpdateRecordsRequest.Options#RECORD_ID
     *                 RECORD_ID}: ID of a single record to be updated
     *                 (returned in the call to {@link
     *                 GPUdb#insertRecords(TypeObjectMap, String, List, Map)}
     *                 or {@link GPUdb#getRecordsFromCollection(Object, String,
     *                 long, long, Map)}).
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UpdateRecordsResponse
     * 
     * @throws IllegalArgumentException  if {@code typeObjectMap} is not an
     *                                   instance of one of the following:
     *                                   {@link Type}, {@link TypeObjectMap},
     *                                   {@link org.apache.avro.Schema}, or a
     *                                   {@link Class} that implements {@link
     *                                   org.apache.avro.generic.IndexedRecord}
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public <TRequest> UpdateRecordsResponse updateRecords(TypeObjectMap<TRequest> typeObjectMap, String tableName, List<String> expressions, List<Map<String, String>> newValuesMaps, List<TRequest> data, Map<String, String> options) throws GPUdbException {
        RawUpdateRecordsRequest actualRequest_ = new RawUpdateRecordsRequest(tableName, expressions, newValuesMaps, this.encode( typeObjectMap, data ), null, null, options);
        UpdateRecordsResponse actualResponse_ = new UpdateRecordsResponse();
        submitRequest("/update/records", actualRequest_, actualResponse_, true);
        return actualResponse_;
    }



    /**
     * Updates the view specified by {@code tableName} to include full
     * series (track) information from the {@code worldTableName} for the
     * series
     * (tracks) present in the {@code viewName}.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UpdateRecordsBySeriesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public UpdateRecordsBySeriesResponse updateRecordsBySeries(UpdateRecordsBySeriesRequest request) throws GPUdbException {
        UpdateRecordsBySeriesResponse actualResponse_ = new UpdateRecordsBySeriesResponse();
        submitRequest("/update/records/byseries", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Updates the view specified by {@code tableName} to include full
     * series (track) information from the {@code worldTableName} for the
     * series
     * (tracks) present in the {@code viewName}.
     * 
     * @param tableName  Name of the view on which the update operation will be
     *                   performed, in [schema_name.]view_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  Must be an
     *                   existing view.
     * @param worldTableName  Name of the table containing the complete series
     *                        (track) information, in [schema_name.]table_name
     *                        format, using standard <a
     *                        href="../../../../../concepts/tables/#table-name-resolution"
     *                        target="_top">name resolution rules</a>.
     * @param viewName  Name of the view containing the series (tracks) which
     *                  have to be updated, in [schema_name.]view_name format,
     *                  using standard <a
     *                  href="../../../../../concepts/tables/#table-name-resolution"
     *                  target="_top">name resolution rules</a>.  The default
     *                  value is ''.
     * @param reserved  The default value is an empty {@link List}.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UpdateRecordsBySeriesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public UpdateRecordsBySeriesResponse updateRecordsBySeries(String tableName, String worldTableName, String viewName, List<String> reserved, Map<String, String> options) throws GPUdbException {
        UpdateRecordsBySeriesRequest actualRequest_ = new UpdateRecordsBySeriesRequest(tableName, worldTableName, viewName, reserved, options);
        UpdateRecordsBySeriesResponse actualResponse_ = new UpdateRecordsBySeriesResponse();
        submitRequest("/update/records/byseries", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Uploads one or more files to <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>. There are
     * two methods for uploading files: load files in their entirety, or load
     * files in
     * parts. The latter is recommeded for files of approximately 60 MB or
     * larger.
     * <p>
     * To upload files in their entirety, populate {@code fileNames} with the
     * file
     * names to upload into on KiFS, and their respective byte content in
     * {@code fileData}.
     * <p>
     * Multiple steps are involved when uploading in multiple parts. Only one
     * file at a
     * time can be uploaded in this manner. A user-provided UUID is utilized to
     * tie all
     * the upload steps together for a given file.  To upload a file in
     * multiple parts:
     * <p>
     * 1. Provide the file name in {@code fileNames}, the UUID in
     *    the {@code multipart_upload_uuid} key in {@code options}, and
     *    a {@code multipart_operation} value of
     *    {@code init}.
     * 2. Upload one or more parts by providing the file name, the part data
     *    in {@code fileData}, the UUID, a {@code multipart_operation}
     *    value of {@code upload_part}, and
     *    the part number in the {@code multipart_upload_part_number}.
     *    The part numbers must start at 1 and increase incrementally.
     *    Parts may not be uploaded out of order.
     * 3. Complete the upload by providing the file name, the UUID, and a
     *    {@code multipart_operation} value of
     *    {@code complete}.
     * <p>
     * Multipart uploads in progress may be canceled by providing the file
     * name, the
     * UUID, and a {@code multipart_operation} value of
     * {@code cancel}.  If an new upload is
     * initialized with a different UUID for an existing upload in progress,
     * the
     * pre-existing upload is automatically canceled in favor of the new
     * upload.
     * <p>
     * The multipart upload must be completed for the file to be usable in
     * KiFS.
     * Information about multipart uploads in progress is available in
     * {@link GPUdb#showFiles(ShowFilesRequest)}.
     * <p>
     * File data may be pre-encoded using base64 encoding. This should be
     * indicated
     * using the {@code file_encoding} option, and is recommended when
     * using JSON serialization.
     * <p>
     * Each file path must reside in a top-level KiFS directory, i.e. one of
     * the
     * directories listed in {@link
     * GPUdb#showDirectories(ShowDirectoriesRequest)}. The user must have write
     * permission on the directory. Nested directories are permitted in file
     * name
     * paths. Directories are deliniated with the directory separator of '/'.
     * For
     * example, given the file path '/a/b/c/d.txt', 'a' must be a KiFS
     * directory.
     * <p>
     * These characters are allowed in file name paths: letters, numbers,
     * spaces, the
     * path delimiter of '/', and the characters: '.' '-' ':' '[' ']' '(' ')'
     * '#' '='.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UploadFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public UploadFilesResponse uploadFiles(UploadFilesRequest request) throws GPUdbException {
        UploadFilesResponse actualResponse_ = new UploadFilesResponse();
        submitRequest("/upload/files", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Uploads one or more files to <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>. There are
     * two methods for uploading files: load files in their entirety, or load
     * files in
     * parts. The latter is recommeded for files of approximately 60 MB or
     * larger.
     * <p>
     * To upload files in their entirety, populate {@code fileNames} with the
     * file
     * names to upload into on KiFS, and their respective byte content in
     * {@code fileData}.
     * <p>
     * Multiple steps are involved when uploading in multiple parts. Only one
     * file at a
     * time can be uploaded in this manner. A user-provided UUID is utilized to
     * tie all
     * the upload steps together for a given file.  To upload a file in
     * multiple parts:
     * <p>
     * 1. Provide the file name in {@code fileNames}, the UUID in
     *    the {@code multipart_upload_uuid} key in {@code options}, and
     *    a {@code multipart_operation} value of
     *    {@code init}.
     * 2. Upload one or more parts by providing the file name, the part data
     *    in {@code fileData}, the UUID, a {@code multipart_operation}
     *    value of {@code upload_part}, and
     *    the part number in the {@code multipart_upload_part_number}.
     *    The part numbers must start at 1 and increase incrementally.
     *    Parts may not be uploaded out of order.
     * 3. Complete the upload by providing the file name, the UUID, and a
     *    {@code multipart_operation} value of
     *    {@code complete}.
     * <p>
     * Multipart uploads in progress may be canceled by providing the file
     * name, the
     * UUID, and a {@code multipart_operation} value of
     * {@code cancel}.  If an new upload is
     * initialized with a different UUID for an existing upload in progress,
     * the
     * pre-existing upload is automatically canceled in favor of the new
     * upload.
     * <p>
     * The multipart upload must be completed for the file to be usable in
     * KiFS.
     * Information about multipart uploads in progress is available in
     * {@link GPUdb#showFiles(List, Map)}.
     * <p>
     * File data may be pre-encoded using base64 encoding. This should be
     * indicated
     * using the {@code file_encoding} option, and is recommended when
     * using JSON serialization.
     * <p>
     * Each file path must reside in a top-level KiFS directory, i.e. one of
     * the
     * directories listed in {@link GPUdb#showDirectories(String, Map)}. The
     * user must have write
     * permission on the directory. Nested directories are permitted in file
     * name
     * paths. Directories are deliniated with the directory separator of '/'.
     * For
     * example, given the file path '/a/b/c/d.txt', 'a' must be a KiFS
     * directory.
     * <p>
     * These characters are allowed in file name paths: letters, numbers,
     * spaces, the
     * path delimiter of '/', and the characters: '.' '-' ':' '[' ']' '(' ')'
     * '#' '='.
     * 
     * @param fileNames  An array of full file name paths to be used for the
     *                   files
     *                   uploaded to KiFS. File names may have any number of
     *                   nested directories in their
     *                   paths, but the top-level directory must be an existing
     *                   KiFS directory. Each file
     *                   must reside in or under a top-level directory. A full
     *                   file name path cannot be
     *                   larger than 1024 characters.
     * @param fileData  File data for the files being uploaded, for the
     *                  respective files in {@code fileNames}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#FILE_ENCODING
     *                 FILE_ENCODING}: Encoding that has been applied to the
     *                 uploaded
     *                 file data. When using JSON serialization it is
     *                 recommended to utilize
     *                 {@code base64}. The caller is responsible
     *                 for encoding the data provided in this payload
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#BASE64
     *                 BASE64}: Specifies that the file data being uploaded has
     *                 been base64 encoded.
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#NONE
     *                 NONE}: The uploaded file data has not been encoded.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#NONE
     *                 NONE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#MULTIPART_OPERATION
     *                 MULTIPART_OPERATION}: Multipart upload operation to
     *                 perform
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#NONE
     *                 NONE}: Default, indicates this is not a multipart upload
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#INIT
     *                 INIT}: Initialize a multipart file upload
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#UPLOAD_PART
     *                 UPLOAD_PART}: Uploads a part of the specified multipart
     *                 file upload
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#COMPLETE
     *                 COMPLETE}: Complete the specified multipart file upload
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#CANCEL
     *                 CANCEL}: Cancel the specified multipart file upload
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#NONE
     *                 NONE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#MULTIPART_UPLOAD_UUID
     *                 MULTIPART_UPLOAD_UUID}: UUID to uniquely identify a
     *                 multipart upload
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#MULTIPART_UPLOAD_PART_NUMBER
     *                 MULTIPART_UPLOAD_PART_NUMBER}: Incremental part number
     *                 for each part in a
     *                 multipart upload. Part numbers start at 1, increment by
     *                 1, and must be uploaded
     *                 sequentially
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#DELETE_IF_EXISTS
     *                 DELETE_IF_EXISTS}: If {@code true},
     *                 any existing files specified in {@code fileNames} will
     *                 be deleted prior to start of upload.
     *                 Otherwise the file is replaced once the upload
     *                 completes.  Rollback of the original file is
     *                 no longer possible if the upload is cancelled, aborted
     *                 or fails if the file was deleted beforehand.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#TRUE TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.UploadFilesRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UploadFilesResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public UploadFilesResponse uploadFiles(List<String> fileNames, List<ByteBuffer> fileData, Map<String, String> options) throws GPUdbException {
        UploadFilesRequest actualRequest_ = new UploadFilesRequest(fileNames, fileData, options);
        UploadFilesResponse actualResponse_ = new UploadFilesResponse();
        submitRequest("/upload/files", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Uploads one or more files to <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>.
     * <p>
     * Each file path must reside in a top-level KiFS directory, i.e. one of
     * the
     * directories listed in {@link
     * GPUdb#showDirectories(ShowDirectoriesRequest)}. The user must have write
     * permission on the directory. Nested directories are permitted in file
     * name
     * paths. Directories are deliniated with the directory separator of '/'.
     * For
     * example, given the file path '/a/b/c/d.txt', 'a' must be a KiFS
     * directory.
     * <p>
     * These characters are allowed in file name paths: letters, numbers,
     * spaces, the
     * path delimiter of '/', and the characters: '.' '-' ':' '[' ']' '(' ')'
     * '#' '='.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UploadFilesFromurlResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public UploadFilesFromurlResponse uploadFilesFromurl(UploadFilesFromurlRequest request) throws GPUdbException {
        UploadFilesFromurlResponse actualResponse_ = new UploadFilesFromurlResponse();
        submitRequest("/upload/files/fromurl", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Uploads one or more files to <a href="../../../../../tools/kifs/"
     * target="_top">KiFS</a>.
     * <p>
     * Each file path must reside in a top-level KiFS directory, i.e. one of
     * the
     * directories listed in {@link GPUdb#showDirectories(String, Map)}. The
     * user must have write
     * permission on the directory. Nested directories are permitted in file
     * name
     * paths. Directories are deliniated with the directory separator of '/'.
     * For
     * example, given the file path '/a/b/c/d.txt', 'a' must be a KiFS
     * directory.
     * <p>
     * These characters are allowed in file name paths: letters, numbers,
     * spaces, the
     * path delimiter of '/', and the characters: '.' '-' ':' '[' ']' '(' ')'
     * '#' '='.
     * 
     * @param fileNames  An array of full file name paths to be used for the
     *                   files
     *                   uploaded to KiFS. File names may have any number of
     *                   nested directories in their
     *                   paths, but the top-level directory must be an existing
     *                   KiFS directory. Each file
     *                   must reside in or under a top-level directory. A full
     *                   file name path cannot be
     *                   larger than 1024 characters.
     * @param urls  List of URLs to upload, for each respective file in {@code
     *              fileNames}.
     * @param options  Optional parameters.  The default value is an empty
     *                 {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  UploadFilesFromurlResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public UploadFilesFromurlResponse uploadFilesFromurl(List<String> fileNames, List<String> urls, Map<String, String> options) throws GPUdbException {
        UploadFilesFromurlRequest actualRequest_ = new UploadFilesFromurlRequest(fileNames, urls, options);
        UploadFilesFromurlResponse actualResponse_ = new UploadFilesFromurlResponse();
        submitRequest("/upload/files/fromurl", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeGetFeatureInfoResponse visualizeGetFeatureInfo(VisualizeGetFeatureInfoRequest request) throws GPUdbException {
        VisualizeGetFeatureInfoResponse actualResponse_ = new VisualizeGetFeatureInfoResponse();
        submitRequest("/visualize/getfeatureinfo", request, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeGetFeatureInfoResponse visualizeGetFeatureInfo(List<String> tableNames, List<String> xColumnNames, List<String> yColumnNames, List<String> geometryColumnNames, List<List<String>> queryColumnNames, String projection, double minX, double maxX, double minY, double maxY, int width, int height, int x, int y, int radius, long limit, String encoding, Map<String, String> options) throws GPUdbException {
        VisualizeGetFeatureInfoRequest actualRequest_ = new VisualizeGetFeatureInfoRequest(tableNames, xColumnNames, yColumnNames, geometryColumnNames, queryColumnNames, projection, minX, maxX, minY, maxY, width, height, x, y, radius, limit, encoding, options);
        VisualizeGetFeatureInfoResponse actualResponse_ = new VisualizeGetFeatureInfoResponse();
        submitRequest("/visualize/getfeatureinfo", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeImageResponse visualizeImage(VisualizeImageRequest request) throws GPUdbException {
        VisualizeImageResponse actualResponse_ = new VisualizeImageResponse();
        submitRequest("/visualize/image", request, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeImageResponse visualizeImage(List<String> tableNames, List<String> worldTableNames, String xColumnName, String yColumnName, String symbolColumnName, String geometryColumnName, List<List<String>> trackIds, double minX, double maxX, double minY, double maxY, int width, int height, String projection, long bgColor, Map<String, List<String>> styleOptions, Map<String, String> options) throws GPUdbException {
        VisualizeImageRequest actualRequest_ = new VisualizeImageRequest(tableNames, worldTableNames, xColumnName, yColumnName, symbolColumnName, geometryColumnName, trackIds, minX, maxX, minY, maxY, width, height, projection, bgColor, styleOptions, options);
        VisualizeImageResponse actualResponse_ = new VisualizeImageResponse();
        submitRequest("/visualize/image", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Scatter plot is the only plot type currently supported. A non-numeric
     * column can be specified as x or y column and jitters can be added to
     * them to avoid excessive overlapping. All color values must be in the
     * format RRGGBB or AARRGGBB (to specify the alpha value).
     * The image is contained in the {@code imageData} field.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  VisualizeImageChartResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public VisualizeImageChartResponse visualizeImageChart(VisualizeImageChartRequest request) throws GPUdbException {
        VisualizeImageChartResponse actualResponse_ = new VisualizeImageChartResponse();
        submitRequest("/visualize/image/chart", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Scatter plot is the only plot type currently supported. A non-numeric
     * column can be specified as x or y column and jitters can be added to
     * them to avoid excessive overlapping. All color values must be in the
     * format RRGGBB or AARRGGBB (to specify the alpha value).
     * The image is contained in the {@code imageData} field.
     * 
     * @param tableName  Name of the table containing the data to be drawn as a
     *                   chart, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param xColumnNames  Names of the columns containing the data mapped to
     *                      the x axis of a chart.
     * @param yColumnNames  Names of the columns containing the data mapped to
     *                      the y axis of a chart.
     * @param minX  Lower bound for the x column values. For non-numeric x
     *              column, each x column item is mapped to an integral value
     *              starting from 0.
     * @param maxX  Upper bound for the x column values. For non-numeric x
     *              column, each x column item is mapped to an integral value
     *              starting from 0.
     * @param minY  Lower bound for the y column values. For non-numeric y
     *              column, each y column item is mapped to an integral value
     *              starting from 0.
     * @param maxY  Upper bound for the y column values. For non-numeric y
     *              column, each y column item is mapped to an integral value
     *              starting from 0.
     * @param width  Width of the generated image in pixels.
     * @param height  Height of the generated image in pixels.
     * @param bgColor  Background color of the generated image.
     * @param styleOptions  Rendering style options for a chart.
     *                      <ul>
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#POINTCOLOR
     *                      POINTCOLOR}: The color of points in the plot
     *                      represented as a hexadecimal number.  The default
     *                      value is '0000FF'.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#POINTSIZE
     *                      POINTSIZE}: The size of points in the plot
     *                      represented as number of pixels.  The default value
     *                      is '3'.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#POINTSHAPE
     *                      POINTSHAPE}: The shape of points in the plot.
     *                      Supported values:
     *                      <ul>
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#NONE
     *                      NONE}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#CIRCLE
     *                      CIRCLE}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#SQUARE
     *                      SQUARE}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#DIAMOND
     *                      DIAMOND}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#HOLLOWCIRCLE
     *                      HOLLOWCIRCLE}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#HOLLOWSQUARE
     *                      HOLLOWSQUARE}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#HOLLOWDIAMOND
     *                      HOLLOWDIAMOND}
     *                      </ul>
     *                      The default value is {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#SQUARE
     *                      SQUARE}.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#CB_POINTCOLORS
     *                      CB_POINTCOLORS}: Point color class break
     *                      information consisting of three entries:
     *                      class-break attribute, class-break values/ranges,
     *                      and point color values. This option overrides the
     *                      pointcolor option if both are provided. Class-break
     *                      ranges are represented in the form of "min:max".
     *                      Class-break values/ranges and point color values
     *                      are separated by cb_delimiter, e.g. {"price",
     *                      "20:30;30:40;40:50", "0xFF0000;0x00FF00;0x0000FF"}.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#CB_POINTSIZES
     *                      CB_POINTSIZES}: Point size class break information
     *                      consisting of three entries: class-break attribute,
     *                      class-break values/ranges, and point size values.
     *                      This option overrides the pointsize option if both
     *                      are provided. Class-break ranges are represented in
     *                      the form of "min:max". Class-break values/ranges
     *                      and point size values are separated by
     *                      cb_delimiter, e.g. {"states", "NY;TX;CA", "3;5;7"}.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#CB_POINTSHAPES
     *                      CB_POINTSHAPES}: Point shape class break
     *                      information consisting of three entries:
     *                      class-break attribute, class-break values/ranges,
     *                      and point shape names. This option overrides the
     *                      pointshape option if both are provided. Class-break
     *                      ranges are represented in the form of "min:max".
     *                      Class-break values/ranges and point shape names are
     *                      separated by cb_delimiter, e.g. {"states",
     *                      "NY;TX;CA", "circle;square;diamond"}.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#CB_DELIMITER
     *                      CB_DELIMITER}: A character or string which
     *                      separates per-class values in a class-break style
     *                      option string.  The default value is ';'.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#X_ORDER_BY
     *                      X_ORDER_BY}: An expression or aggregate expression
     *                      by which non-numeric x column values are sorted,
     *                      e.g. "avg(price) descending".
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#Y_ORDER_BY
     *                      Y_ORDER_BY}: An expression or aggregate expression
     *                      by which non-numeric y column values are sorted,
     *                      e.g. "avg(price)", which defaults to "avg(price)
     *                      ascending".
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#SCALE_TYPE_X
     *                      SCALE_TYPE_X}: Type of x axis scale.
     *                      Supported values:
     *                      <ul>
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#NONE
     *                      NONE}: No scale is applied to the x axis.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#LOG
     *                      LOG}: A base-10 log scale is applied to the x axis.
     *                      </ul>
     *                      The default value is {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#NONE
     *                      NONE}.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#SCALE_TYPE_Y
     *                      SCALE_TYPE_Y}: Type of y axis scale.
     *                      Supported values:
     *                      <ul>
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#NONE
     *                      NONE}: No scale is applied to the y axis.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#LOG
     *                      LOG}: A base-10 log scale is applied to the y axis.
     *                      </ul>
     *                      The default value is {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#NONE
     *                      NONE}.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#MIN_MAX_SCALED
     *                      MIN_MAX_SCALED}: If this options is set to "false",
     *                      this endpoint expects request's min/max values are
     *                      not yet scaled. They will be scaled according to
     *                      scale_type_x or scale_type_y for response. If this
     *                      options is set to "true", this endpoint expects
     *                      request's min/max values are already scaled
     *                      according to scale_type_x/scale_type_y. Response's
     *                      min/max values will be equal to request's min/max
     *                      values.  The default value is 'false'.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#JITTER_X
     *                      JITTER_X}: Amplitude of horizontal jitter applied
     *                      to non-numeric x column values.  The default value
     *                      is '0.0'.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#JITTER_Y
     *                      JITTER_Y}: Amplitude of vertical jitter applied to
     *                      non-numeric y column values.  The default value is
     *                      '0.0'.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeImageChartRequest.StyleOptions#PLOT_ALL
     *                      PLOT_ALL}: If this options is set to "true", all
     *                      non-numeric column values are plotted ignoring
     *                      min_x, max_x, min_y and max_y parameters.  The
     *                      default value is 'false'.
     *                      </ul>
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeImageChartRequest.Options#IMAGE_ENCODING
     *                 IMAGE_ENCODING}: Encoding to be applied to the output
     *                 image. When using JSON serialization it is recommended
     *                 to specify this as {@code base64}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeImageChartRequest.Options#BASE64
     *                 BASE64}: Apply base64 encoding to the output image.
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeImageChartRequest.Options#NONE
     *                 NONE}: Do not apply any additional encoding to the
     *                 output image.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.VisualizeImageChartRequest.Options#NONE
     *                 NONE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  VisualizeImageChartResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public VisualizeImageChartResponse visualizeImageChart(String tableName, List<String> xColumnNames, List<String> yColumnNames, double minX, double maxX, double minY, double maxY, int width, int height, String bgColor, Map<String, List<String>> styleOptions, Map<String, String> options) throws GPUdbException {
        VisualizeImageChartRequest actualRequest_ = new VisualizeImageChartRequest(tableName, xColumnNames, yColumnNames, minX, maxX, minY, maxY, width, height, bgColor, styleOptions, options);
        VisualizeImageChartResponse actualResponse_ = new VisualizeImageChartResponse();
        submitRequest("/visualize/image/chart", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeImageClassbreakResponse visualizeImageClassbreak(VisualizeImageClassbreakRequest request) throws GPUdbException {
        VisualizeImageClassbreakResponse actualResponse_ = new VisualizeImageClassbreakResponse();
        submitRequest("/visualize/image/classbreak", request, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeImageClassbreakResponse visualizeImageClassbreak(List<String> tableNames, List<String> worldTableNames, String xColumnName, String yColumnName, String symbolColumnName, String geometryColumnName, List<List<String>> trackIds, String cbAttr, List<String> cbVals, String cbPointcolorAttr, List<String> cbPointcolorVals, String cbPointalphaAttr, List<String> cbPointalphaVals, String cbPointsizeAttr, List<String> cbPointsizeVals, String cbPointshapeAttr, List<String> cbPointshapeVals, double minX, double maxX, double minY, double maxY, int width, int height, String projection, long bgColor, Map<String, List<String>> styleOptions, Map<String, String> options, List<Integer> cbTransparencyVec) throws GPUdbException {
        VisualizeImageClassbreakRequest actualRequest_ = new VisualizeImageClassbreakRequest(tableNames, worldTableNames, xColumnName, yColumnName, symbolColumnName, geometryColumnName, trackIds, cbAttr, cbVals, cbPointcolorAttr, cbPointcolorVals, cbPointalphaAttr, cbPointalphaVals, cbPointsizeAttr, cbPointsizeVals, cbPointshapeAttr, cbPointshapeVals, minX, maxX, minY, maxY, width, height, projection, bgColor, styleOptions, options, cbTransparencyVec);
        VisualizeImageClassbreakResponse actualResponse_ = new VisualizeImageClassbreakResponse();
        submitRequest("/visualize/image/classbreak", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeImageContourResponse visualizeImageContour(VisualizeImageContourRequest request) throws GPUdbException {
        VisualizeImageContourResponse actualResponse_ = new VisualizeImageContourResponse();
        submitRequest("/visualize/image/contour", request, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeImageContourResponse visualizeImageContour(List<String> tableNames, String xColumnName, String yColumnName, String valueColumnName, double minX, double maxX, double minY, double maxY, int width, int height, String projection, Map<String, String> styleOptions, Map<String, String> options) throws GPUdbException {
        VisualizeImageContourRequest actualRequest_ = new VisualizeImageContourRequest(tableNames, xColumnName, yColumnName, valueColumnName, minX, maxX, minY, maxY, width, height, projection, styleOptions, options);
        VisualizeImageContourResponse actualResponse_ = new VisualizeImageContourResponse();
        submitRequest("/visualize/image/contour", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeImageHeatmapResponse visualizeImageHeatmap(VisualizeImageHeatmapRequest request) throws GPUdbException {
        VisualizeImageHeatmapResponse actualResponse_ = new VisualizeImageHeatmapResponse();
        submitRequest("/visualize/image/heatmap", request, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeImageHeatmapResponse visualizeImageHeatmap(List<String> tableNames, String xColumnName, String yColumnName, String valueColumnName, String geometryColumnName, double minX, double maxX, double minY, double maxY, int width, int height, String projection, Map<String, String> styleOptions, Map<String, String> options) throws GPUdbException {
        VisualizeImageHeatmapRequest actualRequest_ = new VisualizeImageHeatmapRequest(tableNames, xColumnName, yColumnName, valueColumnName, geometryColumnName, minX, maxX, minY, maxY, width, height, projection, styleOptions, options);
        VisualizeImageHeatmapResponse actualResponse_ = new VisualizeImageHeatmapResponse();
        submitRequest("/visualize/image/heatmap", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeImageLabelsResponse visualizeImageLabels(VisualizeImageLabelsRequest request) throws GPUdbException {
        VisualizeImageLabelsResponse actualResponse_ = new VisualizeImageLabelsResponse();
        submitRequest("/visualize/image/labels", request, actualResponse_, false);
        return actualResponse_;
    }



    public VisualizeImageLabelsResponse visualizeImageLabels(String tableName, String xColumnName, String yColumnName, String xOffset, String yOffset, String textString, String font, String textColor, String textAngle, String textScale, String drawBox, String drawLeader, String lineWidth, String lineColor, String fillColor, String leaderXColumnName, String leaderYColumnName, String filter, double minX, double maxX, double minY, double maxY, int width, int height, String projection, Map<String, String> options) throws GPUdbException {
        VisualizeImageLabelsRequest actualRequest_ = new VisualizeImageLabelsRequest(tableName, xColumnName, yColumnName, xOffset, yOffset, textString, font, textColor, textAngle, textScale, drawBox, drawLeader, lineWidth, lineColor, fillColor, leaderXColumnName, leaderYColumnName, filter, minX, maxX, minY, maxY, width, height, projection, options);
        VisualizeImageLabelsResponse actualResponse_ = new VisualizeImageLabelsResponse();
        submitRequest("/visualize/image/labels", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Generate an image containing isolines for travel results using an
     * existing graph. Isolines represent curves of equal cost, with cost
     * typically
     * referring to the time or distance assigned as the weights of the
     * underlying
     * graph. See
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * for more information on graphs.
     * 
     * @param request  Request object containing the parameters for the
     *                 operation.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  VisualizeIsochroneResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public VisualizeIsochroneResponse visualizeIsochrone(VisualizeIsochroneRequest request) throws GPUdbException {
        VisualizeIsochroneResponse actualResponse_ = new VisualizeIsochroneResponse();
        submitRequest("/visualize/isochrone", request, actualResponse_, false);
        return actualResponse_;
    }



    /**
     * Generate an image containing isolines for travel results using an
     * existing graph. Isolines represent curves of equal cost, with cost
     * typically
     * referring to the time or distance assigned as the weights of the
     * underlying
     * graph. See
     * <a href="../../../../../graph_solver/network_graph_solver/"
     * target="_top">Network Graphs & Solvers</a>
     * for more information on graphs.
     * 
     * @param graphName  Name of the graph on which the isochrone is to be
     *                   computed.
     * @param sourceNode  Starting vertex on the underlying graph from/to which
     *                    the isochrones are created.
     * @param maxSolutionRadius  Extent of the search radius around {@code
     *                           sourceNode}. Set to '-1.0' for unrestricted
     *                           search radius.  The default value is -1.0.
     * @param weightsOnEdges  Additional weights to apply to the edges of an
     *                        existing graph. Weights must be specified using
     *                        <a
     *                        href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *                        target="_top">identifiers</a>; identifiers are
     *                        grouped as <a
     *                        href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *                        target="_top">combinations</a>. Identifiers can
     *                        be used with existing column names, e.g.,
     *                        'table.column AS WEIGHTS_EDGE_ID', or
     *                        expressions, e.g., 'ST_LENGTH(wkt) AS
     *                        WEIGHTS_VALUESPECIFIED'. Any provided weights
     *                        will be added (in the case of
     *                        'WEIGHTS_VALUESPECIFIED') to or multiplied with
     *                        (in the case of 'WEIGHTS_FACTORSPECIFIED') the
     *                        existing weight(s).  The default value is an
     *                        empty {@link List}.
     * @param restrictions  Additional restrictions to apply to the nodes/edges
     *                      of an existing graph. Restrictions must be
     *                      specified using <a
     *                      href="../../../../../graph_solver/network_graph_solver/#identifiers"
     *                      target="_top">identifiers</a>; identifiers are
     *                      grouped as <a
     *                      href="../../../../../graph_solver/network_graph_solver/#id-combos"
     *                      target="_top">combinations</a>. Identifiers can be
     *                      used with existing column names, e.g.,
     *                      'table.column AS RESTRICTIONS_EDGE_ID', or
     *                      expressions, e.g., 'column/2 AS
     *                      RESTRICTIONS_VALUECOMPARED'. If {@code
     *                      remove_previous_restrictions} is set to {@code
     *                      true}, any provided restrictions will replace the
     *                      existing restrictions. If {@code
     *                      remove_previous_restrictions} is set to {@code
     *                      false}, any provided restrictions will be added (in
     *                      the case of 'RESTRICTIONS_VALUECOMPARED') to or
     *                      replaced (in the case of
     *                      'RESTRICTIONS_ONOFFCOMPARED').  The default value
     *                      is an empty {@link List}.
     * @param numLevels  Number of equally-separated isochrones to compute.
     *                   The default value is 1.
     * @param generateImage  If set to {@code true}, generates a PNG image of
     *                       the isochrones in the response.
     *                       Supported values:
     *                       <ul>
     *                               <li> {@link
     *                       com.gpudb.protocol.VisualizeIsochroneRequest.GenerateImage#TRUE
     *                       TRUE}
     *                               <li> {@link
     *                       com.gpudb.protocol.VisualizeIsochroneRequest.GenerateImage#FALSE
     *                       FALSE}
     *                       </ul>
     *                       The default value is {@link
     *                       com.gpudb.protocol.VisualizeIsochroneRequest.GenerateImage#TRUE
     *                       TRUE}.
     * @param levelsTable  Name of the table to output the isochrones to, in
     *                     [schema_name.]table_name format, using standard <a
     *                     href="../../../../../concepts/tables/#table-name-resolution"
     *                     target="_top">name resolution rules</a> and meeting
     *                     <a
     *                     href="../../../../../concepts/tables/#table-naming-criteria"
     *                     target="_top">table naming criteria</a>.  The table
     *                     will contain levels and their corresponding WKT
     *                     geometry. If no value is provided, the table is not
     *                     generated.  The default value is ''.
     * @param styleOptions  Various style related options of the isochrone
     *                      image.
     *                      <ul>
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#LINE_SIZE
     *                      LINE_SIZE}: The width of the contour lines in
     *                      pixels.  The default value is '3'.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#COLOR
     *                      COLOR}: Color of generated isolines. All color
     *                      values must be in the format RRGGBB or AARRGGBB (to
     *                      specify the alpha value). If alpha is specified and
     *                      flooded contours are enabled, it will be used for
     *                      as the transparency of the latter.  The default
     *                      value is 'FF696969'.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#BG_COLOR
     *                      BG_COLOR}: When {@code generateImage} is set to
     *                      {@code true}, background color of the generated
     *                      image. All color values must be in the format
     *                      RRGGBB or AARRGGBB (to specify the alpha value).
     *                      The default value is '00000000'.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#TEXT_COLOR
     *                      TEXT_COLOR}: When {@code add_labels} is set to
     *                      {@code true}, color for the labels. All color
     *                      values must be in the format RRGGBB or AARRGGBB (to
     *                      specify the alpha value).  The default value is
     *                      'FF000000'.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#COLORMAP
     *                      COLORMAP}: Colormap for contours or fill-in regions
     *                      when applicable. All color values must be in the
     *                      format RRGGBB or AARRGGBB (to specify the alpha
     *                      value)
     *                      Supported values:
     *                      <ul>
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#JET
     *                      JET}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#ACCENT
     *                      ACCENT}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#AFMHOT
     *                      AFMHOT}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#AUTUMN
     *                      AUTUMN}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#BINARY
     *                      BINARY}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#BLUES
     *                      BLUES}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#BONE
     *                      BONE}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#BRBG
     *                      BRBG}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#BRG
     *                      BRG}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#BUGN
     *                      BUGN}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#BUPU
     *                      BUPU}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#BWR
     *                      BWR}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#CMRMAP
     *                      CMRMAP}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#COOL
     *                      COOL}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#COOLWARM
     *                      COOLWARM}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#COPPER
     *                      COPPER}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#CUBEHELIX
     *                      CUBEHELIX}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#DARK2
     *                      DARK2}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#FLAG
     *                      FLAG}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GIST_EARTH
     *                      GIST_EARTH}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GIST_GRAY
     *                      GIST_GRAY}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GIST_HEAT
     *                      GIST_HEAT}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GIST_NCAR
     *                      GIST_NCAR}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GIST_RAINBOW
     *                      GIST_RAINBOW}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GIST_STERN
     *                      GIST_STERN}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GIST_YARG
     *                      GIST_YARG}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GNBU
     *                      GNBU}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GNUPLOT2
     *                      GNUPLOT2}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GNUPLOT
     *                      GNUPLOT}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GRAY
     *                      GRAY}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GREENS
     *                      GREENS}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#GREYS
     *                      GREYS}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#HOT
     *                      HOT}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#HSV
     *                      HSV}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#INFERNO
     *                      INFERNO}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#MAGMA
     *                      MAGMA}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#NIPY_SPECTRAL
     *                      NIPY_SPECTRAL}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#OCEAN
     *                      OCEAN}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#ORANGES
     *                      ORANGES}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#ORRD
     *                      ORRD}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PAIRED
     *                      PAIRED}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PASTEL1
     *                      PASTEL1}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PASTEL2
     *                      PASTEL2}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PINK
     *                      PINK}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PIYG
     *                      PIYG}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PLASMA
     *                      PLASMA}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PRGN
     *                      PRGN}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PRISM
     *                      PRISM}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PUBU
     *                      PUBU}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PUBUGN
     *                      PUBUGN}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PUOR
     *                      PUOR}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PURD
     *                      PURD}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#PURPLES
     *                      PURPLES}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#RAINBOW
     *                      RAINBOW}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#RDBU
     *                      RDBU}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#RDGY
     *                      RDGY}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#RDPU
     *                      RDPU}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#RDYLBU
     *                      RDYLBU}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#RDYLGN
     *                      RDYLGN}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#REDS
     *                      REDS}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#SEISMIC
     *                      SEISMIC}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#SET1
     *                      SET1}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#SET2
     *                      SET2}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#SET3
     *                      SET3}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#SPECTRAL
     *                      SPECTRAL}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#SPRING
     *                      SPRING}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#SUMMER
     *                      SUMMER}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#TERRAIN
     *                      TERRAIN}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#VIRIDIS
     *                      VIRIDIS}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#WINTER
     *                      WINTER}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#WISTIA
     *                      WISTIA}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#YLGN
     *                      YLGN}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#YLGNBU
     *                      YLGNBU}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#YLORBR
     *                      YLORBR}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#YLORRD
     *                      YLORRD}
     *                      </ul>
     *                      The default value is {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.StyleOptions#JET
     *                      JET}.
     *                      </ul>
     * @param solveOptions  Solver specific parameters
     *                      <ul>
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.SolveOptions#REMOVE_PREVIOUS_RESTRICTIONS
     *                      REMOVE_PREVIOUS_RESTRICTIONS}: Ignore the
     *                      restrictions applied to the graph during the
     *                      creation stage and only use the restrictions
     *                      specified in this request if set to {@code true}.
     *                      Supported values:
     *                      <ul>
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.SolveOptions#TRUE
     *                      TRUE}
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.SolveOptions#FALSE
     *                      FALSE}
     *                      </ul>
     *                      The default value is {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.SolveOptions#FALSE
     *                      FALSE}.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.SolveOptions#RESTRICTION_THRESHOLD_VALUE
     *                      RESTRICTION_THRESHOLD_VALUE}: Value-based
     *                      restriction comparison. Any node or edge with a
     *                      'RESTRICTIONS_VALUECOMPARED' value greater than the
     *                      {@code restriction_threshold_value} will not be
     *                      included in the solution.
     *                              <li> {@link
     *                      com.gpudb.protocol.VisualizeIsochroneRequest.SolveOptions#UNIFORM_WEIGHTS
     *                      UNIFORM_WEIGHTS}: When specified, assigns the given
     *                      value to all the edges in the graph. Note that
     *                      weights provided in {@code weightsOnEdges} will
     *                      override this value.
     *                      </ul>
     *                      The default value is an empty {@link Map}.
     * @param contourOptions  Solver specific parameters
     *                        <ul>
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#PROJECTION
     *                        PROJECTION}: Spatial Reference System (i.e. EPSG
     *                        Code).
     *                        Supported values:
     *                        <ul>
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#_3857
     *                        _3857}
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#_102100
     *                        _102100}
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#_900913
     *                        _900913}
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#EPSG_4326
     *                        EPSG_4326}
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#PLATE_CARREE
     *                        PLATE_CARREE}
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#EPSG_900913
     *                        EPSG_900913}
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#EPSG_102100
     *                        EPSG_102100}
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#EPSG_3857
     *                        EPSG_3857}
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#WEB_MERCATOR
     *                        WEB_MERCATOR}
     *                        </ul>
     *                        The default value is {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#PLATE_CARREE
     *                        PLATE_CARREE}.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#WIDTH
     *                        WIDTH}: When {@code generateImage} is set to
     *                        {@code true}, width of the generated image.  The
     *                        default value is '512'.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#HEIGHT
     *                        HEIGHT}: When {@code generateImage} is set to
     *                        {@code true}, height of the generated image. If
     *                        the default value is used, the {@code height} is
     *                        set to the value resulting from multiplying the
     *                        aspect ratio by the {@code width}.  The default
     *                        value is '-1'.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#SEARCH_RADIUS
     *                        SEARCH_RADIUS}: When interpolating the graph
     *                        solution to generate the isochrone, neighborhood
     *                        of influence of sample data (in percent of the
     *                        image/grid).  The default value is '20'.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#GRID_SIZE
     *                        GRID_SIZE}: When interpolating the graph solution
     *                        to generate the isochrone, number of subdivisions
     *                        along the x axis when building the grid (the y is
     *                        computed using the aspect ratio of the output
     *                        image).  The default value is '100'.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#COLOR_ISOLINES
     *                        COLOR_ISOLINES}: Color each isoline according to
     *                        the colormap; otherwise, use the foreground
     *                        color.
     *                        Supported values:
     *                        <ul>
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#TRUE
     *                        TRUE}
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#FALSE
     *                        FALSE}
     *                        </ul>
     *                        The default value is {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#TRUE
     *                        TRUE}.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#ADD_LABELS
     *                        ADD_LABELS}: If set to {@code true}, add labels
     *                        to the isolines.
     *                        Supported values:
     *                        <ul>
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#TRUE
     *                        TRUE}
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#FALSE
     *                        FALSE}
     *                        </ul>
     *                        The default value is {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#FALSE
     *                        FALSE}.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#LABELS_FONT_SIZE
     *                        LABELS_FONT_SIZE}: When {@code add_labels} is set
     *                        to {@code true}, size of the font (in pixels) to
     *                        use for labels.  The default value is '12'.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#LABELS_FONT_FAMILY
     *                        LABELS_FONT_FAMILY}: When {@code add_labels} is
     *                        set to {@code true}, font name to be used when
     *                        adding labels.  The default value is 'arial'.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#LABELS_SEARCH_WINDOW
     *                        LABELS_SEARCH_WINDOW}: When {@code add_labels} is
     *                        set to {@code true}, a search window is used to
     *                        rate the local quality of each isoline. Smooth,
     *                        continuous, long stretches with relatively flat
     *                        angles are favored. The provided value is
     *                        multiplied by the {@code labels_font_size} to
     *                        calculate the final window size.  The default
     *                        value is '4'.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#LABELS_INTRALEVEL_SEPARATION
     *                        LABELS_INTRALEVEL_SEPARATION}: When {@code
     *                        add_labels} is set to {@code true}, this value
     *                        determines the  distance (in multiples of the
     *                        {@code labels_font_size}) to use when separating
     *                        labels of different values.  The default value is
     *                        '4'.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#LABELS_INTERLEVEL_SEPARATION
     *                        LABELS_INTERLEVEL_SEPARATION}: When {@code
     *                        add_labels} is set to {@code true}, this value
     *                        determines the distance (in percent of the total
     *                        window size) to use when separating labels of the
     *                        same value.  The default value is '20'.
     *                                <li> {@link
     *                        com.gpudb.protocol.VisualizeIsochroneRequest.ContourOptions#LABELS_MAX_ANGLE
     *                        LABELS_MAX_ANGLE}: When {@code add_labels} is set
     *                        to {@code true}, maximum angle (in degrees) from
     *                        the vertical to use when adding labels.  The
     *                        default value is '60'.
     *                        </ul>
     *                        The default value is an empty {@link Map}.
     * @param options  Additional parameters
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#SOLVE_TABLE
     *                 SOLVE_TABLE}: Name of the table to host intermediate
     *                 solve results, in [schema_name.]table_name format, using
     *                 standard <a
     *                 href="../../../../../concepts/tables/#table-name-resolution"
     *                 target="_top">name resolution rules</a> and meeting <a
     *                 href="../../../../../concepts/tables/#table-naming-criteria"
     *                 target="_top">table naming criteria</a>.  This table
     *                 will contain the position and cost for each vertex in
     *                 the graph. If the default value is used, a temporary
     *                 table is created and deleted once the solution is
     *                 calculated.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#IS_REPLICATED
     *                 IS_REPLICATED}: If set to {@code true}, replicate the
     *                 {@code solve_table}.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#TRUE
     *                 TRUE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#DATA_MIN_X
     *                 DATA_MIN_X}: Lower bound for the x values. If not
     *                 provided, it will be computed from the bounds of the
     *                 input data.
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#DATA_MAX_X
     *                 DATA_MAX_X}: Upper bound for the x values. If not
     *                 provided, it will be computed from the bounds of the
     *                 input data.
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#DATA_MIN_Y
     *                 DATA_MIN_Y}: Lower bound for the y values. If not
     *                 provided, it will be computed from the bounds of the
     *                 input data.
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#DATA_MAX_Y
     *                 DATA_MAX_Y}: Upper bound for the y values. If not
     *                 provided, it will be computed from the bounds of the
     *                 input data.
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#CONCAVITY_LEVEL
     *                 CONCAVITY_LEVEL}: Factor to qualify the concavity of the
     *                 isochrone curves. The lower the value, the more convex
     *                 (with '0' being completely convex and '1' being the most
     *                 concave).  The default value is '0.5'.
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#USE_PRIORITY_QUEUE_SOLVERS
     *                 USE_PRIORITY_QUEUE_SOLVERS}: sets the solver methods
     *                 explicitly if true
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#TRUE
     *                 TRUE}: uses the solvers scheduled for 'shortest_path'
     *                 and 'inverse_shortest_path' based on solve_direction
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#FALSE
     *                 FALSE}: uses the solvers 'priority_queue' and
     *                 'inverse_priority_queue' based on solve_direction
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#SOLVE_DIRECTION
     *                 SOLVE_DIRECTION}: Specify whether we are going to the
     *                 source node, or starting from it.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#FROM_SOURCE
     *                 FROM_SOURCE}: Shortest path to get to the source
     *                 (inverse Dijkstra)
     *                         <li> {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#TO_SOURCE
     *                 TO_SOURCE}: Shortest path to source (Dijkstra)
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.VisualizeIsochroneRequest.Options#FROM_SOURCE
     *                 FROM_SOURCE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return Response object containing the results of the operation.
     * 
     * @see  VisualizeIsochroneResponse
     * 
     * @throws GPUdbException  if an error occurs during the operation.
     * 
     */
    public VisualizeIsochroneResponse visualizeIsochrone(String graphName, String sourceNode, double maxSolutionRadius, List<String> weightsOnEdges, List<String> restrictions, int numLevels, boolean generateImage, String levelsTable, Map<String, String> styleOptions, Map<String, String> solveOptions, Map<String, String> contourOptions, Map<String, String> options) throws GPUdbException {
        VisualizeIsochroneRequest actualRequest_ = new VisualizeIsochroneRequest(graphName, sourceNode, maxSolutionRadius, weightsOnEdges, restrictions, numLevels, generateImage, levelsTable, styleOptions, solveOptions, contourOptions, options);
        VisualizeIsochroneResponse actualResponse_ = new VisualizeIsochroneResponse();
        submitRequest("/visualize/isochrone", actualRequest_, actualResponse_, false);
        return actualResponse_;
    }


}
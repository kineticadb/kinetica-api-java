/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#alterBackup(AlterBackupRequest) GPUdb.alterBackup}.
 */
public class AlterBackupResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("AlterBackupResponse")
            .namespace("com.gpudb")
            .fields()
                .name("backupName").type().stringType().noDefault()
                .name("backupId").type().longType().noDefault()
                .name("totalBytes").type().longType().noDefault()
                .name("totalNumberOfRecords").type().longType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private String backupName;
    private long backupId;
    private long totalBytes;
    private long totalNumberOfRecords;
    private Map<String, String> info;

    /**
     * Constructs an AlterBackupResponse object with default parameters.
     */
    public AlterBackupResponse() {
    }

    /**
     * Value of {@link com.gpudb.protocol.AlterBackupRequest#getBackupName()
     * backupName}.
     *
     * @return The current value of {@code backupName}.
     */
    public String getBackupName() {
        return backupName;
    }

    /**
     * Value of {@link com.gpudb.protocol.AlterBackupRequest#getBackupName()
     * backupName}.
     *
     * @param backupName  The new value for {@code backupName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AlterBackupResponse setBackupName(String backupName) {
        this.backupName = (backupName == null) ? "" : backupName;
        return this;
    }

    /**
     * Backup ID.
     *
     * @return The current value of {@code backupId}.
     */
    public long getBackupId() {
        return backupId;
    }

    /**
     * Backup ID.
     *
     * @param backupId  The new value for {@code backupId}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AlterBackupResponse setBackupId(long backupId) {
        this.backupId = backupId;
        return this;
    }

    /**
     * Total size of files affected by alter operation
     *
     * @return The current value of {@code totalBytes}.
     */
    public long getTotalBytes() {
        return totalBytes;
    }

    /**
     * Total size of files affected by alter operation
     *
     * @param totalBytes  The new value for {@code totalBytes}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AlterBackupResponse setTotalBytes(long totalBytes) {
        this.totalBytes = totalBytes;
        return this;
    }

    /**
     * Total number of records affected alter operation
     *
     * @return The current value of {@code totalNumberOfRecords}.
     */
    public long getTotalNumberOfRecords() {
        return totalNumberOfRecords;
    }

    /**
     * Total number of records affected alter operation
     *
     * @param totalNumberOfRecords  The new value for {@code
     *                              totalNumberOfRecords}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AlterBackupResponse setTotalNumberOfRecords(long totalNumberOfRecords) {
        this.totalNumberOfRecords = totalNumberOfRecords;
        return this;
    }

    /**
     * Additional information.
     *
     * @return The current value of {@code info}.
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * Additional information.
     *
     * @param info  The new value for {@code info}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AlterBackupResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.backupName;

            case 1:
                return this.backupId;

            case 2:
                return this.totalBytes;

            case 3:
                return this.totalNumberOfRecords;

            case 4:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.backupName = (String)value;
                break;

            case 1:
                this.backupId = (Long)value;
                break;

            case 2:
                this.totalBytes = (Long)value;
                break;

            case 3:
                this.totalNumberOfRecords = (Long)value;
                break;

            case 4:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        AlterBackupResponse that = (AlterBackupResponse)obj;

        return ( this.backupName.equals( that.backupName )
                 && ( this.backupId == that.backupId )
                 && ( this.totalBytes == that.totalBytes )
                 && ( this.totalNumberOfRecords == that.totalNumberOfRecords )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "backupName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.backupName ) );
        builder.append( ", " );
        builder.append( gd.toString( "backupId" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.backupId ) );
        builder.append( ", " );
        builder.append( gd.toString( "totalBytes" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.totalBytes ) );
        builder.append( ", " );
        builder.append( gd.toString( "totalNumberOfRecords" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.totalNumberOfRecords ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.backupName.hashCode();
        hashCode = (31 * hashCode) + ((Long)this.backupId).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.totalBytes).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.totalNumberOfRecords).hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }
}

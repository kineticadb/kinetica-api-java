/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#restoreBackup(RestoreBackupRequest) GPUdb.restoreBackup}.
 */
public class RestoreBackupResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("RestoreBackupResponse")
            .namespace("com.gpudb")
            .fields()
                .name("backupName").type().stringType().noDefault()
                .name("backupId").type().longType().noDefault()
                .name("restoredBytes").type().longType().noDefault()
                .name("restoredFiles").type().longType().noDefault()
                .name("restoredRecords").type().longType().noDefault()
                .name("restoredObjects").type().map().values().stringType().noDefault()
                .name("renamedObjects").type().map().values().stringType().noDefault()
                .name("failedObjects").type().map().values().stringType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private String backupName;
    private long backupId;
    private long restoredBytes;
    private long restoredFiles;
    private long restoredRecords;
    private Map<String, String> restoredObjects;
    private Map<String, String> renamedObjects;
    private Map<String, String> failedObjects;
    private Map<String, String> info;

    /**
     * Constructs a RestoreBackupResponse object with default parameters.
     */
    public RestoreBackupResponse() {
    }

    /**
     * The backup name
     *
     * @return The current value of {@code backupName}.
     */
    public String getBackupName() {
        return backupName;
    }

    /**
     * The backup name
     *
     * @param backupName  The new value for {@code backupName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public RestoreBackupResponse setBackupName(String backupName) {
        this.backupName = (backupName == null) ? "" : backupName;
        return this;
    }

    /**
     * The backup ID that was restored
     *
     * @return The current value of {@code backupId}.
     */
    public long getBackupId() {
        return backupId;
    }

    /**
     * The backup ID that was restored
     *
     * @param backupId  The new value for {@code backupId}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public RestoreBackupResponse setBackupId(long backupId) {
        this.backupId = backupId;
        return this;
    }

    /**
     * Total size of data restored from backup
     *
     * @return The current value of {@code restoredBytes}.
     */
    public long getRestoredBytes() {
        return restoredBytes;
    }

    /**
     * Total size of data restored from backup
     *
     * @param restoredBytes  The new value for {@code restoredBytes}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public RestoreBackupResponse setRestoredBytes(long restoredBytes) {
        this.restoredBytes = restoredBytes;
        return this;
    }

    /**
     * Total number of files restored from backup
     *
     * @return The current value of {@code restoredFiles}.
     */
    public long getRestoredFiles() {
        return restoredFiles;
    }

    /**
     * Total number of files restored from backup
     *
     * @param restoredFiles  The new value for {@code restoredFiles}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public RestoreBackupResponse setRestoredFiles(long restoredFiles) {
        this.restoredFiles = restoredFiles;
        return this;
    }

    /**
     * Total number of records restored from backup
     *
     * @return The current value of {@code restoredRecords}.
     */
    public long getRestoredRecords() {
        return restoredRecords;
    }

    /**
     * Total number of records restored from backup
     *
     * @param restoredRecords  The new value for {@code restoredRecords}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public RestoreBackupResponse setRestoredRecords(long restoredRecords) {
        this.restoredRecords = restoredRecords;
        return this;
    }

    /**
     * Objects that were successfully restored and their associated types.
     *
     * @return The current value of {@code restoredObjects}.
     */
    public Map<String, String> getRestoredObjects() {
        return restoredObjects;
    }

    /**
     * Objects that were successfully restored and their associated types.
     *
     * @param restoredObjects  The new value for {@code restoredObjects}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public RestoreBackupResponse setRestoredObjects(Map<String, String> restoredObjects) {
        this.restoredObjects = (restoredObjects == null) ? new LinkedHashMap<String, String>() : restoredObjects;
        return this;
    }

    /**
     * Original and new names of objects that were successfully restored and
     * their associated types.
     *
     * @return The current value of {@code renamedObjects}.
     */
    public Map<String, String> getRenamedObjects() {
        return renamedObjects;
    }

    /**
     * Original and new names of objects that were successfully restored and
     * their associated types.
     *
     * @param renamedObjects  The new value for {@code renamedObjects}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public RestoreBackupResponse setRenamedObjects(Map<String, String> renamedObjects) {
        this.renamedObjects = (renamedObjects == null) ? new LinkedHashMap<String, String>() : renamedObjects;
        return this;
    }

    /**
     * Objects that failed to be restored and their associated types.
     *
     * @return The current value of {@code failedObjects}.
     */
    public Map<String, String> getFailedObjects() {
        return failedObjects;
    }

    /**
     * Objects that failed to be restored and their associated types.
     *
     * @param failedObjects  The new value for {@code failedObjects}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public RestoreBackupResponse setFailedObjects(Map<String, String> failedObjects) {
        this.failedObjects = (failedObjects == null) ? new LinkedHashMap<String, String>() : failedObjects;
        return this;
    }

    /**
     * Additional information.
     *
     * @return The current value of {@code info}.
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * Additional information.
     *
     * @param info  The new value for {@code info}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public RestoreBackupResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.backupName;

            case 1:
                return this.backupId;

            case 2:
                return this.restoredBytes;

            case 3:
                return this.restoredFiles;

            case 4:
                return this.restoredRecords;

            case 5:
                return this.restoredObjects;

            case 6:
                return this.renamedObjects;

            case 7:
                return this.failedObjects;

            case 8:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.backupName = (String)value;
                break;

            case 1:
                this.backupId = (Long)value;
                break;

            case 2:
                this.restoredBytes = (Long)value;
                break;

            case 3:
                this.restoredFiles = (Long)value;
                break;

            case 4:
                this.restoredRecords = (Long)value;
                break;

            case 5:
                this.restoredObjects = (Map<String, String>)value;
                break;

            case 6:
                this.renamedObjects = (Map<String, String>)value;
                break;

            case 7:
                this.failedObjects = (Map<String, String>)value;
                break;

            case 8:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        RestoreBackupResponse that = (RestoreBackupResponse)obj;

        return ( this.backupName.equals( that.backupName )
                 && ( this.backupId == that.backupId )
                 && ( this.restoredBytes == that.restoredBytes )
                 && ( this.restoredFiles == that.restoredFiles )
                 && ( this.restoredRecords == that.restoredRecords )
                 && this.restoredObjects.equals( that.restoredObjects )
                 && this.renamedObjects.equals( that.renamedObjects )
                 && this.failedObjects.equals( that.failedObjects )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "backupName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.backupName ) );
        builder.append( ", " );
        builder.append( gd.toString( "backupId" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.backupId ) );
        builder.append( ", " );
        builder.append( gd.toString( "restoredBytes" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.restoredBytes ) );
        builder.append( ", " );
        builder.append( gd.toString( "restoredFiles" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.restoredFiles ) );
        builder.append( ", " );
        builder.append( gd.toString( "restoredRecords" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.restoredRecords ) );
        builder.append( ", " );
        builder.append( gd.toString( "restoredObjects" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.restoredObjects ) );
        builder.append( ", " );
        builder.append( gd.toString( "renamedObjects" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.renamedObjects ) );
        builder.append( ", " );
        builder.append( gd.toString( "failedObjects" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.failedObjects ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.backupName.hashCode();
        hashCode = (31 * hashCode) + ((Long)this.backupId).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.restoredBytes).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.restoredFiles).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.restoredRecords).hashCode();
        hashCode = (31 * hashCode) + this.restoredObjects.hashCode();
        hashCode = (31 * hashCode) + this.renamedObjects.hashCode();
        hashCode = (31 * hashCode) + this.failedObjects.hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }
}

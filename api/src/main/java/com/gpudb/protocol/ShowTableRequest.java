/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of parameters for {@link com.gpudb.GPUdb#showTable(ShowTableRequest)
 * GPUdb.showTable}.
 * <p>
 * Retrieves detailed information about a table, view, or schema, specified in
 * {@link #getTableName() tableName}. If the supplied {@link #getTableName()
 * tableName} is a schema the call can return information about either the
 * schema itself or the tables and views it contains. If {@link #getTableName()
 * tableName} is empty, information about all schemas will be returned.
 * <p>
 * If the option {@link Options#GET_SIZES GET_SIZES} is set to {@link
 * Options#TRUE TRUE}, then the number of records in each table is returned (in
 * {@link com.gpudb.protocol.ShowTableResponse#getSizes() sizes} and {@link
 * com.gpudb.protocol.ShowTableResponse#getFullSizes() fullSizes}), along with
 * the total number of objects across all requested tables (in {@link
 * com.gpudb.protocol.ShowTableResponse#getTotalSize() totalSize} and {@link
 * com.gpudb.protocol.ShowTableResponse#getTotalFullSize() totalFullSize}).
 * <p>
 * For a schema, setting the {@link Options#SHOW_CHILDREN SHOW_CHILDREN} option
 * to {@link Options#FALSE FALSE} returns only information about the schema
 * itself; setting {@link Options#SHOW_CHILDREN SHOW_CHILDREN} to {@link
 * Options#TRUE TRUE} returns a list of tables and views contained in the
 * schema, along with their corresponding detail.
 * <p>
 * To retrieve a list of every table, view, and schema in the database, set
 * {@link #getTableName() tableName} to '*' and {@link Options#SHOW_CHILDREN
 * SHOW_CHILDREN} to {@link Options#TRUE TRUE}.  When doing this, the returned
 * {@link com.gpudb.protocol.ShowTableResponse#getTotalSize() totalSize} and
 * {@link com.gpudb.protocol.ShowTableResponse#getTotalFullSize()
 * totalFullSize} will not include the sizes of non-base tables (e.g., filters,
 * views, joins, etc.).
 */
public class ShowTableRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("ShowTableRequest")
            .namespace("com.gpudb")
            .fields()
                .name("tableName").type().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    /**
     * A set of string constants for the {@link ShowTableRequest} parameter
     * {@link #getOptions() options}.
     * <p>
     * Optional parameters.
     */
    public static final class Options {
        /**
         * Include view dependencies in the output.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String DEPENDENCIES = "dependencies";

        public static final String TRUE = "true";
        public static final String FALSE = "false";

        /**
         * If {@link Options#TRUE TRUE} then the table sizes will wait for read
         * lock before returning.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#TRUE TRUE}.
         */
        public static final String FORCE_SYNCHRONOUS = "force_synchronous";

        /**
         * If {@link Options#TRUE TRUE} then data about the last read, write,
         * alter and create will be returned.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String GET_ACCESS_DATA = "get_access_data";

        /**
         * If {@link Options#TRUE TRUE} then the number of records in each
         * table, along with a cumulative count, will be returned; blank,
         * otherwise. This version will return the sizes cached at rank 0,
         * which may be stale if there is a multihead insert occurring.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String GET_CACHED_SIZES = "get_cached_sizes";

        /**
         * If {@link Options#TRUE TRUE} then the number of records in each
         * table, along with a cumulative count, will be returned; blank,
         * otherwise.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String GET_SIZES = "get_sizes";

        /**
         * If {@link Options#TRUE TRUE} then the response will not populate the
         * additional_info field.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String SKIP_ADDITIONAL_INFO = "skip_additional_info";

        /**
         * If {@link Options#FALSE FALSE} will return an error if the provided
         * {@link #getTableName() tableName} does not exist. If {@link
         * Options#TRUE TRUE} then it will return an empty result.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String NO_ERROR_IF_NOT_EXISTS = "no_error_if_not_exists";

        /**
         * If {@link Options#TRUE TRUE} then the table list will not include
         * tables from SYS_TEMP and other system temporary schemas.  This is
         * the default behavior for non-admin users.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String SKIP_TEMP_SCHEMAS = "skip_temp_schemas";

        /**
         * If {@link #getTableName() tableName} is a schema, then {@link
         * Options#TRUE TRUE} will return information about the tables and
         * views in the schema, and {@link Options#FALSE FALSE} will return
         * information about the schema itself. If {@link #getTableName()
         * tableName} is a table or view, {@link Options#SHOW_CHILDREN
         * SHOW_CHILDREN} must be {@link Options#FALSE FALSE}. If {@link
         * #getTableName() tableName} is empty, then {@link
         * Options#SHOW_CHILDREN SHOW_CHILDREN} must be {@link Options#TRUE
         * TRUE}.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#TRUE TRUE}.
         */
        public static final String SHOW_CHILDREN = "show_children";

        /**
         * If {@link Options#TRUE TRUE} then column info (memory usage, etc)
         * will be returned.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String GET_COLUMN_INFO = "get_column_info";

        private Options() {  }
    }

    private String tableName;
    private Map<String, String> options;

    /**
     * Constructs a ShowTableRequest object with default parameters.
     */
    public ShowTableRequest() {
        tableName = "";
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs a ShowTableRequest object with the specified parameters.
     *
     * @param tableName  Name of the table for which to retrieve the
     *                   information, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.  If blank,
     *                   then returns information about all tables and views.
     * @param options  Optional parameters.
     *                 <ul>
     *                     <li>{@link Options#DEPENDENCIES DEPENDENCIES}:
     *                         Include view dependencies in the output.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#FORCE_SYNCHRONOUS
     *                         FORCE_SYNCHRONOUS}: If {@link Options#TRUE TRUE}
     *                         then the table sizes will wait for read lock
     *                         before returning.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#TRUE TRUE}.
     *                     <li>{@link Options#GET_ACCESS_DATA GET_ACCESS_DATA}:
     *                         If {@link Options#TRUE TRUE} then data about the
     *                         last read, write, alter and create will be
     *                         returned.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#GET_CACHED_SIZES
     *                         GET_CACHED_SIZES}: If {@link Options#TRUE TRUE}
     *                         then the number of records in each table, along
     *                         with a cumulative count, will be returned;
     *                         blank, otherwise. This version will return the
     *                         sizes cached at rank 0, which may be stale if
     *                         there is a multihead insert occurring.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#GET_SIZES GET_SIZES}: If {@link
     *                         Options#TRUE TRUE} then the number of records in
     *                         each table, along with a cumulative count, will
     *                         be returned; blank, otherwise.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#SKIP_ADDITIONAL_INFO
     *                         SKIP_ADDITIONAL_INFO}: If {@link Options#TRUE
     *                         TRUE} then the response will not populate the
     *                         additional_info field.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#NO_ERROR_IF_NOT_EXISTS
     *                         NO_ERROR_IF_NOT_EXISTS}: If {@link Options#FALSE
     *                         FALSE} will return an error if the provided
     *                         {@code tableName} does not exist. If {@link
     *                         Options#TRUE TRUE} then it will return an empty
     *                         result.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#SKIP_TEMP_SCHEMAS
     *                         SKIP_TEMP_SCHEMAS}: If {@link Options#TRUE TRUE}
     *                         then the table list will not include tables from
     *                         SYS_TEMP and other system temporary schemas.
     *                         This is the default behavior for non-admin
     *                         users.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#SHOW_CHILDREN SHOW_CHILDREN}: If
     *                         {@code tableName} is a schema, then {@link
     *                         Options#TRUE TRUE} will return information about
     *                         the tables and views in the schema, and {@link
     *                         Options#FALSE FALSE} will return information
     *                         about the schema itself. If {@code tableName} is
     *                         a table or view, {@link Options#SHOW_CHILDREN
     *                         SHOW_CHILDREN} must be {@link Options#FALSE
     *                         FALSE}. If {@code tableName} is empty, then
     *                         {@link Options#SHOW_CHILDREN SHOW_CHILDREN} must
     *                         be {@link Options#TRUE TRUE}.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#TRUE TRUE}.
     *                     <li>{@link Options#GET_COLUMN_INFO GET_COLUMN_INFO}:
     *                         If {@link Options#TRUE TRUE} then column info
     *                         (memory usage, etc) will be returned.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     */
    public ShowTableRequest(String tableName, Map<String, String> options) {
        this.tableName = (tableName == null) ? "" : tableName;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * Name of the table for which to retrieve the information, in
     * [schema_name.]table_name format, using standard <a
     * href="../../../../../../concepts/tables/#table-name-resolution"
     * target="_top">name resolution rules</a>.  If blank, then returns
     * information about all tables and views.
     *
     * @return The current value of {@code tableName}.
     */
    public String getTableName() {
        return tableName;
    }

    /**
     * Name of the table for which to retrieve the information, in
     * [schema_name.]table_name format, using standard <a
     * href="../../../../../../concepts/tables/#table-name-resolution"
     * target="_top">name resolution rules</a>.  If blank, then returns
     * information about all tables and views.
     *
     * @param tableName  The new value for {@code tableName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowTableRequest setTableName(String tableName) {
        this.tableName = (tableName == null) ? "" : tableName;
        return this;
    }

    /**
     * Optional parameters.
     * <ul>
     *     <li>{@link Options#DEPENDENCIES DEPENDENCIES}: Include view
     *         dependencies in the output.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#FORCE_SYNCHRONOUS FORCE_SYNCHRONOUS}: If {@link
     *         Options#TRUE TRUE} then the table sizes will wait for read lock
     *         before returning.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#TRUE TRUE}.
     *     <li>{@link Options#GET_ACCESS_DATA GET_ACCESS_DATA}: If {@link
     *         Options#TRUE TRUE} then data about the last read, write, alter
     *         and create will be returned.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#GET_CACHED_SIZES GET_CACHED_SIZES}: If {@link
     *         Options#TRUE TRUE} then the number of records in each table,
     *         along with a cumulative count, will be returned; blank,
     *         otherwise. This version will return the sizes cached at rank 0,
     *         which may be stale if there is a multihead insert occurring.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#GET_SIZES GET_SIZES}: If {@link Options#TRUE
     *         TRUE} then the number of records in each table, along with a
     *         cumulative count, will be returned; blank, otherwise.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#SKIP_ADDITIONAL_INFO SKIP_ADDITIONAL_INFO}: If
     *         {@link Options#TRUE TRUE} then the response will not populate
     *         the additional_info field.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#NO_ERROR_IF_NOT_EXISTS NO_ERROR_IF_NOT_EXISTS}:
     *         If {@link Options#FALSE FALSE} will return an error if the
     *         provided {@link #getTableName() tableName} does not exist. If
     *         {@link Options#TRUE TRUE} then it will return an empty result.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#SKIP_TEMP_SCHEMAS SKIP_TEMP_SCHEMAS}: If {@link
     *         Options#TRUE TRUE} then the table list will not include tables
     *         from SYS_TEMP and other system temporary schemas.  This is the
     *         default behavior for non-admin users.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#SHOW_CHILDREN SHOW_CHILDREN}: If {@link
     *         #getTableName() tableName} is a schema, then {@link Options#TRUE
     *         TRUE} will return information about the tables and views in the
     *         schema, and {@link Options#FALSE FALSE} will return information
     *         about the schema itself. If {@link #getTableName() tableName} is
     *         a table or view, {@link Options#SHOW_CHILDREN SHOW_CHILDREN}
     *         must be {@link Options#FALSE FALSE}. If {@link #getTableName()
     *         tableName} is empty, then {@link Options#SHOW_CHILDREN
     *         SHOW_CHILDREN} must be {@link Options#TRUE TRUE}.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#TRUE TRUE}.
     *     <li>{@link Options#GET_COLUMN_INFO GET_COLUMN_INFO}: If {@link
     *         Options#TRUE TRUE} then column info (memory usage, etc) will be
     *         returned.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @return The current value of {@code options}.
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * Optional parameters.
     * <ul>
     *     <li>{@link Options#DEPENDENCIES DEPENDENCIES}: Include view
     *         dependencies in the output.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#FORCE_SYNCHRONOUS FORCE_SYNCHRONOUS}: If {@link
     *         Options#TRUE TRUE} then the table sizes will wait for read lock
     *         before returning.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#TRUE TRUE}.
     *     <li>{@link Options#GET_ACCESS_DATA GET_ACCESS_DATA}: If {@link
     *         Options#TRUE TRUE} then data about the last read, write, alter
     *         and create will be returned.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#GET_CACHED_SIZES GET_CACHED_SIZES}: If {@link
     *         Options#TRUE TRUE} then the number of records in each table,
     *         along with a cumulative count, will be returned; blank,
     *         otherwise. This version will return the sizes cached at rank 0,
     *         which may be stale if there is a multihead insert occurring.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#GET_SIZES GET_SIZES}: If {@link Options#TRUE
     *         TRUE} then the number of records in each table, along with a
     *         cumulative count, will be returned; blank, otherwise.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#SKIP_ADDITIONAL_INFO SKIP_ADDITIONAL_INFO}: If
     *         {@link Options#TRUE TRUE} then the response will not populate
     *         the additional_info field.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#NO_ERROR_IF_NOT_EXISTS NO_ERROR_IF_NOT_EXISTS}:
     *         If {@link Options#FALSE FALSE} will return an error if the
     *         provided {@link #getTableName() tableName} does not exist. If
     *         {@link Options#TRUE TRUE} then it will return an empty result.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#SKIP_TEMP_SCHEMAS SKIP_TEMP_SCHEMAS}: If {@link
     *         Options#TRUE TRUE} then the table list will not include tables
     *         from SYS_TEMP and other system temporary schemas.  This is the
     *         default behavior for non-admin users.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#SHOW_CHILDREN SHOW_CHILDREN}: If {@link
     *         #getTableName() tableName} is a schema, then {@link Options#TRUE
     *         TRUE} will return information about the tables and views in the
     *         schema, and {@link Options#FALSE FALSE} will return information
     *         about the schema itself. If {@link #getTableName() tableName} is
     *         a table or view, {@link Options#SHOW_CHILDREN SHOW_CHILDREN}
     *         must be {@link Options#FALSE FALSE}. If {@link #getTableName()
     *         tableName} is empty, then {@link Options#SHOW_CHILDREN
     *         SHOW_CHILDREN} must be {@link Options#TRUE TRUE}.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#TRUE TRUE}.
     *     <li>{@link Options#GET_COLUMN_INFO GET_COLUMN_INFO}: If {@link
     *         Options#TRUE TRUE} then column info (memory usage, etc) will be
     *         returned.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @param options  The new value for {@code options}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowTableRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.tableName;

            case 1:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.tableName = (String)value;
                break;

            case 1:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        ShowTableRequest that = (ShowTableRequest)obj;

        return ( this.tableName.equals( that.tableName )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "tableName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.tableName ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableName.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }
}

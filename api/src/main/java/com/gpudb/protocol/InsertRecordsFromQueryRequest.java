/*
 *  This file was autogenerated by the GPUdb schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;


/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#insertRecordsFromQuery(InsertRecordsFromQueryRequest)}.
 * <p>
 * Computes remote query result and inserts the result data into a new or
 * existing table
 */
public class InsertRecordsFromQueryRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("InsertRecordsFromQueryRequest")
            .namespace("com.gpudb")
            .fields()
                .name("tableName").type().stringType().noDefault()
                .name("remoteQuery").type().stringType().noDefault()
                .name("modifyColumns").type().map().values().map().values().stringType().noDefault()
                .name("createTableOptions").type().map().values().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();


    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return  the schema for the class.
     * 
     */
    public static Schema getClassSchema() {
        return schema$;
    }


    /**
     * Options used when creating the target table.
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TYPE_ID
     * TYPE_ID}: ID of a currently registered <a
     * href="../../../../../../concepts/types/" target="_top">type</a>.  The
     * default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#NO_ERROR_IF_EXISTS
     * NO_ERROR_IF_EXISTS}: If {@code true}, prevents an error from occurring
     * if the table already exists and is of the given type.  If a table with
     * the same ID but a different type exists, it is still an error.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     * TRUE}
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     * FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     * FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_REPLICATED
     * IS_REPLICATED}: Affects the <a
     * href="../../../../../../concepts/tables/#distribution"
     * target="_top">distribution scheme</a> for the table's data.  If {@code
     * true} and the given type has no explicit <a
     * href="../../../../../../concepts/tables/#shard-key" target="_top">shard
     * key</a> defined, the table will be <a
     * href="../../../../../../concepts/tables/#replication"
     * target="_top">replicated</a>.  If {@code false}, the table will be <a
     * href="../../../../../../concepts/tables/#sharding"
     * target="_top">sharded</a> according to the shard key specified in the
     * given {@code type_id}, or <a
     * href="../../../../../../concepts/tables/#random-sharding"
     * target="_top">randomly sharded</a>, if no shard key is specified.  Note
     * that a type containing a shard key cannot be used to create a replicated
     * table.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     * TRUE}
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     * FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     * FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FOREIGN_KEYS
     * FOREIGN_KEYS}: Semicolon-separated list of <a
     * href="../../../../../../concepts/tables/#foreign-keys"
     * target="_top">foreign keys</a>, of the format '(source_column_name [,
     * ...]) references target_table_name(primary_key_column_name [, ...]) [as
     * foreign_key_name]'.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FOREIGN_SHARD_KEY
     * FOREIGN_SHARD_KEY}: Foreign shard key of the format 'source_column
     * references shard_by_column from target_table(primary_key_column)'.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_TYPE
     * PARTITION_TYPE}: <a
     * href="../../../../../../concepts/tables/#partitioning"
     * target="_top">Partitioning</a> scheme to use.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#RANGE
     * RANGE}: Use <a
     * href="../../../../../../concepts/tables/#partitioning-by-range"
     * target="_top">range partitioning</a>.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#INTERVAL
     * INTERVAL}: Use <a
     * href="../../../../../../concepts/tables/#partitioning-by-interval"
     * target="_top">interval partitioning</a>.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#LIST
     * LIST}: Use <a
     * href="../../../../../../concepts/tables/#partitioning-by-list"
     * target="_top">list partitioning</a>.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#HASH
     * HASH}: Use <a
     * href="../../../../../../concepts/tables/#partitioning-by-hash"
     * target="_top">hash partitioning</a>.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#SERIES
     * SERIES}: Use <a
     * href="../../../../../../concepts/tables/#partitioning-by-series"
     * target="_top">series partitioning</a>.
     * </ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_KEYS
     * PARTITION_KEYS}: Comma-separated list of partition keys, which are the
     * columns or column expressions by which records will be assigned to
     * partitions defined by {@code partition_definitions}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_DEFINITIONS
     * PARTITION_DEFINITIONS}: Comma-separated list of partition definitions,
     * whose format depends on the choice of {@code partition_type}.  See <a
     * href="../../../../../../concepts/tables/#partitioning-by-range"
     * target="_top">range partitioning</a>, <a
     * href="../../../../../../concepts/tables/#partitioning-by-interval"
     * target="_top">interval partitioning</a>, <a
     * href="../../../../../../concepts/tables/#partitioning-by-list"
     * target="_top">list partitioning</a>, <a
     * href="../../../../../../concepts/tables/#partitioning-by-hash"
     * target="_top">hash partitioning</a>, or <a
     * href="../../../../../../concepts/tables/#partitioning-by-series"
     * target="_top">series partitioning</a> for example formats.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_AUTOMATIC_PARTITION
     * IS_AUTOMATIC_PARTITION}: If {@code true}, a new partition will be
     * created for values which don't fall into an existing partition.
     * Currently only supported for <a
     * href="../../../../../../concepts/tables/#partitioning-by-list"
     * target="_top">list partitions</a>.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     * TRUE}
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     * FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     * FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TTL
     * TTL}: Sets the <a href="../../../../../../concepts/ttl/"
     * target="_top">TTL</a> of the table specified in {@code tableName}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#CHUNK_SIZE
     * CHUNK_SIZE}: Indicates the number of records per chunk to be used for
     * this table.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_RESULT_TABLE
     * IS_RESULT_TABLE}: Indicates whether the table is a <a
     * href="../../../../../../concepts/tables_memory_only/"
     * target="_top">memory-only table</a>. A result table cannot contain
     * columns with store_only or text_search <a
     * href="../../../../../../concepts/types/#data-handling"
     * target="_top">data-handling</a> or that are <a
     * href="../../../../../../concepts/types/#primitive-types"
     * target="_top">non-charN strings</a>, and it will not be retained if the
     * server is restarted.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     * TRUE}
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     * FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     * FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#STRATEGY_DEFINITION
     * STRATEGY_DEFINITION}: The <a
     * href="../../../../../../rm/concepts/#tier-strategies" target="_top">tier
     * strategy</a> for the table and its columns.
     * </ul>
     * The default value is an empty {@link Map}.
     * A set of string constants for the parameter {@code createTableOptions}.
     */
    public static final class CreateTableOptions {

        /**
         * ID of a currently registered <a
         * href="../../../../../../concepts/types/" target="_top">type</a>.
         * The default value is ''.
         */
        public static final String TYPE_ID = "type_id";

        /**
         * If {@code true}, prevents an error from occurring if the table
         * already exists and is of the given type.  If a table with the same
         * ID but a different type exists, it is still an error.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
         * TRUE}
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
         * FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
         * FALSE}.
         */
        public static final String NO_ERROR_IF_EXISTS = "no_error_if_exists";
        public static final String TRUE = "true";
        public static final String FALSE = "false";

        /**
         * Affects the <a
         * href="../../../../../../concepts/tables/#distribution"
         * target="_top">distribution scheme</a> for the table's data.  If
         * {@code true} and the given type has no explicit <a
         * href="../../../../../../concepts/tables/#shard-key"
         * target="_top">shard key</a> defined, the table will be <a
         * href="../../../../../../concepts/tables/#replication"
         * target="_top">replicated</a>.  If {@code false}, the table will be
         * <a href="../../../../../../concepts/tables/#sharding"
         * target="_top">sharded</a> according to the shard key specified in
         * the given {@code type_id}, or <a
         * href="../../../../../../concepts/tables/#random-sharding"
         * target="_top">randomly sharded</a>, if no shard key is specified.
         * Note that a type containing a shard key cannot be used to create a
         * replicated table.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
         * TRUE}
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
         * FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
         * FALSE}.
         */
        public static final String IS_REPLICATED = "is_replicated";

        /**
         * Semicolon-separated list of <a
         * href="../../../../../../concepts/tables/#foreign-keys"
         * target="_top">foreign keys</a>, of the format '(source_column_name
         * [, ...]) references target_table_name(primary_key_column_name [,
         * ...]) [as foreign_key_name]'.
         */
        public static final String FOREIGN_KEYS = "foreign_keys";

        /**
         * Foreign shard key of the format 'source_column references
         * shard_by_column from target_table(primary_key_column)'.
         */
        public static final String FOREIGN_SHARD_KEY = "foreign_shard_key";

        /**
         * <a href="../../../../../../concepts/tables/#partitioning"
         * target="_top">Partitioning</a> scheme to use.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#RANGE
         * RANGE}: Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-range"
         * target="_top">range partitioning</a>.
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#INTERVAL
         * INTERVAL}: Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-interval"
         * target="_top">interval partitioning</a>.
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#LIST
         * LIST}: Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-list"
         * target="_top">list partitioning</a>.
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#HASH
         * HASH}: Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-hash"
         * target="_top">hash partitioning</a>.
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#SERIES
         * SERIES}: Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-series"
         * target="_top">series partitioning</a>.
         * </ul>
         */
        public static final String PARTITION_TYPE = "partition_type";

        /**
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-range"
         * target="_top">range partitioning</a>.
         */
        public static final String RANGE = "RANGE";

        /**
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-interval"
         * target="_top">interval partitioning</a>.
         */
        public static final String INTERVAL = "INTERVAL";

        /**
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-list"
         * target="_top">list partitioning</a>.
         */
        public static final String LIST = "LIST";

        /**
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-hash"
         * target="_top">hash partitioning</a>.
         */
        public static final String HASH = "HASH";

        /**
         * Use <a
         * href="../../../../../../concepts/tables/#partitioning-by-series"
         * target="_top">series partitioning</a>.
         */
        public static final String SERIES = "SERIES";

        /**
         * Comma-separated list of partition keys, which are the columns or
         * column expressions by which records will be assigned to partitions
         * defined by {@code partition_definitions}.
         */
        public static final String PARTITION_KEYS = "partition_keys";

        /**
         * Comma-separated list of partition definitions, whose format depends
         * on the choice of {@code partition_type}.  See <a
         * href="../../../../../../concepts/tables/#partitioning-by-range"
         * target="_top">range partitioning</a>, <a
         * href="../../../../../../concepts/tables/#partitioning-by-interval"
         * target="_top">interval partitioning</a>, <a
         * href="../../../../../../concepts/tables/#partitioning-by-list"
         * target="_top">list partitioning</a>, <a
         * href="../../../../../../concepts/tables/#partitioning-by-hash"
         * target="_top">hash partitioning</a>, or <a
         * href="../../../../../../concepts/tables/#partitioning-by-series"
         * target="_top">series partitioning</a> for example formats.
         */
        public static final String PARTITION_DEFINITIONS = "partition_definitions";

        /**
         * If {@code true}, a new partition will be created for values which
         * don't fall into an existing partition.  Currently only supported for
         * <a href="../../../../../../concepts/tables/#partitioning-by-list"
         * target="_top">list partitions</a>.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
         * TRUE}
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
         * FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
         * FALSE}.
         */
        public static final String IS_AUTOMATIC_PARTITION = "is_automatic_partition";

        /**
         * Sets the <a href="../../../../../../concepts/ttl/"
         * target="_top">TTL</a> of the table specified in {@code tableName}.
         */
        public static final String TTL = "ttl";

        /**
         * Indicates the number of records per chunk to be used for this table.
         */
        public static final String CHUNK_SIZE = "chunk_size";

        /**
         * Indicates whether the table is a <a
         * href="../../../../../../concepts/tables_memory_only/"
         * target="_top">memory-only table</a>. A result table cannot contain
         * columns with store_only or text_search <a
         * href="../../../../../../concepts/types/#data-handling"
         * target="_top">data-handling</a> or that are <a
         * href="../../../../../../concepts/types/#primitive-types"
         * target="_top">non-charN strings</a>, and it will not be retained if
         * the server is restarted.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
         * TRUE}
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
         * FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
         * FALSE}.
         */
        public static final String IS_RESULT_TABLE = "is_result_table";

        /**
         * The <a href="../../../../../../rm/concepts/#tier-strategies"
         * target="_top">tier strategy</a> for the table and its columns.
         */
        public static final String STRATEGY_DEFINITION = "strategy_definition";

        private CreateTableOptions() {  }
    }


    /**
     * Optional parameters.
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BAD_RECORD_TABLE_NAME
     * BAD_RECORD_TABLE_NAME}: Optional name of a table to which records that
     * were rejected are written.  The bad-record-table has the following
     * columns: line_number (long), line_rejected (string), error_message
     * (string). When error handling is Abort, bad records table is not
     * populated.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BAD_RECORD_TABLE_LIMIT
     * BAD_RECORD_TABLE_LIMIT}: A positive integer indicating the maximum
     * number of records that can be  written to the bad-record-table.
     * Default value is 10000
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BATCH_SIZE
     * BATCH_SIZE}: Number of records per batch when inserting data.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DATASOURCE_NAME
     * DATASOURCE_NAME}: Name of an existing external data source from which
     * table will be loaded
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ERROR_HANDLING
     * ERROR_HANDLING}: Specifies how errors should be handled upon insertion.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PERMISSIVE
     * PERMISSIVE}: Records with missing columns are populated with nulls if
     * possible; otherwise, the malformed records are skipped.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_BAD_RECORDS
     * IGNORE_BAD_RECORDS}: Malformed records are skipped.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT ABORT}:
     * Stops current insertion and aborts entire operation when an error is
     * encountered.  Primary key collisions are considered abortable errors in
     * this mode.
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT ABORT}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_EXISTING_PK
     * IGNORE_EXISTING_PK}: Specifies the record collision error-suppression
     * policy for
     * inserting into a table with a <a
     * href="../../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>, only used when
     * not in upsert mode (upsert mode is disabled when {@code
     * update_on_existing_pk} is
     * {@code false}).  If set to
     * {@code true}, any record being inserted that is rejected
     * for having primary key values that match those of an existing table
     * record will be ignored with no
     * error generated.  If {@code false}, the rejection of any
     * record for having primary key values matching an existing record will
     * result in an error being
     * reported, as determined by {@code error_handling}.  If the specified
     * table does not
     * have a primary key or if upsert mode is in effect ({@code
     * update_on_existing_pk} is
     * {@code true}), then this option has no effect.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE TRUE}:
     * Ignore new records whose primary key values collide with those of
     * existing records
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE FALSE}:
     * Treat as errors any new records whose primary key values collide with
     * those of existing records
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#INGESTION_MODE
     * INGESTION_MODE}: Whether to do a full load, dry run, or perform a type
     * inference on the source data.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL FULL}: Run
     * a type inference on the source data (if needed) and ingest
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DRY_RUN
     * DRY_RUN}: Does not load data, but walks through the source data and
     * determines the number of valid records, taking into account the current
     * mode of {@code error_handling}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TYPE_INFERENCE_ONLY
     * TYPE_INFERENCE_ONLY}: Infer the type of the source data and return,
     * without ingesting any data.  The inferred type is returned in the
     * response.
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL FULL}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#JDBC_FETCH_SIZE
     * JDBC_FETCH_SIZE}: The JDBC fetch size, which determines how many rows to
     * fetch per round trip.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#JDBC_SESSION_INIT_STATEMENT
     * JDBC_SESSION_INIT_STATEMENT}: Executes the statement per each jdbc
     * session before doing actual load.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#NUM_SPLITS_PER_RANK
     * NUM_SPLITS_PER_RANK}: Optional: number of splits for reading data per
     * rank. Default will be external_file_reader_num_tasks.  The default value
     * is ''.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#NUM_TASKS_PER_RANK
     * NUM_TASKS_PER_RANK}: Optional: number of tasks for reading data per
     * rank. Default will be external_file_reader_num_tasks
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PRIMARY_KEYS
     * PRIMARY_KEYS}: Optional: comma separated list of column names, to set as
     * primary keys, when not specified in the type.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#SHARD_KEYS
     * SHARD_KEYS}: Optional: comma separated list of column names, to set as
     * primary keys, when not specified in the type.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#SUBSCRIBE
     * SUBSCRIBE}: Continuously poll the data source to check for new data and
     * load it into the table.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUNCATE_TABLE
     * TRUNCATE_TABLE}: If set to {@code true}, truncates the table specified
     * by {@code tableName} prior to loading the data.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY
     * REMOTE_QUERY}: Remote SQL query from which data will be sourced
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_ORDER_BY
     * REMOTE_QUERY_ORDER_BY}: Name of column to be used for splitting the
     * query into multiple sub-queries using ordering of given column.  The
     * default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_FILTER_COLUMN
     * REMOTE_QUERY_FILTER_COLUMN}: Name of column to be used for splitting the
     * query into multiple sub-queries using the data distribution of given
     * column.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_INCREASING_COLUMN
     * REMOTE_QUERY_INCREASING_COLUMN}: Column on subscribed remote query
     * result that will increase for new records (e.g., TIMESTAMP).  The
     * default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_PARTITION_COLUMN
     * REMOTE_QUERY_PARTITION_COLUMN}: Alias name for
     * remote_query_filter_column.  The default value is ''.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUNCATE_STRINGS
     * TRUNCATE_STRINGS}: If set to {@code true}, truncate string values that
     * are longer than the column's type size.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE TRUE}
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE FALSE}
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE FALSE}.
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#UPDATE_ON_EXISTING_PK
     * UPDATE_ON_EXISTING_PK}: Specifies the record collision policy for
     * inserting into a table
     * with a <a href="../../../../../../concepts/tables/#primary-keys"
     * target="_top">primary key</a>. If set to
     * {@code true}, any existing table record with primary
     * key values that match those of a record being inserted will be replaced
     * by that new record (the new
     * data will be "upserted"). If set to {@code false},
     * any existing table record with primary key values that match those of a
     * record being inserted will
     * remain unchanged, while the new record will be rejected and the error
     * handled as determined by
     * {@code ignore_existing_pk} & {@code error_handling}.  If the
     * specified table does not have a primary key, then this option has no
     * effect.
     * Supported values:
     * <ul>
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE TRUE}:
     * Upsert new records when primary keys match existing records
     *         <li> {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE FALSE}:
     * Reject new records when primary keys match existing records
     * </ul>
     * The default value is {@link
     * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE FALSE}.
     * </ul>
     * The default value is an empty {@link Map}.
     * A set of string constants for the parameter {@code options}.
     */
    public static final class Options {

        /**
         * Optional name of a table to which records that were rejected are
         * written.  The bad-record-table has the following columns:
         * line_number (long), line_rejected (string), error_message (string).
         * When error handling is Abort, bad records table is not populated.
         */
        public static final String BAD_RECORD_TABLE_NAME = "bad_record_table_name";

        /**
         * A positive integer indicating the maximum number of records that can
         * be  written to the bad-record-table.   Default value is 10000
         */
        public static final String BAD_RECORD_TABLE_LIMIT = "bad_record_table_limit";

        /**
         * Number of records per batch when inserting data.
         */
        public static final String BATCH_SIZE = "batch_size";

        /**
         * Name of an existing external data source from which table will be
         * loaded
         */
        public static final String DATASOURCE_NAME = "datasource_name";

        /**
         * Specifies how errors should be handled upon insertion.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PERMISSIVE
         * PERMISSIVE}: Records with missing columns are populated with nulls
         * if possible; otherwise, the malformed records are skipped.
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_BAD_RECORDS
         * IGNORE_BAD_RECORDS}: Malformed records are skipped.
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT
         * ABORT}: Stops current insertion and aborts entire operation when an
         * error is encountered.  Primary key collisions are considered
         * abortable errors in this mode.
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT
         * ABORT}.
         */
        public static final String ERROR_HANDLING = "error_handling";

        /**
         * Records with missing columns are populated with nulls if possible;
         * otherwise, the malformed records are skipped.
         */
        public static final String PERMISSIVE = "permissive";

        /**
         * Malformed records are skipped.
         */
        public static final String IGNORE_BAD_RECORDS = "ignore_bad_records";

        /**
         * Stops current insertion and aborts entire operation when an error is
         * encountered.  Primary key collisions are considered abortable errors
         * in this mode.
         */
        public static final String ABORT = "abort";

        /**
         * Specifies the record collision error-suppression policy for
         * inserting into a table with a <a
         * href="../../../../../../concepts/tables/#primary-keys"
         * target="_top">primary key</a>, only used when
         * not in upsert mode (upsert mode is disabled when {@code
         * update_on_existing_pk} is
         * {@code false}).  If set to
         * {@code true}, any record being inserted that is rejected
         * for having primary key values that match those of an existing table
         * record will be ignored with no
         * error generated.  If {@code false}, the rejection of any
         * record for having primary key values matching an existing record
         * will result in an error being
         * reported, as determined by {@code error_handling}.  If the specified
         * table does not
         * have a primary key or if upsert mode is in effect ({@code
         * update_on_existing_pk} is
         * {@code true}), then this option has no effect.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE TRUE}:
         * Ignore new records whose primary key values collide with those of
         * existing records
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
         * FALSE}: Treat as errors any new records whose primary key values
         * collide with those of existing records
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
         * FALSE}.
         */
        public static final String IGNORE_EXISTING_PK = "ignore_existing_pk";

        /**
         * Upsert new records when primary keys match existing records
         */
        public static final String TRUE = "true";

        /**
         * Reject new records when primary keys match existing records
         */
        public static final String FALSE = "false";

        /**
         * Whether to do a full load, dry run, or perform a type inference on
         * the source data.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL FULL}:
         * Run a type inference on the source data (if needed) and ingest
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DRY_RUN
         * DRY_RUN}: Does not load data, but walks through the source data and
         * determines the number of valid records, taking into account the
         * current mode of {@code error_handling}.
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TYPE_INFERENCE_ONLY
         * TYPE_INFERENCE_ONLY}: Infer the type of the source data and return,
         * without ingesting any data.  The inferred type is returned in the
         * response.
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL FULL}.
         */
        public static final String INGESTION_MODE = "ingestion_mode";

        /**
         * Run a type inference on the source data (if needed) and ingest
         */
        public static final String FULL = "full";

        /**
         * Does not load data, but walks through the source data and determines
         * the number of valid records, taking into account the current mode of
         * {@code error_handling}.
         */
        public static final String DRY_RUN = "dry_run";

        /**
         * Infer the type of the source data and return, without ingesting any
         * data.  The inferred type is returned in the response.
         */
        public static final String TYPE_INFERENCE_ONLY = "type_inference_only";

        /**
         * The JDBC fetch size, which determines how many rows to fetch per
         * round trip.
         */
        public static final String JDBC_FETCH_SIZE = "jdbc_fetch_size";

        /**
         * Executes the statement per each jdbc session before doing actual
         * load.  The default value is ''.
         */
        public static final String JDBC_SESSION_INIT_STATEMENT = "jdbc_session_init_statement";

        /**
         * Optional: number of splits for reading data per rank. Default will
         * be external_file_reader_num_tasks.  The default value is ''.
         */
        public static final String NUM_SPLITS_PER_RANK = "num_splits_per_rank";

        /**
         * Optional: number of tasks for reading data per rank. Default will be
         * external_file_reader_num_tasks
         */
        public static final String NUM_TASKS_PER_RANK = "num_tasks_per_rank";

        /**
         * Optional: comma separated list of column names, to set as primary
         * keys, when not specified in the type.  The default value is ''.
         */
        public static final String PRIMARY_KEYS = "primary_keys";

        /**
         * Optional: comma separated list of column names, to set as primary
         * keys, when not specified in the type.  The default value is ''.
         */
        public static final String SHARD_KEYS = "shard_keys";

        /**
         * Continuously poll the data source to check for new data and load it
         * into the table.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
         * FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
         * FALSE}.
         */
        public static final String SUBSCRIBE = "subscribe";

        /**
         * If set to {@code true}, truncates the table specified by {@code
         * tableName} prior to loading the data.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
         * FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
         * FALSE}.
         */
        public static final String TRUNCATE_TABLE = "truncate_table";

        /**
         * Remote SQL query from which data will be sourced
         */
        public static final String REMOTE_QUERY = "remote_query";

        /**
         * Name of column to be used for splitting the query into multiple
         * sub-queries using ordering of given column.  The default value is
         * ''.
         */
        public static final String REMOTE_QUERY_ORDER_BY = "remote_query_order_by";

        /**
         * Name of column to be used for splitting the query into multiple
         * sub-queries using the data distribution of given column.  The
         * default value is ''.
         */
        public static final String REMOTE_QUERY_FILTER_COLUMN = "remote_query_filter_column";

        /**
         * Column on subscribed remote query result that will increase for new
         * records (e.g., TIMESTAMP).  The default value is ''.
         */
        public static final String REMOTE_QUERY_INCREASING_COLUMN = "remote_query_increasing_column";

        /**
         * Alias name for remote_query_filter_column.  The default value is ''.
         */
        public static final String REMOTE_QUERY_PARTITION_COLUMN = "remote_query_partition_column";

        /**
         * If set to {@code true}, truncate string values that are longer than
         * the column's type size.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE TRUE}
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
         * FALSE}
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
         * FALSE}.
         */
        public static final String TRUNCATE_STRINGS = "truncate_strings";

        /**
         * Specifies the record collision policy for inserting into a table
         * with a <a href="../../../../../../concepts/tables/#primary-keys"
         * target="_top">primary key</a>. If set to
         * {@code true}, any existing table record with primary
         * key values that match those of a record being inserted will be
         * replaced by that new record (the new
         * data will be "upserted"). If set to {@code false},
         * any existing table record with primary key values that match those
         * of a record being inserted will
         * remain unchanged, while the new record will be rejected and the
         * error handled as determined by
         * {@code ignore_existing_pk} & {@code error_handling}.  If the
         * specified table does not have a primary key, then this option has no
         * effect.
         * Supported values:
         * <ul>
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE TRUE}:
         * Upsert new records when primary keys match existing records
         *         <li> {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
         * FALSE}: Reject new records when primary keys match existing records
         * </ul>
         * The default value is {@link
         * com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
         * FALSE}.
         */
        public static final String UPDATE_ON_EXISTING_PK = "update_on_existing_pk";

        private Options() {  }
    }

    private String tableName;
    private String remoteQuery;
    private Map<String, Map<String, String>> modifyColumns;
    private Map<String, String> createTableOptions;
    private Map<String, String> options;


    /**
     * Constructs an InsertRecordsFromQueryRequest object with default
     * parameters.
     */
    public InsertRecordsFromQueryRequest() {
        tableName = "";
        remoteQuery = "";
        modifyColumns = new LinkedHashMap<>();
        createTableOptions = new LinkedHashMap<>();
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs an InsertRecordsFromQueryRequest object with the specified
     * parameters.
     * 
     * @param tableName  Name of the table into which the data will be
     *                   inserted, in
     *                   [schema_name.]table_name format, using standard
     *                   <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     *                   If the table does not exist, the table will be created
     *                   using either an existing
     *                   {@code type_id} or the type inferred from the
     *                   remote query, and the new table name will have to meet
     *                   standard
     *                   <a
     *                   href="../../../../../../concepts/tables/#table-naming-criteria"
     *                   target="_top">table naming criteria</a>.
     * @param remoteQuery  Query for which result data needs to be imported
     * @param modifyColumns  Not implemented yet.  The default value is an
     *                       empty {@link Map}.
     * @param createTableOptions  Options used when creating the target table.
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TYPE_ID
     *                            TYPE_ID}: ID of a currently registered <a
     *                            href="../../../../../../concepts/types/"
     *                            target="_top">type</a>.  The default value is
     *                            ''.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#NO_ERROR_IF_EXISTS
     *                            NO_ERROR_IF_EXISTS}: If {@code true},
     *                            prevents an error from occurring if the table
     *                            already exists and is of the given type.  If
     *                            a table with the same ID but a different type
     *                            exists, it is still an error.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_REPLICATED
     *                            IS_REPLICATED}: Affects the <a
     *                            href="../../../../../../concepts/tables/#distribution"
     *                            target="_top">distribution scheme</a> for the
     *                            table's data.  If {@code true} and the given
     *                            type has no explicit <a
     *                            href="../../../../../../concepts/tables/#shard-key"
     *                            target="_top">shard key</a> defined, the
     *                            table will be <a
     *                            href="../../../../../../concepts/tables/#replication"
     *                            target="_top">replicated</a>.  If {@code
     *                            false}, the table will be <a
     *                            href="../../../../../../concepts/tables/#sharding"
     *                            target="_top">sharded</a> according to the
     *                            shard key specified in the given {@code
     *                            type_id}, or <a
     *                            href="../../../../../../concepts/tables/#random-sharding"
     *                            target="_top">randomly sharded</a>, if no
     *                            shard key is specified.  Note that a type
     *                            containing a shard key cannot be used to
     *                            create a replicated table.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FOREIGN_KEYS
     *                            FOREIGN_KEYS}: Semicolon-separated list of <a
     *                            href="../../../../../../concepts/tables/#foreign-keys"
     *                            target="_top">foreign keys</a>, of the format
     *                            '(source_column_name [, ...]) references
     *                            target_table_name(primary_key_column_name [,
     *                            ...]) [as foreign_key_name]'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FOREIGN_SHARD_KEY
     *                            FOREIGN_SHARD_KEY}: Foreign shard key of the
     *                            format 'source_column references
     *                            shard_by_column from
     *                            target_table(primary_key_column)'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_TYPE
     *                            PARTITION_TYPE}: <a
     *                            href="../../../../../../concepts/tables/#partitioning"
     *                            target="_top">Partitioning</a> scheme to use.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#RANGE
     *                            RANGE}: Use <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#INTERVAL
     *                            INTERVAL}: Use <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#LIST
     *                            LIST}: Use <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#HASH
     *                            HASH}: Use <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#SERIES
     *                            SERIES}: Use <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a>.
     *                            </ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_KEYS
     *                            PARTITION_KEYS}: Comma-separated list of
     *                            partition keys, which are the columns or
     *                            column expressions by which records will be
     *                            assigned to partitions defined by {@code
     *                            partition_definitions}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_DEFINITIONS
     *                            PARTITION_DEFINITIONS}: Comma-separated list
     *                            of partition definitions, whose format
     *                            depends on the choice of {@code
     *                            partition_type}.  See <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>, <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>, <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>, <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>, or <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a> for
     *                            example formats.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_AUTOMATIC_PARTITION
     *                            IS_AUTOMATIC_PARTITION}: If {@code true}, a
     *                            new partition will be created for values
     *                            which don't fall into an existing partition.
     *                            Currently only supported for <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitions</a>.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TTL
     *                            TTL}: Sets the <a
     *                            href="../../../../../../concepts/ttl/"
     *                            target="_top">TTL</a> of the table specified
     *                            in {@code tableName}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#CHUNK_SIZE
     *                            CHUNK_SIZE}: Indicates the number of records
     *                            per chunk to be used for this table.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_RESULT_TABLE
     *                            IS_RESULT_TABLE}: Indicates whether the table
     *                            is a <a
     *                            href="../../../../../../concepts/tables_memory_only/"
     *                            target="_top">memory-only table</a>. A result
     *                            table cannot contain columns with store_only
     *                            or text_search <a
     *                            href="../../../../../../concepts/types/#data-handling"
     *                            target="_top">data-handling</a> or that are
     *                            <a
     *                            href="../../../../../../concepts/types/#primitive-types"
     *                            target="_top">non-charN strings</a>, and it
     *                            will not be retained if the server is
     *                            restarted.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#STRATEGY_DEFINITION
     *                            STRATEGY_DEFINITION}: The <a
     *                            href="../../../../../../rm/concepts/#tier-strategies"
     *                            target="_top">tier strategy</a> for the table
     *                            and its columns.
     *                            </ul>
     *                            The default value is an empty {@link Map}.
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BAD_RECORD_TABLE_NAME
     *                 BAD_RECORD_TABLE_NAME}: Optional name of a table to
     *                 which records that were rejected are written.  The
     *                 bad-record-table has the following columns: line_number
     *                 (long), line_rejected (string), error_message (string).
     *                 When error handling is Abort, bad records table is not
     *                 populated.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BAD_RECORD_TABLE_LIMIT
     *                 BAD_RECORD_TABLE_LIMIT}: A positive integer indicating
     *                 the maximum number of records that can be  written to
     *                 the bad-record-table.   Default value is 10000
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BATCH_SIZE
     *                 BATCH_SIZE}: Number of records per batch when inserting
     *                 data.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DATASOURCE_NAME
     *                 DATASOURCE_NAME}: Name of an existing external data
     *                 source from which table will be loaded
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ERROR_HANDLING
     *                 ERROR_HANDLING}: Specifies how errors should be handled
     *                 upon insertion.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PERMISSIVE
     *                 PERMISSIVE}: Records with missing columns are populated
     *                 with nulls if possible; otherwise, the malformed records
     *                 are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_BAD_RECORDS
     *                 IGNORE_BAD_RECORDS}: Malformed records are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT
     *                 ABORT}: Stops current insertion and aborts entire
     *                 operation when an error is encountered.  Primary key
     *                 collisions are considered abortable errors in this mode.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT
     *                 ABORT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 inserting into a table with a <a
     *                 href="../../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only used when
     *                 not in upsert mode (upsert mode is disabled when {@code
     *                 update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any record being inserted that is rejected
     *                 for having primary key values that match those of an
     *                 existing table record will be ignored with no
     *                 error generated.  If {@code false}, the rejection of any
     *                 record for having primary key values matching an
     *                 existing record will result in an error being
     *                 reported, as determined by {@code error_handling}.  If
     *                 the specified table does not
     *                 have a primary key or if upsert mode is in effect
     *                 ({@code update_on_existing_pk} is
     *                 {@code true}), then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}: Ignore new records whose primary key values
     *                 collide with those of existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}: Treat as errors any new records whose primary
     *                 key values collide with those of existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#INGESTION_MODE
     *                 INGESTION_MODE}: Whether to do a full load, dry run, or
     *                 perform a type inference on the source data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL
     *                 FULL}: Run a type inference on the source data (if
     *                 needed) and ingest
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DRY_RUN
     *                 DRY_RUN}: Does not load data, but walks through the
     *                 source data and determines the number of valid records,
     *                 taking into account the current mode of {@code
     *                 error_handling}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TYPE_INFERENCE_ONLY
     *                 TYPE_INFERENCE_ONLY}: Infer the type of the source data
     *                 and return, without ingesting any data.  The inferred
     *                 type is returned in the response.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL
     *                 FULL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#JDBC_FETCH_SIZE
     *                 JDBC_FETCH_SIZE}: The JDBC fetch size, which determines
     *                 how many rows to fetch per round trip.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#JDBC_SESSION_INIT_STATEMENT
     *                 JDBC_SESSION_INIT_STATEMENT}: Executes the statement per
     *                 each jdbc session before doing actual load.  The default
     *                 value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#NUM_SPLITS_PER_RANK
     *                 NUM_SPLITS_PER_RANK}: Optional: number of splits for
     *                 reading data per rank. Default will be
     *                 external_file_reader_num_tasks.  The default value is
     *                 ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#NUM_TASKS_PER_RANK
     *                 NUM_TASKS_PER_RANK}: Optional: number of tasks for
     *                 reading data per rank. Default will be
     *                 external_file_reader_num_tasks
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PRIMARY_KEYS
     *                 PRIMARY_KEYS}: Optional: comma separated list of column
     *                 names, to set as primary keys, when not specified in the
     *                 type.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#SHARD_KEYS
     *                 SHARD_KEYS}: Optional: comma separated list of column
     *                 names, to set as primary keys, when not specified in the
     *                 type.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#SUBSCRIBE
     *                 SUBSCRIBE}: Continuously poll the data source to check
     *                 for new data and load it into the table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUNCATE_TABLE
     *                 TRUNCATE_TABLE}: If set to {@code true}, truncates the
     *                 table specified by {@code tableName} prior to loading
     *                 the data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY
     *                 REMOTE_QUERY}: Remote SQL query from which data will be
     *                 sourced
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_ORDER_BY
     *                 REMOTE_QUERY_ORDER_BY}: Name of column to be used for
     *                 splitting the query into multiple sub-queries using
     *                 ordering of given column.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_FILTER_COLUMN
     *                 REMOTE_QUERY_FILTER_COLUMN}: Name of column to be used
     *                 for splitting the query into multiple sub-queries using
     *                 the data distribution of given column.  The default
     *                 value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_INCREASING_COLUMN
     *                 REMOTE_QUERY_INCREASING_COLUMN}: Column on subscribed
     *                 remote query result that will increase for new records
     *                 (e.g., TIMESTAMP).  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_PARTITION_COLUMN
     *                 REMOTE_QUERY_PARTITION_COLUMN}: Alias name for
     *                 remote_query_filter_column.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, truncate
     *                 string values that are longer than the column's type
     *                 size.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for inserting into a table
     *                 with a <a
     *                 href="../../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>. If set to
     *                 {@code true}, any existing table record with primary
     *                 key values that match those of a record being inserted
     *                 will be replaced by that new record (the new
     *                 data will be "upserted"). If set to {@code false},
     *                 any existing table record with primary key values that
     *                 match those of a record being inserted will
     *                 remain unchanged, while the new record will be rejected
     *                 and the error handled as determined by
     *                 {@code ignore_existing_pk} & {@code error_handling}.  If
     *                 the
     *                 specified table does not have a primary key, then this
     *                 option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}: Upsert new records when primary keys match
     *                 existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}: Reject new records when primary keys match
     *                 existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     */
    public InsertRecordsFromQueryRequest(String tableName, String remoteQuery, Map<String, Map<String, String>> modifyColumns, Map<String, String> createTableOptions, Map<String, String> options) {
        this.tableName = (tableName == null) ? "" : tableName;
        this.remoteQuery = (remoteQuery == null) ? "" : remoteQuery;
        this.modifyColumns = (modifyColumns == null) ? new LinkedHashMap<String, Map<String, String>>() : modifyColumns;
        this.createTableOptions = (createTableOptions == null) ? new LinkedHashMap<String, String>() : createTableOptions;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * 
     * @return Name of the table into which the data will be inserted, in
     *         [schema_name.]table_name format, using standard
     *         <a
     *         href="../../../../../../concepts/tables/#table-name-resolution"
     *         target="_top">name resolution rules</a>.
     *         If the table does not exist, the table will be created using
     *         either an existing
     *         {@code type_id} or the type inferred from the
     *         remote query, and the new table name will have to meet standard
     *         <a
     *         href="../../../../../../concepts/tables/#table-naming-criteria"
     *         target="_top">table naming criteria</a>.
     * 
     */
    public String getTableName() {
        return tableName;
    }

    /**
     * 
     * @param tableName  Name of the table into which the data will be
     *                   inserted, in
     *                   [schema_name.]table_name format, using standard
     *                   <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     *                   If the table does not exist, the table will be created
     *                   using either an existing
     *                   {@code type_id} or the type inferred from the
     *                   remote query, and the new table name will have to meet
     *                   standard
     *                   <a
     *                   href="../../../../../../concepts/tables/#table-naming-criteria"
     *                   target="_top">table naming criteria</a>.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public InsertRecordsFromQueryRequest setTableName(String tableName) {
        this.tableName = (tableName == null) ? "" : tableName;
        return this;
    }

    /**
     * 
     * @return Query for which result data needs to be imported
     * 
     */
    public String getRemoteQuery() {
        return remoteQuery;
    }

    /**
     * 
     * @param remoteQuery  Query for which result data needs to be imported
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public InsertRecordsFromQueryRequest setRemoteQuery(String remoteQuery) {
        this.remoteQuery = (remoteQuery == null) ? "" : remoteQuery;
        return this;
    }

    /**
     * 
     * @return Not implemented yet.  The default value is an empty {@link Map}.
     * 
     */
    public Map<String, Map<String, String>> getModifyColumns() {
        return modifyColumns;
    }

    /**
     * 
     * @param modifyColumns  Not implemented yet.  The default value is an
     *                       empty {@link Map}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public InsertRecordsFromQueryRequest setModifyColumns(Map<String, Map<String, String>> modifyColumns) {
        this.modifyColumns = (modifyColumns == null) ? new LinkedHashMap<String, Map<String, String>>() : modifyColumns;
        return this;
    }

    /**
     * 
     * @return Options used when creating the target table.
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TYPE_ID
     *         TYPE_ID}: ID of a currently registered <a
     *         href="../../../../../../concepts/types/" target="_top">type</a>.
     *         The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#NO_ERROR_IF_EXISTS
     *         NO_ERROR_IF_EXISTS}: If {@code true}, prevents an error from
     *         occurring if the table already exists and is of the given type.
     *         If a table with the same ID but a different type exists, it is
     *         still an error.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *         TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *         FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *         FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_REPLICATED
     *         IS_REPLICATED}: Affects the <a
     *         href="../../../../../../concepts/tables/#distribution"
     *         target="_top">distribution scheme</a> for the table's data.  If
     *         {@code true} and the given type has no explicit <a
     *         href="../../../../../../concepts/tables/#shard-key"
     *         target="_top">shard key</a> defined, the table will be <a
     *         href="../../../../../../concepts/tables/#replication"
     *         target="_top">replicated</a>.  If {@code false}, the table will
     *         be <a href="../../../../../../concepts/tables/#sharding"
     *         target="_top">sharded</a> according to the shard key specified
     *         in the given {@code type_id}, or <a
     *         href="../../../../../../concepts/tables/#random-sharding"
     *         target="_top">randomly sharded</a>, if no shard key is
     *         specified.  Note that a type containing a shard key cannot be
     *         used to create a replicated table.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *         TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *         FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *         FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FOREIGN_KEYS
     *         FOREIGN_KEYS}: Semicolon-separated list of <a
     *         href="../../../../../../concepts/tables/#foreign-keys"
     *         target="_top">foreign keys</a>, of the format
     *         '(source_column_name [, ...]) references
     *         target_table_name(primary_key_column_name [, ...]) [as
     *         foreign_key_name]'.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FOREIGN_SHARD_KEY
     *         FOREIGN_SHARD_KEY}: Foreign shard key of the format
     *         'source_column references shard_by_column from
     *         target_table(primary_key_column)'.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_TYPE
     *         PARTITION_TYPE}: <a
     *         href="../../../../../../concepts/tables/#partitioning"
     *         target="_top">Partitioning</a> scheme to use.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#RANGE
     *         RANGE}: Use <a
     *         href="../../../../../../concepts/tables/#partitioning-by-range"
     *         target="_top">range partitioning</a>.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#INTERVAL
     *         INTERVAL}: Use <a
     *         href="../../../../../../concepts/tables/#partitioning-by-interval"
     *         target="_top">interval partitioning</a>.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#LIST
     *         LIST}: Use <a
     *         href="../../../../../../concepts/tables/#partitioning-by-list"
     *         target="_top">list partitioning</a>.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#HASH
     *         HASH}: Use <a
     *         href="../../../../../../concepts/tables/#partitioning-by-hash"
     *         target="_top">hash partitioning</a>.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#SERIES
     *         SERIES}: Use <a
     *         href="../../../../../../concepts/tables/#partitioning-by-series"
     *         target="_top">series partitioning</a>.
     *         </ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_KEYS
     *         PARTITION_KEYS}: Comma-separated list of partition keys, which
     *         are the columns or column expressions by which records will be
     *         assigned to partitions defined by {@code partition_definitions}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_DEFINITIONS
     *         PARTITION_DEFINITIONS}: Comma-separated list of partition
     *         definitions, whose format depends on the choice of {@code
     *         partition_type}.  See <a
     *         href="../../../../../../concepts/tables/#partitioning-by-range"
     *         target="_top">range partitioning</a>, <a
     *         href="../../../../../../concepts/tables/#partitioning-by-interval"
     *         target="_top">interval partitioning</a>, <a
     *         href="../../../../../../concepts/tables/#partitioning-by-list"
     *         target="_top">list partitioning</a>, <a
     *         href="../../../../../../concepts/tables/#partitioning-by-hash"
     *         target="_top">hash partitioning</a>, or <a
     *         href="../../../../../../concepts/tables/#partitioning-by-series"
     *         target="_top">series partitioning</a> for example formats.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_AUTOMATIC_PARTITION
     *         IS_AUTOMATIC_PARTITION}: If {@code true}, a new partition will
     *         be created for values which don't fall into an existing
     *         partition.  Currently only supported for <a
     *         href="../../../../../../concepts/tables/#partitioning-by-list"
     *         target="_top">list partitions</a>.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *         TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *         FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *         FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TTL
     *         TTL}: Sets the <a href="../../../../../../concepts/ttl/"
     *         target="_top">TTL</a> of the table specified in {@code
     *         tableName}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#CHUNK_SIZE
     *         CHUNK_SIZE}: Indicates the number of records per chunk to be
     *         used for this table.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_RESULT_TABLE
     *         IS_RESULT_TABLE}: Indicates whether the table is a <a
     *         href="../../../../../../concepts/tables_memory_only/"
     *         target="_top">memory-only table</a>. A result table cannot
     *         contain columns with store_only or text_search <a
     *         href="../../../../../../concepts/types/#data-handling"
     *         target="_top">data-handling</a> or that are <a
     *         href="../../../../../../concepts/types/#primitive-types"
     *         target="_top">non-charN strings</a>, and it will not be retained
     *         if the server is restarted.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *         TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *         FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *         FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#STRATEGY_DEFINITION
     *         STRATEGY_DEFINITION}: The <a
     *         href="../../../../../../rm/concepts/#tier-strategies"
     *         target="_top">tier strategy</a> for the table and its columns.
     *         </ul>
     *         The default value is an empty {@link Map}.
     * 
     */
    public Map<String, String> getCreateTableOptions() {
        return createTableOptions;
    }

    /**
     * 
     * @param createTableOptions  Options used when creating the target table.
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TYPE_ID
     *                            TYPE_ID}: ID of a currently registered <a
     *                            href="../../../../../../concepts/types/"
     *                            target="_top">type</a>.  The default value is
     *                            ''.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#NO_ERROR_IF_EXISTS
     *                            NO_ERROR_IF_EXISTS}: If {@code true},
     *                            prevents an error from occurring if the table
     *                            already exists and is of the given type.  If
     *                            a table with the same ID but a different type
     *                            exists, it is still an error.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_REPLICATED
     *                            IS_REPLICATED}: Affects the <a
     *                            href="../../../../../../concepts/tables/#distribution"
     *                            target="_top">distribution scheme</a> for the
     *                            table's data.  If {@code true} and the given
     *                            type has no explicit <a
     *                            href="../../../../../../concepts/tables/#shard-key"
     *                            target="_top">shard key</a> defined, the
     *                            table will be <a
     *                            href="../../../../../../concepts/tables/#replication"
     *                            target="_top">replicated</a>.  If {@code
     *                            false}, the table will be <a
     *                            href="../../../../../../concepts/tables/#sharding"
     *                            target="_top">sharded</a> according to the
     *                            shard key specified in the given {@code
     *                            type_id}, or <a
     *                            href="../../../../../../concepts/tables/#random-sharding"
     *                            target="_top">randomly sharded</a>, if no
     *                            shard key is specified.  Note that a type
     *                            containing a shard key cannot be used to
     *                            create a replicated table.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FOREIGN_KEYS
     *                            FOREIGN_KEYS}: Semicolon-separated list of <a
     *                            href="../../../../../../concepts/tables/#foreign-keys"
     *                            target="_top">foreign keys</a>, of the format
     *                            '(source_column_name [, ...]) references
     *                            target_table_name(primary_key_column_name [,
     *                            ...]) [as foreign_key_name]'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FOREIGN_SHARD_KEY
     *                            FOREIGN_SHARD_KEY}: Foreign shard key of the
     *                            format 'source_column references
     *                            shard_by_column from
     *                            target_table(primary_key_column)'.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_TYPE
     *                            PARTITION_TYPE}: <a
     *                            href="../../../../../../concepts/tables/#partitioning"
     *                            target="_top">Partitioning</a> scheme to use.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#RANGE
     *                            RANGE}: Use <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#INTERVAL
     *                            INTERVAL}: Use <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#LIST
     *                            LIST}: Use <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#HASH
     *                            HASH}: Use <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#SERIES
     *                            SERIES}: Use <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a>.
     *                            </ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_KEYS
     *                            PARTITION_KEYS}: Comma-separated list of
     *                            partition keys, which are the columns or
     *                            column expressions by which records will be
     *                            assigned to partitions defined by {@code
     *                            partition_definitions}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#PARTITION_DEFINITIONS
     *                            PARTITION_DEFINITIONS}: Comma-separated list
     *                            of partition definitions, whose format
     *                            depends on the choice of {@code
     *                            partition_type}.  See <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-range"
     *                            target="_top">range partitioning</a>, <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-interval"
     *                            target="_top">interval partitioning</a>, <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitioning</a>, <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-hash"
     *                            target="_top">hash partitioning</a>, or <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-series"
     *                            target="_top">series partitioning</a> for
     *                            example formats.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_AUTOMATIC_PARTITION
     *                            IS_AUTOMATIC_PARTITION}: If {@code true}, a
     *                            new partition will be created for values
     *                            which don't fall into an existing partition.
     *                            Currently only supported for <a
     *                            href="../../../../../../concepts/tables/#partitioning-by-list"
     *                            target="_top">list partitions</a>.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TTL
     *                            TTL}: Sets the <a
     *                            href="../../../../../../concepts/ttl/"
     *                            target="_top">TTL</a> of the table specified
     *                            in {@code tableName}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#CHUNK_SIZE
     *                            CHUNK_SIZE}: Indicates the number of records
     *                            per chunk to be used for this table.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#IS_RESULT_TABLE
     *                            IS_RESULT_TABLE}: Indicates whether the table
     *                            is a <a
     *                            href="../../../../../../concepts/tables_memory_only/"
     *                            target="_top">memory-only table</a>. A result
     *                            table cannot contain columns with store_only
     *                            or text_search <a
     *                            href="../../../../../../concepts/types/#data-handling"
     *                            target="_top">data-handling</a> or that are
     *                            <a
     *                            href="../../../../../../concepts/types/#primitive-types"
     *                            target="_top">non-charN strings</a>, and it
     *                            will not be retained if the server is
     *                            restarted.
     *                            Supported values:
     *                            <ul>
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#TRUE
     *                            TRUE}
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}
     *                            </ul>
     *                            The default value is {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#FALSE
     *                            FALSE}.
     *                                    <li> {@link
     *                            com.gpudb.protocol.InsertRecordsFromQueryRequest.CreateTableOptions#STRATEGY_DEFINITION
     *                            STRATEGY_DEFINITION}: The <a
     *                            href="../../../../../../rm/concepts/#tier-strategies"
     *                            target="_top">tier strategy</a> for the table
     *                            and its columns.
     *                            </ul>
     *                            The default value is an empty {@link Map}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public InsertRecordsFromQueryRequest setCreateTableOptions(Map<String, String> createTableOptions) {
        this.createTableOptions = (createTableOptions == null) ? new LinkedHashMap<String, String>() : createTableOptions;
        return this;
    }

    /**
     * 
     * @return Optional parameters.
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BAD_RECORD_TABLE_NAME
     *         BAD_RECORD_TABLE_NAME}: Optional name of a table to which
     *         records that were rejected are written.  The bad-record-table
     *         has the following columns: line_number (long), line_rejected
     *         (string), error_message (string). When error handling is Abort,
     *         bad records table is not populated.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BAD_RECORD_TABLE_LIMIT
     *         BAD_RECORD_TABLE_LIMIT}: A positive integer indicating the
     *         maximum number of records that can be  written to the
     *         bad-record-table.   Default value is 10000
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BATCH_SIZE
     *         BATCH_SIZE}: Number of records per batch when inserting data.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DATASOURCE_NAME
     *         DATASOURCE_NAME}: Name of an existing external data source from
     *         which table will be loaded
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ERROR_HANDLING
     *         ERROR_HANDLING}: Specifies how errors should be handled upon
     *         insertion.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PERMISSIVE
     *         PERMISSIVE}: Records with missing columns are populated with
     *         nulls if possible; otherwise, the malformed records are skipped.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_BAD_RECORDS
     *         IGNORE_BAD_RECORDS}: Malformed records are skipped.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT
     *         ABORT}: Stops current insertion and aborts entire operation when
     *         an error is encountered.  Primary key collisions are considered
     *         abortable errors in this mode.
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT
     *         ABORT}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_EXISTING_PK
     *         IGNORE_EXISTING_PK}: Specifies the record collision
     *         error-suppression policy for
     *         inserting into a table with a <a
     *         href="../../../../../../concepts/tables/#primary-keys"
     *         target="_top">primary key</a>, only used when
     *         not in upsert mode (upsert mode is disabled when {@code
     *         update_on_existing_pk} is
     *         {@code false}).  If set to
     *         {@code true}, any record being inserted that is rejected
     *         for having primary key values that match those of an existing
     *         table record will be ignored with no
     *         error generated.  If {@code false}, the rejection of any
     *         record for having primary key values matching an existing record
     *         will result in an error being
     *         reported, as determined by {@code error_handling}.  If the
     *         specified table does not
     *         have a primary key or if upsert mode is in effect ({@code
     *         update_on_existing_pk} is
     *         {@code true}), then this option has no effect.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *         TRUE}: Ignore new records whose primary key values collide with
     *         those of existing records
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *         FALSE}: Treat as errors any new records whose primary key values
     *         collide with those of existing records
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *         FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#INGESTION_MODE
     *         INGESTION_MODE}: Whether to do a full load, dry run, or perform
     *         a type inference on the source data.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL
     *         FULL}: Run a type inference on the source data (if needed) and
     *         ingest
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DRY_RUN
     *         DRY_RUN}: Does not load data, but walks through the source data
     *         and determines the number of valid records, taking into account
     *         the current mode of {@code error_handling}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TYPE_INFERENCE_ONLY
     *         TYPE_INFERENCE_ONLY}: Infer the type of the source data and
     *         return, without ingesting any data.  The inferred type is
     *         returned in the response.
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL
     *         FULL}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#JDBC_FETCH_SIZE
     *         JDBC_FETCH_SIZE}: The JDBC fetch size, which determines how many
     *         rows to fetch per round trip.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#JDBC_SESSION_INIT_STATEMENT
     *         JDBC_SESSION_INIT_STATEMENT}: Executes the statement per each
     *         jdbc session before doing actual load.  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#NUM_SPLITS_PER_RANK
     *         NUM_SPLITS_PER_RANK}: Optional: number of splits for reading
     *         data per rank. Default will be external_file_reader_num_tasks.
     *         The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#NUM_TASKS_PER_RANK
     *         NUM_TASKS_PER_RANK}: Optional: number of tasks for reading data
     *         per rank. Default will be external_file_reader_num_tasks
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PRIMARY_KEYS
     *         PRIMARY_KEYS}: Optional: comma separated list of column names,
     *         to set as primary keys, when not specified in the type.  The
     *         default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#SHARD_KEYS
     *         SHARD_KEYS}: Optional: comma separated list of column names, to
     *         set as primary keys, when not specified in the type.  The
     *         default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#SUBSCRIBE
     *         SUBSCRIBE}: Continuously poll the data source to check for new
     *         data and load it into the table.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *         TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *         FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *         FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUNCATE_TABLE
     *         TRUNCATE_TABLE}: If set to {@code true}, truncates the table
     *         specified by {@code tableName} prior to loading the data.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *         TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *         FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *         FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY
     *         REMOTE_QUERY}: Remote SQL query from which data will be sourced
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_ORDER_BY
     *         REMOTE_QUERY_ORDER_BY}: Name of column to be used for splitting
     *         the query into multiple sub-queries using ordering of given
     *         column.  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_FILTER_COLUMN
     *         REMOTE_QUERY_FILTER_COLUMN}: Name of column to be used for
     *         splitting the query into multiple sub-queries using the data
     *         distribution of given column.  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_INCREASING_COLUMN
     *         REMOTE_QUERY_INCREASING_COLUMN}: Column on subscribed remote
     *         query result that will increase for new records (e.g.,
     *         TIMESTAMP).  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_PARTITION_COLUMN
     *         REMOTE_QUERY_PARTITION_COLUMN}: Alias name for
     *         remote_query_filter_column.  The default value is ''.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUNCATE_STRINGS
     *         TRUNCATE_STRINGS}: If set to {@code true}, truncate string
     *         values that are longer than the column's type size.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *         TRUE}
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *         FALSE}
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *         FALSE}.
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#UPDATE_ON_EXISTING_PK
     *         UPDATE_ON_EXISTING_PK}: Specifies the record collision policy
     *         for inserting into a table
     *         with a <a href="../../../../../../concepts/tables/#primary-keys"
     *         target="_top">primary key</a>. If set to
     *         {@code true}, any existing table record with primary
     *         key values that match those of a record being inserted will be
     *         replaced by that new record (the new
     *         data will be "upserted"). If set to {@code false},
     *         any existing table record with primary key values that match
     *         those of a record being inserted will
     *         remain unchanged, while the new record will be rejected and the
     *         error handled as determined by
     *         {@code ignore_existing_pk} & {@code error_handling}.  If the
     *         specified table does not have a primary key, then this option
     *         has no effect.
     *         Supported values:
     *         <ul>
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *         TRUE}: Upsert new records when primary keys match existing
     *         records
     *                 <li> {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *         FALSE}: Reject new records when primary keys match existing
     *         records
     *         </ul>
     *         The default value is {@link
     *         com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *         FALSE}.
     *         </ul>
     *         The default value is an empty {@link Map}.
     * 
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * 
     * @param options  Optional parameters.
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BAD_RECORD_TABLE_NAME
     *                 BAD_RECORD_TABLE_NAME}: Optional name of a table to
     *                 which records that were rejected are written.  The
     *                 bad-record-table has the following columns: line_number
     *                 (long), line_rejected (string), error_message (string).
     *                 When error handling is Abort, bad records table is not
     *                 populated.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BAD_RECORD_TABLE_LIMIT
     *                 BAD_RECORD_TABLE_LIMIT}: A positive integer indicating
     *                 the maximum number of records that can be  written to
     *                 the bad-record-table.   Default value is 10000
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#BATCH_SIZE
     *                 BATCH_SIZE}: Number of records per batch when inserting
     *                 data.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DATASOURCE_NAME
     *                 DATASOURCE_NAME}: Name of an existing external data
     *                 source from which table will be loaded
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ERROR_HANDLING
     *                 ERROR_HANDLING}: Specifies how errors should be handled
     *                 upon insertion.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PERMISSIVE
     *                 PERMISSIVE}: Records with missing columns are populated
     *                 with nulls if possible; otherwise, the malformed records
     *                 are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_BAD_RECORDS
     *                 IGNORE_BAD_RECORDS}: Malformed records are skipped.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT
     *                 ABORT}: Stops current insertion and aborts entire
     *                 operation when an error is encountered.  Primary key
     *                 collisions are considered abortable errors in this mode.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#ABORT
     *                 ABORT}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#IGNORE_EXISTING_PK
     *                 IGNORE_EXISTING_PK}: Specifies the record collision
     *                 error-suppression policy for
     *                 inserting into a table with a <a
     *                 href="../../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>, only used when
     *                 not in upsert mode (upsert mode is disabled when {@code
     *                 update_on_existing_pk} is
     *                 {@code false}).  If set to
     *                 {@code true}, any record being inserted that is rejected
     *                 for having primary key values that match those of an
     *                 existing table record will be ignored with no
     *                 error generated.  If {@code false}, the rejection of any
     *                 record for having primary key values matching an
     *                 existing record will result in an error being
     *                 reported, as determined by {@code error_handling}.  If
     *                 the specified table does not
     *                 have a primary key or if upsert mode is in effect
     *                 ({@code update_on_existing_pk} is
     *                 {@code true}), then this option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}: Ignore new records whose primary key values
     *                 collide with those of existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}: Treat as errors any new records whose primary
     *                 key values collide with those of existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#INGESTION_MODE
     *                 INGESTION_MODE}: Whether to do a full load, dry run, or
     *                 perform a type inference on the source data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL
     *                 FULL}: Run a type inference on the source data (if
     *                 needed) and ingest
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#DRY_RUN
     *                 DRY_RUN}: Does not load data, but walks through the
     *                 source data and determines the number of valid records,
     *                 taking into account the current mode of {@code
     *                 error_handling}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TYPE_INFERENCE_ONLY
     *                 TYPE_INFERENCE_ONLY}: Infer the type of the source data
     *                 and return, without ingesting any data.  The inferred
     *                 type is returned in the response.
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FULL
     *                 FULL}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#JDBC_FETCH_SIZE
     *                 JDBC_FETCH_SIZE}: The JDBC fetch size, which determines
     *                 how many rows to fetch per round trip.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#JDBC_SESSION_INIT_STATEMENT
     *                 JDBC_SESSION_INIT_STATEMENT}: Executes the statement per
     *                 each jdbc session before doing actual load.  The default
     *                 value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#NUM_SPLITS_PER_RANK
     *                 NUM_SPLITS_PER_RANK}: Optional: number of splits for
     *                 reading data per rank. Default will be
     *                 external_file_reader_num_tasks.  The default value is
     *                 ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#NUM_TASKS_PER_RANK
     *                 NUM_TASKS_PER_RANK}: Optional: number of tasks for
     *                 reading data per rank. Default will be
     *                 external_file_reader_num_tasks
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#PRIMARY_KEYS
     *                 PRIMARY_KEYS}: Optional: comma separated list of column
     *                 names, to set as primary keys, when not specified in the
     *                 type.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#SHARD_KEYS
     *                 SHARD_KEYS}: Optional: comma separated list of column
     *                 names, to set as primary keys, when not specified in the
     *                 type.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#SUBSCRIBE
     *                 SUBSCRIBE}: Continuously poll the data source to check
     *                 for new data and load it into the table.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUNCATE_TABLE
     *                 TRUNCATE_TABLE}: If set to {@code true}, truncates the
     *                 table specified by {@code tableName} prior to loading
     *                 the data.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY
     *                 REMOTE_QUERY}: Remote SQL query from which data will be
     *                 sourced
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_ORDER_BY
     *                 REMOTE_QUERY_ORDER_BY}: Name of column to be used for
     *                 splitting the query into multiple sub-queries using
     *                 ordering of given column.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_FILTER_COLUMN
     *                 REMOTE_QUERY_FILTER_COLUMN}: Name of column to be used
     *                 for splitting the query into multiple sub-queries using
     *                 the data distribution of given column.  The default
     *                 value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_INCREASING_COLUMN
     *                 REMOTE_QUERY_INCREASING_COLUMN}: Column on subscribed
     *                 remote query result that will increase for new records
     *                 (e.g., TIMESTAMP).  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#REMOTE_QUERY_PARTITION_COLUMN
     *                 REMOTE_QUERY_PARTITION_COLUMN}: Alias name for
     *                 remote_query_filter_column.  The default value is ''.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUNCATE_STRINGS
     *                 TRUNCATE_STRINGS}: If set to {@code true}, truncate
     *                 string values that are longer than the column's type
     *                 size.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#UPDATE_ON_EXISTING_PK
     *                 UPDATE_ON_EXISTING_PK}: Specifies the record collision
     *                 policy for inserting into a table
     *                 with a <a
     *                 href="../../../../../../concepts/tables/#primary-keys"
     *                 target="_top">primary key</a>. If set to
     *                 {@code true}, any existing table record with primary
     *                 key values that match those of a record being inserted
     *                 will be replaced by that new record (the new
     *                 data will be "upserted"). If set to {@code false},
     *                 any existing table record with primary key values that
     *                 match those of a record being inserted will
     *                 remain unchanged, while the new record will be rejected
     *                 and the error handled as determined by
     *                 {@code ignore_existing_pk} & {@code error_handling}.  If
     *                 the
     *                 specified table does not have a primary key, then this
     *                 option has no effect.
     *                 Supported values:
     *                 <ul>
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#TRUE
     *                 TRUE}: Upsert new records when primary keys match
     *                 existing records
     *                         <li> {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}: Reject new records when primary keys match
     *                 existing records
     *                 </ul>
     *                 The default value is {@link
     *                 com.gpudb.protocol.InsertRecordsFromQueryRequest.Options#FALSE
     *                 FALSE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     * 
     * @return {@code this} to mimic the builder pattern.
     * 
     */
    public InsertRecordsFromQueryRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @return the schema object describing this class.
     * 
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to get
     * 
     * @return value of the field with the given index.
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.tableName;

            case 1:
                return this.remoteQuery;

            case 2:
                return this.modifyColumns;

            case 3:
                return this.createTableOptions;

            case 4:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     * 
     * @param index  the position of the field to set
     * @param value  the value to set
     * 
     * @throws IndexOutOfBoundsException
     * 
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.tableName = (String)value;
                break;

            case 1:
                this.remoteQuery = (String)value;
                break;

            case 2:
                this.modifyColumns = (Map<String, Map<String, String>>)value;
                break;

            case 3:
                this.createTableOptions = (Map<String, String>)value;
                break;

            case 4:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        InsertRecordsFromQueryRequest that = (InsertRecordsFromQueryRequest)obj;

        return ( this.tableName.equals( that.tableName )
                 && this.remoteQuery.equals( that.remoteQuery )
                 && this.modifyColumns.equals( that.modifyColumns )
                 && this.createTableOptions.equals( that.createTableOptions )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "tableName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.tableName ) );
        builder.append( ", " );
        builder.append( gd.toString( "remoteQuery" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.remoteQuery ) );
        builder.append( ", " );
        builder.append( gd.toString( "modifyColumns" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.modifyColumns ) );
        builder.append( ", " );
        builder.append( gd.toString( "createTableOptions" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.createTableOptions ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableName.hashCode();
        hashCode = (31 * hashCode) + this.remoteQuery.hashCode();
        hashCode = (31 * hashCode) + this.modifyColumns.hashCode();
        hashCode = (31 * hashCode) + this.createTableOptions.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }

}

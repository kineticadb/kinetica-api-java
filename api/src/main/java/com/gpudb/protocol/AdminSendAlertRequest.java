/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#adminSendAlert(AdminSendAlertRequest) GPUdb.adminSendAlert}.
 * <p>
 * Sends a user generated alert to the monitoring system.
 */
public class AdminSendAlertRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("AdminSendAlertRequest")
            .namespace("com.gpudb")
            .fields()
                .name("message").type().stringType().noDefault()
                .name("label").type().stringType().noDefault()
                .name("logLevel").type().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    /**
     * A set of string constants for the {@link AdminSendAlertRequest}
     * parameter {@link #getLogLevel() logLevel}.
     * <p>
     * Alert message logging criteria
     */
    public static final class LogLevel {
        public static final String FATAL = "fatal";
        public static final String ERROR = "error";
        public static final String WARN = "warn";
        public static final String INFO = "info";
        public static final String DEBUG = "debug";

        private LogLevel() {  }
    }

    private String message;
    private String label;
    private String logLevel;
    private Map<String, String> options;

    /**
     * Constructs an AdminSendAlertRequest object with default parameters.
     */
    public AdminSendAlertRequest() {
        message = "";
        label = "";
        logLevel = "";
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs an AdminSendAlertRequest object with the specified
     * parameters.
     *
     * @param message  Alert message body. The default value is ''.
     * @param label  Label to add to alert message. The default value is ''.
     * @param logLevel  Alert message logging criteria.
     *                  Supported values:
     *                  <ul>
     *                      <li>{@link LogLevel#FATAL FATAL}
     *                      <li>{@link LogLevel#ERROR ERROR}
     *                      <li>{@link LogLevel#WARN WARN}
     *                      <li>{@link LogLevel#INFO INFO}
     *                      <li>{@link LogLevel#DEBUG DEBUG}
     *                  </ul>
     * @param options  Optional parameters. The default value is an empty
     *                 {@link Map}.
     */
    public AdminSendAlertRequest(String message, String label, String logLevel, Map<String, String> options) {
        this.message = (message == null) ? "" : message;
        this.label = (label == null) ? "" : label;
        this.logLevel = (logLevel == null) ? "" : logLevel;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * Alert message body. The default value is ''.
     *
     * @return The current value of {@code message}.
     */
    public String getMessage() {
        return message;
    }

    /**
     * Alert message body. The default value is ''.
     *
     * @param message  The new value for {@code message}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AdminSendAlertRequest setMessage(String message) {
        this.message = (message == null) ? "" : message;
        return this;
    }

    /**
     * Label to add to alert message. The default value is ''.
     *
     * @return The current value of {@code label}.
     */
    public String getLabel() {
        return label;
    }

    /**
     * Label to add to alert message. The default value is ''.
     *
     * @param label  The new value for {@code label}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AdminSendAlertRequest setLabel(String label) {
        this.label = (label == null) ? "" : label;
        return this;
    }

    /**
     * Alert message logging criteria.
     * Supported values:
     * <ul>
     *     <li>{@link LogLevel#FATAL FATAL}
     *     <li>{@link LogLevel#ERROR ERROR}
     *     <li>{@link LogLevel#WARN WARN}
     *     <li>{@link LogLevel#INFO INFO}
     *     <li>{@link LogLevel#DEBUG DEBUG}
     * </ul>
     *
     * @return The current value of {@code logLevel}.
     */
    public String getLogLevel() {
        return logLevel;
    }

    /**
     * Alert message logging criteria.
     * Supported values:
     * <ul>
     *     <li>{@link LogLevel#FATAL FATAL}
     *     <li>{@link LogLevel#ERROR ERROR}
     *     <li>{@link LogLevel#WARN WARN}
     *     <li>{@link LogLevel#INFO INFO}
     *     <li>{@link LogLevel#DEBUG DEBUG}
     * </ul>
     *
     * @param logLevel  The new value for {@code logLevel}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AdminSendAlertRequest setLogLevel(String logLevel) {
        this.logLevel = (logLevel == null) ? "" : logLevel;
        return this;
    }

    /**
     * Optional parameters. The default value is an empty {@link Map}.
     *
     * @return The current value of {@code options}.
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * Optional parameters. The default value is an empty {@link Map}.
     *
     * @param options  The new value for {@code options}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AdminSendAlertRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.message;

            case 1:
                return this.label;

            case 2:
                return this.logLevel;

            case 3:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.message = (String)value;
                break;

            case 1:
                this.label = (String)value;
                break;

            case 2:
                this.logLevel = (String)value;
                break;

            case 3:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        AdminSendAlertRequest that = (AdminSendAlertRequest)obj;

        return ( this.message.equals( that.message )
                 && this.label.equals( that.label )
                 && this.logLevel.equals( that.logLevel )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "message" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.message ) );
        builder.append( ", " );
        builder.append( gd.toString( "label" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.label ) );
        builder.append( ", " );
        builder.append( gd.toString( "logLevel" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.logLevel ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.message.hashCode();
        hashCode = (31 * hashCode) + this.label.hashCode();
        hashCode = (31 * hashCode) + this.logLevel.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }
}

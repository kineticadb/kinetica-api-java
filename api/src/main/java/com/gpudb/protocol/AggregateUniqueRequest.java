/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#aggregateUnique(AggregateUniqueRequest)
 * GPUdb.aggregateUnique}.
 * <p>
 * Returns all the unique values from a particular column (specified by {@link
 * #getColumnName() columnName}) of a particular table or view (specified by
 * {@link #getTableName() tableName}). If {@link #getColumnName() columnName}
 * is a numeric column, the values will be in {@link
 * com.gpudb.protocol.AggregateUniqueResponse#getData() data}. Otherwise if
 * {@link #getColumnName() columnName} is a string column, the values will be
 * in {@code jsonEncodedResponse}.  The results can be paged via {@link
 * #getOffset() offset} and {@link #getLimit() limit} parameters.
 * <p>
 * Columns marked as <a href="../../../../../../concepts/types/#data-handling"
 * target="_top">store-only</a> are unable to be used with this function.
 * <p>
 * To get the first 10 unique values sorted in descending order {@link #getOptions() options} would be:
 * <pre>
 *
 *     {"limit":"10","sort_order":"descending"}
 * </pre>
 * The response is returned as a dynamic schema. For details see: <a
 * href="../../../../../../api/concepts/#dynamic-schemas" target="_top">dynamic
 * schemas documentation</a>.
 * <p>
 * If a {@link Options#RESULT_TABLE RESULT_TABLE} name is specified in the
 * {@link #getOptions() options}, the results are stored in a new table with
 * that name--no results are returned in the response.  Both the table name and
 * resulting column name must adhere to <a
 * href="../../../../../../concepts/tables/#table" target="_top">standard
 * naming conventions</a>; any column expression will need to be aliased.  If
 * the source table's <a href="../../../../../../concepts/tables/#shard-keys"
 * target="_top">shard key</a> is used as the {@link #getColumnName()
 * columnName}, the result table will be sharded, in all other cases it will be
 * replicated.  Sorting will properly function only if the result table is
 * replicated or if there is only one processing node and should not be relied
 * upon in other cases.  Not available if the value of {@link #getColumnName()
 * columnName} is an unrestricted-length string.
 */
public class AggregateUniqueRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("AggregateUniqueRequest")
            .namespace("com.gpudb")
            .fields()
                .name("tableName").type().stringType().noDefault()
                .name("columnName").type().stringType().noDefault()
                .name("offset").type().longType().noDefault()
                .name("limit").type().longType().noDefault()
                .name("encoding").type().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    /**
     * A set of string constants for the {@link AggregateUniqueRequest}
     * parameter {@link #getEncoding() encoding}.
     * <p>
     * Specifies the encoding for returned records.
     */
    public static final class Encoding {
        /**
         * Indicates that the returned records should be binary encoded.
         */
        public static final String BINARY = "binary";

        /**
         * Indicates that the returned records should be json encoded.
         */
        public static final String JSON = "json";

        private Encoding() {  }
    }

    /**
     * A set of string constants for the {@link AggregateUniqueRequest}
     * parameter {@link #getOptions() options}.
     * <p>
     * Optional parameters.
     */
    public static final class Options {
        /**
         * If {@link Options#TRUE TRUE}, a unique temporary table name will be
         * generated in the sys_temp schema and used in place of {@link
         * Options#RESULT_TABLE RESULT_TABLE}. If {@link
         * Options#RESULT_TABLE_PERSIST RESULT_TABLE_PERSIST} is {@link
         * Options#FALSE FALSE} (or unspecified), then this is always allowed
         * even if the caller does not have permission to create tables. The
         * generated name is returned in {@link
         * com.gpudb.protocol.AggregateUniqueResponse.Info#QUALIFIED_RESULT_TABLE_NAME
         * QUALIFIED_RESULT_TABLE_NAME}.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String CREATE_TEMP_TABLE = "create_temp_table";

        public static final String TRUE = "true";
        public static final String FALSE = "false";

        /**
         * [DEPRECATED--please specify the containing schema as part of {@link
         * Options#RESULT_TABLE RESULT_TABLE} and use {@link
         * com.gpudb.GPUdb#createSchema(CreateSchemaRequest)
         * GPUdb.createSchema} to create the schema if non-existent]  Name of a
         * schema which is to contain the table specified in {@link
         * Options#RESULT_TABLE RESULT_TABLE}. If the schema provided is
         * non-existent, it will be automatically created.
         */
        public static final String COLLECTION_NAME = "collection_name";

        /**
         * Optional filter expression to apply to the table.
         */
        public static final String EXPRESSION = "expression";

        /**
         * String indicating how the returned values should be sorted.
         * Supported values:
         * <ul>
         *     <li>{@link Options#ASCENDING ASCENDING}
         *     <li>{@link Options#DESCENDING DESCENDING}
         * </ul>
         * The default value is {@link Options#ASCENDING ASCENDING}.
         */
        public static final String SORT_ORDER = "sort_order";

        public static final String ASCENDING = "ascending";
        public static final String DESCENDING = "descending";

        /**
         * Comma-separated list of the columns to be sorted by as well as the
         * sort direction, e.g., 'timestamp asc, x desc'. The default value is
         * ''.
         */
        public static final String ORDER_BY = "order_by";

        /**
         * The name of the table used to store the results, in
         * [schema_name.]table_name format, using standard <a
         * href="../../../../../../concepts/tables/#table-name-resolution"
         * target="_top">name resolution rules</a> and meeting <a
         * href="../../../../../../concepts/tables/#table-naming-criteria"
         * target="_top">table naming criteria</a>.  If present, no results are
         * returned in the response.  Not available if {@link #getColumnName()
         * columnName} is an unrestricted-length string.
         */
        public static final String RESULT_TABLE = "result_table";

        /**
         * If {@link Options#TRUE TRUE}, then the result table specified in
         * {@link Options#RESULT_TABLE RESULT_TABLE} will be persisted and will
         * not expire unless a {@link Options#TTL TTL} is specified.   If
         * {@link Options#FALSE FALSE}, then the result table will be an
         * in-memory table and will expire unless a {@link Options#TTL TTL} is
         * specified otherwise.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String RESULT_TABLE_PERSIST = "result_table_persist";

        /**
         * Force the result table to be replicated (ignores any sharding). Must
         * be used in combination with the {@link Options#RESULT_TABLE
         * RESULT_TABLE} option.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String RESULT_TABLE_FORCE_REPLICATED = "result_table_force_replicated";

        /**
         * If {@link Options#TRUE TRUE} then set a primary key for the result
         * table. Must be used in combination with the {@link
         * Options#RESULT_TABLE RESULT_TABLE} option.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String RESULT_TABLE_GENERATE_PK = "result_table_generate_pk";

        /**
         * Sets the <a href="../../../../../../concepts/ttl/"
         * target="_top">TTL</a> of the table specified in {@link
         * Options#RESULT_TABLE RESULT_TABLE}.
         */
        public static final String TTL = "ttl";

        /**
         * Indicates the number of records per chunk to be used for the result
         * table. Must be used in combination with the {@link
         * Options#RESULT_TABLE RESULT_TABLE} option.
         */
        public static final String CHUNK_SIZE = "chunk_size";

        /**
         * Indicates the target maximum data size for each column in a chunk to
         * be used for the result table. Must be used in combination with the
         * {@link Options#RESULT_TABLE RESULT_TABLE} option.
         */
        public static final String CHUNK_COLUMN_MAX_MEMORY = "chunk_column_max_memory";

        /**
         * Indicates the target maximum data size for all columns in a chunk to
         * be used for the result table. Must be used in combination with the
         * {@link Options#RESULT_TABLE RESULT_TABLE} option.
         */
        public static final String CHUNK_MAX_MEMORY = "chunk_max_memory";

        /**
         * The default <a href="../../../../../../concepts/column_compression/"
         * target="_top">compression codec</a> for the result table's columns.
         */
        public static final String COMPRESSION_CODEC = "compression_codec";

        /**
         * ID of view of which the result table will be a member. The default
         * value is ''.
         */
        public static final String VIEW_ID = "view_id";

        private Options() {  }
    }

    private String tableName;
    private String columnName;
    private long offset;
    private long limit;
    private String encoding;
    private Map<String, String> options;

    /**
     * Constructs an AggregateUniqueRequest object with default parameters.
     */
    public AggregateUniqueRequest() {
        tableName = "";
        columnName = "";
        encoding = Encoding.BINARY;
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs an AggregateUniqueRequest object with the specified
     * parameters.
     *
     * @param tableName  Name of an existing table or view on which the
     *                   operation will be performed, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnName  Name of the column or an expression containing one or
     *                    more column names on which the unique function would
     *                    be applied.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results). The default value is 0. The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or END_OF_SET (-9999) to indicate
     *               that the maximum number of results allowed by the server
     *               should be returned.  The number of records returned will
     *               never exceed the server's own limit, defined by the <a
     *               href="../../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration. Use {@link
     *               com.gpudb.protocol.AggregateUniqueResponse#getHasMoreRecords()
     *               hasMoreRecords} to see if more records exist in the result
     *               to be fetched, and {@code offset} & {@code limit} to
     *               request subsequent pages of results. The default value is
     *               -9999.
     * @param options  Optional parameters.
     *                 <ul>
     *                     <li>{@link Options#CREATE_TEMP_TABLE
     *                         CREATE_TEMP_TABLE}: If {@link Options#TRUE
     *                         TRUE}, a unique temporary table name will be
     *                         generated in the sys_temp schema and used in
     *                         place of {@link Options#RESULT_TABLE
     *                         RESULT_TABLE}. If {@link
     *                         Options#RESULT_TABLE_PERSIST
     *                         RESULT_TABLE_PERSIST} is {@link Options#FALSE
     *                         FALSE} (or unspecified), then this is always
     *                         allowed even if the caller does not have
     *                         permission to create tables. The generated name
     *                         is returned in {@link
     *                         com.gpudb.protocol.AggregateUniqueResponse.Info#QUALIFIED_RESULT_TABLE_NAME
     *                         QUALIFIED_RESULT_TABLE_NAME}.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#COLLECTION_NAME COLLECTION_NAME}:
     *                         [DEPRECATED--please specify the containing
     *                         schema as part of {@link Options#RESULT_TABLE
     *                         RESULT_TABLE} and use {@link
     *                         com.gpudb.GPUdb#createSchema(CreateSchemaRequest)
     *                         GPUdb.createSchema} to create the schema if
     *                         non-existent]  Name of a schema which is to
     *                         contain the table specified in {@link
     *                         Options#RESULT_TABLE RESULT_TABLE}. If the
     *                         schema provided is non-existent, it will be
     *                         automatically created.
     *                     <li>{@link Options#EXPRESSION EXPRESSION}: Optional
     *                         filter expression to apply to the table.
     *                     <li>{@link Options#SORT_ORDER SORT_ORDER}: String
     *                         indicating how the returned values should be
     *                         sorted.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#ASCENDING ASCENDING}
     *                             <li>{@link Options#DESCENDING DESCENDING}
     *                         </ul>
     *                         The default value is {@link Options#ASCENDING
     *                         ASCENDING}.
     *                     <li>{@link Options#ORDER_BY ORDER_BY}:
     *                         Comma-separated list of the columns to be sorted
     *                         by as well as the sort direction, e.g.,
     *                         'timestamp asc, x desc'. The default value is
     *                         ''.
     *                     <li>{@link Options#RESULT_TABLE RESULT_TABLE}: The
     *                         name of the table used to store the results, in
     *                         [schema_name.]table_name format, using standard
     *                         <a
     *                         href="../../../../../../concepts/tables/#table-name-resolution"
     *                         target="_top">name resolution rules</a> and
     *                         meeting <a
     *                         href="../../../../../../concepts/tables/#table-naming-criteria"
     *                         target="_top">table naming criteria</a>.  If
     *                         present, no results are returned in the
     *                         response.  Not available if {@code columnName}
     *                         is an unrestricted-length string.
     *                     <li>{@link Options#RESULT_TABLE_PERSIST
     *                         RESULT_TABLE_PERSIST}: If {@link Options#TRUE
     *                         TRUE}, then the result table specified in {@link
     *                         Options#RESULT_TABLE RESULT_TABLE} will be
     *                         persisted and will not expire unless a {@link
     *                         Options#TTL TTL} is specified.   If {@link
     *                         Options#FALSE FALSE}, then the result table will
     *                         be an in-memory table and will expire unless a
     *                         {@link Options#TTL TTL} is specified otherwise.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#RESULT_TABLE_FORCE_REPLICATED
     *                         RESULT_TABLE_FORCE_REPLICATED}: Force the result
     *                         table to be replicated (ignores any sharding).
     *                         Must be used in combination with the {@link
     *                         Options#RESULT_TABLE RESULT_TABLE} option.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#RESULT_TABLE_GENERATE_PK
     *                         RESULT_TABLE_GENERATE_PK}: If {@link
     *                         Options#TRUE TRUE} then set a primary key for
     *                         the result table. Must be used in combination
     *                         with the {@link Options#RESULT_TABLE
     *                         RESULT_TABLE} option.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#TTL TTL}: Sets the <a
     *                         href="../../../../../../concepts/ttl/"
     *                         target="_top">TTL</a> of the table specified in
     *                         {@link Options#RESULT_TABLE RESULT_TABLE}.
     *                     <li>{@link Options#CHUNK_SIZE CHUNK_SIZE}: Indicates
     *                         the number of records per chunk to be used for
     *                         the result table. Must be used in combination
     *                         with the {@link Options#RESULT_TABLE
     *                         RESULT_TABLE} option.
     *                     <li>{@link Options#CHUNK_COLUMN_MAX_MEMORY
     *                         CHUNK_COLUMN_MAX_MEMORY}: Indicates the target
     *                         maximum data size for each column in a chunk to
     *                         be used for the result table. Must be used in
     *                         combination with the {@link Options#RESULT_TABLE
     *                         RESULT_TABLE} option.
     *                     <li>{@link Options#CHUNK_MAX_MEMORY
     *                         CHUNK_MAX_MEMORY}: Indicates the target maximum
     *                         data size for all columns in a chunk to be used
     *                         for the result table. Must be used in
     *                         combination with the {@link Options#RESULT_TABLE
     *                         RESULT_TABLE} option.
     *                     <li>{@link Options#COMPRESSION_CODEC
     *                         COMPRESSION_CODEC}: The default <a
     *                         href="../../../../../../concepts/column_compression/"
     *                         target="_top">compression codec</a> for the
     *                         result table's columns.
     *                     <li>{@link Options#VIEW_ID VIEW_ID}: ID of view of
     *                         which the result table will be a member. The
     *                         default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     */
    public AggregateUniqueRequest(String tableName, String columnName, long offset, long limit, Map<String, String> options) {
        this.tableName = (tableName == null) ? "" : tableName;
        this.columnName = (columnName == null) ? "" : columnName;
        this.offset = offset;
        this.limit = limit;
        this.encoding = Encoding.BINARY;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * Constructs an AggregateUniqueRequest object with the specified
     * parameters.
     *
     * @param tableName  Name of an existing table or view on which the
     *                   operation will be performed, in
     *                   [schema_name.]table_name format, using standard <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param columnName  Name of the column or an expression containing one or
     *                    more column names on which the unique function would
     *                    be applied.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results). The default value is 0. The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or END_OF_SET (-9999) to indicate
     *               that the maximum number of results allowed by the server
     *               should be returned.  The number of records returned will
     *               never exceed the server's own limit, defined by the <a
     *               href="../../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration. Use {@link
     *               com.gpudb.protocol.AggregateUniqueResponse#getHasMoreRecords()
     *               hasMoreRecords} to see if more records exist in the result
     *               to be fetched, and {@code offset} & {@code limit} to
     *               request subsequent pages of results. The default value is
     *               -9999.
     * @param encoding  Specifies the encoding for returned records.
     *                  Supported values:
     *                  <ul>
     *                      <li>{@link Encoding#BINARY BINARY}: Indicates that
     *                          the returned records should be binary encoded.
     *                      <li>{@link Encoding#JSON JSON}: Indicates that the
     *                          returned records should be json encoded.
     *                  </ul>
     *                  The default value is {@link Encoding#BINARY BINARY}.
     * @param options  Optional parameters.
     *                 <ul>
     *                     <li>{@link Options#CREATE_TEMP_TABLE
     *                         CREATE_TEMP_TABLE}: If {@link Options#TRUE
     *                         TRUE}, a unique temporary table name will be
     *                         generated in the sys_temp schema and used in
     *                         place of {@link Options#RESULT_TABLE
     *                         RESULT_TABLE}. If {@link
     *                         Options#RESULT_TABLE_PERSIST
     *                         RESULT_TABLE_PERSIST} is {@link Options#FALSE
     *                         FALSE} (or unspecified), then this is always
     *                         allowed even if the caller does not have
     *                         permission to create tables. The generated name
     *                         is returned in {@link
     *                         com.gpudb.protocol.AggregateUniqueResponse.Info#QUALIFIED_RESULT_TABLE_NAME
     *                         QUALIFIED_RESULT_TABLE_NAME}.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#COLLECTION_NAME COLLECTION_NAME}:
     *                         [DEPRECATED--please specify the containing
     *                         schema as part of {@link Options#RESULT_TABLE
     *                         RESULT_TABLE} and use {@link
     *                         com.gpudb.GPUdb#createSchema(CreateSchemaRequest)
     *                         GPUdb.createSchema} to create the schema if
     *                         non-existent]  Name of a schema which is to
     *                         contain the table specified in {@link
     *                         Options#RESULT_TABLE RESULT_TABLE}. If the
     *                         schema provided is non-existent, it will be
     *                         automatically created.
     *                     <li>{@link Options#EXPRESSION EXPRESSION}: Optional
     *                         filter expression to apply to the table.
     *                     <li>{@link Options#SORT_ORDER SORT_ORDER}: String
     *                         indicating how the returned values should be
     *                         sorted.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#ASCENDING ASCENDING}
     *                             <li>{@link Options#DESCENDING DESCENDING}
     *                         </ul>
     *                         The default value is {@link Options#ASCENDING
     *                         ASCENDING}.
     *                     <li>{@link Options#ORDER_BY ORDER_BY}:
     *                         Comma-separated list of the columns to be sorted
     *                         by as well as the sort direction, e.g.,
     *                         'timestamp asc, x desc'. The default value is
     *                         ''.
     *                     <li>{@link Options#RESULT_TABLE RESULT_TABLE}: The
     *                         name of the table used to store the results, in
     *                         [schema_name.]table_name format, using standard
     *                         <a
     *                         href="../../../../../../concepts/tables/#table-name-resolution"
     *                         target="_top">name resolution rules</a> and
     *                         meeting <a
     *                         href="../../../../../../concepts/tables/#table-naming-criteria"
     *                         target="_top">table naming criteria</a>.  If
     *                         present, no results are returned in the
     *                         response.  Not available if {@code columnName}
     *                         is an unrestricted-length string.
     *                     <li>{@link Options#RESULT_TABLE_PERSIST
     *                         RESULT_TABLE_PERSIST}: If {@link Options#TRUE
     *                         TRUE}, then the result table specified in {@link
     *                         Options#RESULT_TABLE RESULT_TABLE} will be
     *                         persisted and will not expire unless a {@link
     *                         Options#TTL TTL} is specified.   If {@link
     *                         Options#FALSE FALSE}, then the result table will
     *                         be an in-memory table and will expire unless a
     *                         {@link Options#TTL TTL} is specified otherwise.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#RESULT_TABLE_FORCE_REPLICATED
     *                         RESULT_TABLE_FORCE_REPLICATED}: Force the result
     *                         table to be replicated (ignores any sharding).
     *                         Must be used in combination with the {@link
     *                         Options#RESULT_TABLE RESULT_TABLE} option.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#RESULT_TABLE_GENERATE_PK
     *                         RESULT_TABLE_GENERATE_PK}: If {@link
     *                         Options#TRUE TRUE} then set a primary key for
     *                         the result table. Must be used in combination
     *                         with the {@link Options#RESULT_TABLE
     *                         RESULT_TABLE} option.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#TTL TTL}: Sets the <a
     *                         href="../../../../../../concepts/ttl/"
     *                         target="_top">TTL</a> of the table specified in
     *                         {@link Options#RESULT_TABLE RESULT_TABLE}.
     *                     <li>{@link Options#CHUNK_SIZE CHUNK_SIZE}: Indicates
     *                         the number of records per chunk to be used for
     *                         the result table. Must be used in combination
     *                         with the {@link Options#RESULT_TABLE
     *                         RESULT_TABLE} option.
     *                     <li>{@link Options#CHUNK_COLUMN_MAX_MEMORY
     *                         CHUNK_COLUMN_MAX_MEMORY}: Indicates the target
     *                         maximum data size for each column in a chunk to
     *                         be used for the result table. Must be used in
     *                         combination with the {@link Options#RESULT_TABLE
     *                         RESULT_TABLE} option.
     *                     <li>{@link Options#CHUNK_MAX_MEMORY
     *                         CHUNK_MAX_MEMORY}: Indicates the target maximum
     *                         data size for all columns in a chunk to be used
     *                         for the result table. Must be used in
     *                         combination with the {@link Options#RESULT_TABLE
     *                         RESULT_TABLE} option.
     *                     <li>{@link Options#COMPRESSION_CODEC
     *                         COMPRESSION_CODEC}: The default <a
     *                         href="../../../../../../concepts/column_compression/"
     *                         target="_top">compression codec</a> for the
     *                         result table's columns.
     *                     <li>{@link Options#VIEW_ID VIEW_ID}: ID of view of
     *                         which the result table will be a member. The
     *                         default value is ''.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     */
    public AggregateUniqueRequest(String tableName, String columnName, long offset, long limit, String encoding, Map<String, String> options) {
        this.tableName = (tableName == null) ? "" : tableName;
        this.columnName = (columnName == null) ? "" : columnName;
        this.offset = offset;
        this.limit = limit;
        this.encoding = (encoding == null) ? Encoding.BINARY : encoding;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * Name of an existing table or view on which the operation will be
     * performed, in [schema_name.]table_name format, using standard <a
     * href="../../../../../../concepts/tables/#table-name-resolution"
     * target="_top">name resolution rules</a>.
     *
     * @return The current value of {@code tableName}.
     */
    public String getTableName() {
        return tableName;
    }

    /**
     * Name of an existing table or view on which the operation will be
     * performed, in [schema_name.]table_name format, using standard <a
     * href="../../../../../../concepts/tables/#table-name-resolution"
     * target="_top">name resolution rules</a>.
     *
     * @param tableName  The new value for {@code tableName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AggregateUniqueRequest setTableName(String tableName) {
        this.tableName = (tableName == null) ? "" : tableName;
        return this;
    }

    /**
     * Name of the column or an expression containing one or more column names
     * on which the unique function would be applied.
     *
     * @return The current value of {@code columnName}.
     */
    public String getColumnName() {
        return columnName;
    }

    /**
     * Name of the column or an expression containing one or more column names
     * on which the unique function would be applied.
     *
     * @param columnName  The new value for {@code columnName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AggregateUniqueRequest setColumnName(String columnName) {
        this.columnName = (columnName == null) ? "" : columnName;
        return this;
    }

    /**
     * A positive integer indicating the number of initial results to skip
     * (this can be useful for paging through the results). The default value
     * is 0. The minimum allowed value is 0. The maximum allowed value is
     * MAX_INT.
     *
     * @return The current value of {@code offset}.
     */
    public long getOffset() {
        return offset;
    }

    /**
     * A positive integer indicating the number of initial results to skip
     * (this can be useful for paging through the results). The default value
     * is 0. The minimum allowed value is 0. The maximum allowed value is
     * MAX_INT.
     *
     * @param offset  The new value for {@code offset}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AggregateUniqueRequest setOffset(long offset) {
        this.offset = offset;
        return this;
    }

    /**
     * A positive integer indicating the maximum number of results to be
     * returned, or END_OF_SET (-9999) to indicate that the maximum number of
     * results allowed by the server should be returned.  The number of records
     * returned will never exceed the server's own limit, defined by the <a
     * href="../../../../../../config/#config-main-general"
     * target="_top">max_get_records_size</a> parameter in the server
     * configuration. Use {@link
     * com.gpudb.protocol.AggregateUniqueResponse#getHasMoreRecords()
     * hasMoreRecords} to see if more records exist in the result to be
     * fetched, and {@link #getOffset() offset} & {@link #getLimit() limit} to
     * request subsequent pages of results. The default value is -9999.
     *
     * @return The current value of {@code limit}.
     */
    public long getLimit() {
        return limit;
    }

    /**
     * A positive integer indicating the maximum number of results to be
     * returned, or END_OF_SET (-9999) to indicate that the maximum number of
     * results allowed by the server should be returned.  The number of records
     * returned will never exceed the server's own limit, defined by the <a
     * href="../../../../../../config/#config-main-general"
     * target="_top">max_get_records_size</a> parameter in the server
     * configuration. Use {@link
     * com.gpudb.protocol.AggregateUniqueResponse#getHasMoreRecords()
     * hasMoreRecords} to see if more records exist in the result to be
     * fetched, and {@link #getOffset() offset} & {@link #getLimit() limit} to
     * request subsequent pages of results. The default value is -9999.
     *
     * @param limit  The new value for {@code limit}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AggregateUniqueRequest setLimit(long limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Specifies the encoding for returned records.
     * Supported values:
     * <ul>
     *     <li>{@link Encoding#BINARY BINARY}: Indicates that the returned
     *         records should be binary encoded.
     *     <li>{@link Encoding#JSON JSON}: Indicates that the returned records
     *         should be json encoded.
     * </ul>
     * The default value is {@link Encoding#BINARY BINARY}.
     *
     * @return The current value of {@code encoding}.
     */
    public String getEncoding() {
        return encoding;
    }

    /**
     * Specifies the encoding for returned records.
     * Supported values:
     * <ul>
     *     <li>{@link Encoding#BINARY BINARY}: Indicates that the returned
     *         records should be binary encoded.
     *     <li>{@link Encoding#JSON JSON}: Indicates that the returned records
     *         should be json encoded.
     * </ul>
     * The default value is {@link Encoding#BINARY BINARY}.
     *
     * @param encoding  The new value for {@code encoding}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AggregateUniqueRequest setEncoding(String encoding) {
        this.encoding = (encoding == null) ? Encoding.BINARY : encoding;
        return this;
    }

    /**
     * Optional parameters.
     * <ul>
     *     <li>{@link Options#CREATE_TEMP_TABLE CREATE_TEMP_TABLE}: If {@link
     *         Options#TRUE TRUE}, a unique temporary table name will be
     *         generated in the sys_temp schema and used in place of {@link
     *         Options#RESULT_TABLE RESULT_TABLE}. If {@link
     *         Options#RESULT_TABLE_PERSIST RESULT_TABLE_PERSIST} is {@link
     *         Options#FALSE FALSE} (or unspecified), then this is always
     *         allowed even if the caller does not have permission to create
     *         tables. The generated name is returned in {@link
     *         com.gpudb.protocol.AggregateUniqueResponse.Info#QUALIFIED_RESULT_TABLE_NAME
     *         QUALIFIED_RESULT_TABLE_NAME}.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#COLLECTION_NAME COLLECTION_NAME}:
     *         [DEPRECATED--please specify the containing schema as part of
     *         {@link Options#RESULT_TABLE RESULT_TABLE} and use {@link
     *         com.gpudb.GPUdb#createSchema(CreateSchemaRequest)
     *         GPUdb.createSchema} to create the schema if non-existent]  Name
     *         of a schema which is to contain the table specified in {@link
     *         Options#RESULT_TABLE RESULT_TABLE}. If the schema provided is
     *         non-existent, it will be automatically created.
     *     <li>{@link Options#EXPRESSION EXPRESSION}: Optional filter
     *         expression to apply to the table.
     *     <li>{@link Options#SORT_ORDER SORT_ORDER}: String indicating how the
     *         returned values should be sorted.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#ASCENDING ASCENDING}
     *             <li>{@link Options#DESCENDING DESCENDING}
     *         </ul>
     *         The default value is {@link Options#ASCENDING ASCENDING}.
     *     <li>{@link Options#ORDER_BY ORDER_BY}: Comma-separated list of the
     *         columns to be sorted by as well as the sort direction, e.g.,
     *         'timestamp asc, x desc'. The default value is ''.
     *     <li>{@link Options#RESULT_TABLE RESULT_TABLE}: The name of the table
     *         used to store the results, in [schema_name.]table_name format,
     *         using standard <a
     *         href="../../../../../../concepts/tables/#table-name-resolution"
     *         target="_top">name resolution rules</a> and meeting <a
     *         href="../../../../../../concepts/tables/#table-naming-criteria"
     *         target="_top">table naming criteria</a>.  If present, no results
     *         are returned in the response.  Not available if {@link
     *         #getColumnName() columnName} is an unrestricted-length string.
     *     <li>{@link Options#RESULT_TABLE_PERSIST RESULT_TABLE_PERSIST}: If
     *         {@link Options#TRUE TRUE}, then the result table specified in
     *         {@link Options#RESULT_TABLE RESULT_TABLE} will be persisted and
     *         will not expire unless a {@link Options#TTL TTL} is specified.
     *         If {@link Options#FALSE FALSE}, then the result table will be an
     *         in-memory table and will expire unless a {@link Options#TTL TTL}
     *         is specified otherwise.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#RESULT_TABLE_FORCE_REPLICATED
     *         RESULT_TABLE_FORCE_REPLICATED}: Force the result table to be
     *         replicated (ignores any sharding). Must be used in combination
     *         with the {@link Options#RESULT_TABLE RESULT_TABLE} option.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#RESULT_TABLE_GENERATE_PK
     *         RESULT_TABLE_GENERATE_PK}: If {@link Options#TRUE TRUE} then set
     *         a primary key for the result table. Must be used in combination
     *         with the {@link Options#RESULT_TABLE RESULT_TABLE} option.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#TTL TTL}: Sets the <a
     *         href="../../../../../../concepts/ttl/" target="_top">TTL</a> of
     *         the table specified in {@link Options#RESULT_TABLE
     *         RESULT_TABLE}.
     *     <li>{@link Options#CHUNK_SIZE CHUNK_SIZE}: Indicates the number of
     *         records per chunk to be used for the result table. Must be used
     *         in combination with the {@link Options#RESULT_TABLE
     *         RESULT_TABLE} option.
     *     <li>{@link Options#CHUNK_COLUMN_MAX_MEMORY CHUNK_COLUMN_MAX_MEMORY}:
     *         Indicates the target maximum data size for each column in a
     *         chunk to be used for the result table. Must be used in
     *         combination with the {@link Options#RESULT_TABLE RESULT_TABLE}
     *         option.
     *     <li>{@link Options#CHUNK_MAX_MEMORY CHUNK_MAX_MEMORY}: Indicates the
     *         target maximum data size for all columns in a chunk to be used
     *         for the result table. Must be used in combination with the
     *         {@link Options#RESULT_TABLE RESULT_TABLE} option.
     *     <li>{@link Options#COMPRESSION_CODEC COMPRESSION_CODEC}: The default
     *         <a href="../../../../../../concepts/column_compression/"
     *         target="_top">compression codec</a> for the result table's
     *         columns.
     *     <li>{@link Options#VIEW_ID VIEW_ID}: ID of view of which the result
     *         table will be a member. The default value is ''.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @return The current value of {@code options}.
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * Optional parameters.
     * <ul>
     *     <li>{@link Options#CREATE_TEMP_TABLE CREATE_TEMP_TABLE}: If {@link
     *         Options#TRUE TRUE}, a unique temporary table name will be
     *         generated in the sys_temp schema and used in place of {@link
     *         Options#RESULT_TABLE RESULT_TABLE}. If {@link
     *         Options#RESULT_TABLE_PERSIST RESULT_TABLE_PERSIST} is {@link
     *         Options#FALSE FALSE} (or unspecified), then this is always
     *         allowed even if the caller does not have permission to create
     *         tables. The generated name is returned in {@link
     *         com.gpudb.protocol.AggregateUniqueResponse.Info#QUALIFIED_RESULT_TABLE_NAME
     *         QUALIFIED_RESULT_TABLE_NAME}.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#COLLECTION_NAME COLLECTION_NAME}:
     *         [DEPRECATED--please specify the containing schema as part of
     *         {@link Options#RESULT_TABLE RESULT_TABLE} and use {@link
     *         com.gpudb.GPUdb#createSchema(CreateSchemaRequest)
     *         GPUdb.createSchema} to create the schema if non-existent]  Name
     *         of a schema which is to contain the table specified in {@link
     *         Options#RESULT_TABLE RESULT_TABLE}. If the schema provided is
     *         non-existent, it will be automatically created.
     *     <li>{@link Options#EXPRESSION EXPRESSION}: Optional filter
     *         expression to apply to the table.
     *     <li>{@link Options#SORT_ORDER SORT_ORDER}: String indicating how the
     *         returned values should be sorted.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#ASCENDING ASCENDING}
     *             <li>{@link Options#DESCENDING DESCENDING}
     *         </ul>
     *         The default value is {@link Options#ASCENDING ASCENDING}.
     *     <li>{@link Options#ORDER_BY ORDER_BY}: Comma-separated list of the
     *         columns to be sorted by as well as the sort direction, e.g.,
     *         'timestamp asc, x desc'. The default value is ''.
     *     <li>{@link Options#RESULT_TABLE RESULT_TABLE}: The name of the table
     *         used to store the results, in [schema_name.]table_name format,
     *         using standard <a
     *         href="../../../../../../concepts/tables/#table-name-resolution"
     *         target="_top">name resolution rules</a> and meeting <a
     *         href="../../../../../../concepts/tables/#table-naming-criteria"
     *         target="_top">table naming criteria</a>.  If present, no results
     *         are returned in the response.  Not available if {@link
     *         #getColumnName() columnName} is an unrestricted-length string.
     *     <li>{@link Options#RESULT_TABLE_PERSIST RESULT_TABLE_PERSIST}: If
     *         {@link Options#TRUE TRUE}, then the result table specified in
     *         {@link Options#RESULT_TABLE RESULT_TABLE} will be persisted and
     *         will not expire unless a {@link Options#TTL TTL} is specified.
     *         If {@link Options#FALSE FALSE}, then the result table will be an
     *         in-memory table and will expire unless a {@link Options#TTL TTL}
     *         is specified otherwise.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#RESULT_TABLE_FORCE_REPLICATED
     *         RESULT_TABLE_FORCE_REPLICATED}: Force the result table to be
     *         replicated (ignores any sharding). Must be used in combination
     *         with the {@link Options#RESULT_TABLE RESULT_TABLE} option.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#RESULT_TABLE_GENERATE_PK
     *         RESULT_TABLE_GENERATE_PK}: If {@link Options#TRUE TRUE} then set
     *         a primary key for the result table. Must be used in combination
     *         with the {@link Options#RESULT_TABLE RESULT_TABLE} option.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#TTL TTL}: Sets the <a
     *         href="../../../../../../concepts/ttl/" target="_top">TTL</a> of
     *         the table specified in {@link Options#RESULT_TABLE
     *         RESULT_TABLE}.
     *     <li>{@link Options#CHUNK_SIZE CHUNK_SIZE}: Indicates the number of
     *         records per chunk to be used for the result table. Must be used
     *         in combination with the {@link Options#RESULT_TABLE
     *         RESULT_TABLE} option.
     *     <li>{@link Options#CHUNK_COLUMN_MAX_MEMORY CHUNK_COLUMN_MAX_MEMORY}:
     *         Indicates the target maximum data size for each column in a
     *         chunk to be used for the result table. Must be used in
     *         combination with the {@link Options#RESULT_TABLE RESULT_TABLE}
     *         option.
     *     <li>{@link Options#CHUNK_MAX_MEMORY CHUNK_MAX_MEMORY}: Indicates the
     *         target maximum data size for all columns in a chunk to be used
     *         for the result table. Must be used in combination with the
     *         {@link Options#RESULT_TABLE RESULT_TABLE} option.
     *     <li>{@link Options#COMPRESSION_CODEC COMPRESSION_CODEC}: The default
     *         <a href="../../../../../../concepts/column_compression/"
     *         target="_top">compression codec</a> for the result table's
     *         columns.
     *     <li>{@link Options#VIEW_ID VIEW_ID}: ID of view of which the result
     *         table will be a member. The default value is ''.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @param options  The new value for {@code options}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AggregateUniqueRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.tableName;

            case 1:
                return this.columnName;

            case 2:
                return this.offset;

            case 3:
                return this.limit;

            case 4:
                return this.encoding;

            case 5:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.tableName = (String)value;
                break;

            case 1:
                this.columnName = (String)value;
                break;

            case 2:
                this.offset = (Long)value;
                break;

            case 3:
                this.limit = (Long)value;
                break;

            case 4:
                this.encoding = (String)value;
                break;

            case 5:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        AggregateUniqueRequest that = (AggregateUniqueRequest)obj;

        return ( this.tableName.equals( that.tableName )
                 && this.columnName.equals( that.columnName )
                 && ( this.offset == that.offset )
                 && ( this.limit == that.limit )
                 && this.encoding.equals( that.encoding )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "tableName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.tableName ) );
        builder.append( ", " );
        builder.append( gd.toString( "columnName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.columnName ) );
        builder.append( ", " );
        builder.append( gd.toString( "offset" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.offset ) );
        builder.append( ", " );
        builder.append( gd.toString( "limit" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.limit ) );
        builder.append( ", " );
        builder.append( gd.toString( "encoding" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.encoding ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableName.hashCode();
        hashCode = (31 * hashCode) + this.columnName.hashCode();
        hashCode = (31 * hashCode) + ((Long)this.offset).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.limit).hashCode();
        hashCode = (31 * hashCode) + this.encoding.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }
}

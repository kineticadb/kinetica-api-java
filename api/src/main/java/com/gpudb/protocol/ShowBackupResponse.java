/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#showBackup(ShowBackupRequest) GPUdb.showBackup}.
 */
public class ShowBackupResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("ShowBackupResponse")
            .namespace("com.gpudb")
            .fields()
                .name("backupName").type().stringType().noDefault()
                .name("backupDescription").type().array().items().map().values().stringType().noDefault()
                .name("backupIds").type().array().items().map().values().stringType().noDefault()
                .name("backupContents").type().array().items().map().values().stringType().noDefault()
                .name("deletedBackupIds").type().array().items().map().values().stringType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private String backupName;
    private List<Map<String, String>> backupDescription;
    private List<Map<String, String>> backupIds;
    private List<Map<String, String>> backupContents;
    private List<Map<String, String>> deletedBackupIds;
    private Map<String, String> info;

    /**
     * Constructs a ShowBackupResponse object with default parameters.
     */
    public ShowBackupResponse() {
    }

    /**
     * Value of {@link com.gpudb.protocol.ShowBackupRequest#getBackupName()
     * backupName}.
     *
     * @return The current value of {@code backupName}.
     */
    public String getBackupName() {
        return backupName;
    }

    /**
     * Value of {@link com.gpudb.protocol.ShowBackupRequest#getBackupName()
     * backupName}.
     *
     * @param backupName  The new value for {@code backupName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowBackupResponse setBackupName(String backupName) {
        this.backupName = (backupName == null) ? "" : backupName;
        return this;
    }

    /**
     * Backup description
     *
     * @return The current value of {@code backupDescription}.
     */
    public List<Map<String, String>> getBackupDescription() {
        return backupDescription;
    }

    /**
     * Backup description
     *
     * @param backupDescription  The new value for {@code backupDescription}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowBackupResponse setBackupDescription(List<Map<String, String>> backupDescription) {
        this.backupDescription = (backupDescription == null) ? new ArrayList<Map<String, String>>() : backupDescription;
        return this;
    }

    /**
     * Backup instances in this backup
     *
     * @return The current value of {@code backupIds}.
     */
    public List<Map<String, String>> getBackupIds() {
        return backupIds;
    }

    /**
     * Backup instances in this backup
     *
     * @param backupIds  The new value for {@code backupIds}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowBackupResponse setBackupIds(List<Map<String, String>> backupIds) {
        this.backupIds = (backupIds == null) ? new ArrayList<Map<String, String>>() : backupIds;
        return this;
    }

    /**
     * Backup contents
     *
     * @return The current value of {@code backupContents}.
     */
    public List<Map<String, String>> getBackupContents() {
        return backupContents;
    }

    /**
     * Backup contents
     *
     * @param backupContents  The new value for {@code backupContents}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowBackupResponse setBackupContents(List<Map<String, String>> backupContents) {
        this.backupContents = (backupContents == null) ? new ArrayList<Map<String, String>>() : backupContents;
        return this;
    }

    /**
     * Backup instances that have been deleted from this backup object
     *
     * @return The current value of {@code deletedBackupIds}.
     */
    public List<Map<String, String>> getDeletedBackupIds() {
        return deletedBackupIds;
    }

    /**
     * Backup instances that have been deleted from this backup object
     *
     * @param deletedBackupIds  The new value for {@code deletedBackupIds}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowBackupResponse setDeletedBackupIds(List<Map<String, String>> deletedBackupIds) {
        this.deletedBackupIds = (deletedBackupIds == null) ? new ArrayList<Map<String, String>>() : deletedBackupIds;
        return this;
    }

    /**
     * Additional information.
     *
     * @return The current value of {@code info}.
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * Additional information.
     *
     * @param info  The new value for {@code info}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowBackupResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.backupName;

            case 1:
                return this.backupDescription;

            case 2:
                return this.backupIds;

            case 3:
                return this.backupContents;

            case 4:
                return this.deletedBackupIds;

            case 5:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.backupName = (String)value;
                break;

            case 1:
                this.backupDescription = (List<Map<String, String>>)value;
                break;

            case 2:
                this.backupIds = (List<Map<String, String>>)value;
                break;

            case 3:
                this.backupContents = (List<Map<String, String>>)value;
                break;

            case 4:
                this.deletedBackupIds = (List<Map<String, String>>)value;
                break;

            case 5:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        ShowBackupResponse that = (ShowBackupResponse)obj;

        return ( this.backupName.equals( that.backupName )
                 && this.backupDescription.equals( that.backupDescription )
                 && this.backupIds.equals( that.backupIds )
                 && this.backupContents.equals( that.backupContents )
                 && this.deletedBackupIds.equals( that.deletedBackupIds )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "backupName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.backupName ) );
        builder.append( ", " );
        builder.append( gd.toString( "backupDescription" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.backupDescription ) );
        builder.append( ", " );
        builder.append( gd.toString( "backupIds" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.backupIds ) );
        builder.append( ", " );
        builder.append( gd.toString( "backupContents" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.backupContents ) );
        builder.append( ", " );
        builder.append( gd.toString( "deletedBackupIds" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.deletedBackupIds ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.backupName.hashCode();
        hashCode = (31 * hashCode) + this.backupDescription.hashCode();
        hashCode = (31 * hashCode) + this.backupIds.hashCode();
        hashCode = (31 * hashCode) + this.backupContents.hashCode();
        hashCode = (31 * hashCode) + this.deletedBackupIds.hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }
}

/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of parameters for {@link
 * com.gpudb.GPUdb#alterResourceGroup(AlterResourceGroupRequest)
 * GPUdb.alterResourceGroup}.
 * <p>
 * Alters the properties of an existing resource group to facilitate resource
 * management.
 */
public class AlterResourceGroupRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("AlterResourceGroupRequest")
            .namespace("com.gpudb")
            .fields()
                .name("name").type().stringType().noDefault()
                .name("tierAttributes").type().map().values().map().values().stringType().noDefault()
                .name("ranking").type().stringType().noDefault()
                .name("adjoiningResourceGroup").type().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    /**
     * A set of string constants for the {@link AlterResourceGroupRequest}
     * parameter {@link #getTierAttributes() tierAttributes}.
     * <p>
     * Optional map containing tier names and their respective attribute group
     * limits.  The only valid attribute limit that can be set is max_memory
     * (in bytes) for the VRAM & RAM tiers.
     * <p>
     * For instance, to set max VRAM capacity to 1GB per rank per GPU and max
     * RAM capacity to 10GB per rank, use:
     * {'VRAM':{'max_memory':'1000000000'}, 'RAM':{'max_memory':'10000000000'}}
     */
    public static final class TierAttributes {
        /**
         * Maximum amount of memory usable at one time, per rank, per GPU, for
         * the VRAM tier; or maximum amount of memory usable at one time, per
         * rank, for the RAM tier.
         */
        public static final String MAX_MEMORY = "max_memory";

        private TierAttributes() {  }
    }

    /**
     * A set of string constants for the {@link AlterResourceGroupRequest}
     * parameter {@link #getRanking() ranking}.
     * <p>
     * If the resource group ranking is to be updated, this indicates the
     * relative ranking among existing resource groups where this resource
     * group will be placed.
     */
    public static final class Ranking {
        /**
         * Don't change the ranking
         */
        public static final String EMPTY_STRING = "";

        /**
         * Make this resource group the new first one in the ordering
         */
        public static final String FIRST = "first";

        /**
         * Make this resource group the new last one in the ordering
         */
        public static final String LAST = "last";

        /**
         * Place this resource group before the one specified by {@link
         * #getAdjoiningResourceGroup() adjoiningResourceGroup} in the ordering
         */
        public static final String BEFORE = "before";

        /**
         * Place this resource group after the one specified by {@link
         * #getAdjoiningResourceGroup() adjoiningResourceGroup} in the ordering
         */
        public static final String AFTER = "after";

        private Ranking() {  }
    }

    /**
     * A set of string constants for the {@link AlterResourceGroupRequest}
     * parameter {@link #getOptions() options}.
     * <p>
     * Optional parameters.
     */
    public static final class Options {
        /**
         * Maximum number of simultaneous threads that will be used to execute
         * a request, per rank, for this group. The minimum allowed value is
         * '4'.
         */
        public static final String MAX_CPU_CONCURRENCY = "max_cpu_concurrency";

        /**
         * Maximum amount of data, per rank, in bytes, that can be used by all
         * database objects within this group.  Set to -1 to indicate no upper
         * limit. The minimum allowed value is '-1'.
         */
        public static final String MAX_DATA = "max_data";

        /**
         * Maximum priority of a scheduled task for this group. The minimum
         * allowed value is '1'. The maximum allowed value is '100'.
         */
        public static final String MAX_SCHEDULING_PRIORITY = "max_scheduling_priority";

        /**
         * Maximum priority of a tiered object for this group. The minimum
         * allowed value is '1'. The maximum allowed value is '10'.
         */
        public static final String MAX_TIER_PRIORITY = "max_tier_priority";

        /**
         * If {@link Options#TRUE TRUE}, this request applies to the global
         * default resource group. It is an error for this field to be {@link
         * Options#TRUE TRUE} when the {@link #getName() name} field is also
         * populated.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#FALSE FALSE}.
         */
        public static final String IS_DEFAULT_GROUP = "is_default_group";

        public static final String TRUE = "true";
        public static final String FALSE = "false";

        /**
         * If {@link Options#TRUE TRUE} and a system-level change was
         * requested, the system configuration will be written to disk upon
         * successful application of this request. This will commit the changes
         * from this request and any additional in-memory modifications.
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#TRUE TRUE}.
         */
        public static final String PERSIST = "persist";

        private Options() {  }
    }

    private String name;
    private Map<String, Map<String, String>> tierAttributes;
    private String ranking;
    private String adjoiningResourceGroup;
    private Map<String, String> options;

    /**
     * Constructs an AlterResourceGroupRequest object with default parameters.
     */
    public AlterResourceGroupRequest() {
        name = "";
        tierAttributes = new LinkedHashMap<>();
        ranking = "";
        adjoiningResourceGroup = "";
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs an AlterResourceGroupRequest object with the specified
     * parameters.
     *
     * @param name  Name of the group to be altered. Must be an existing
     *              resource group name or an empty string when used in
     *              conjunction with {@link Options#IS_DEFAULT_GROUP
     *              IS_DEFAULT_GROUP}.
     * @param tierAttributes  Optional map containing tier names and their
     *                        respective attribute group limits.  The only
     *                        valid attribute limit that can be set is
     *                        max_memory (in bytes) for the VRAM & RAM tiers.
     *                        For instance, to set max VRAM capacity to 1GB per
     *                        rank per GPU and max RAM capacity to 10GB per
     *                        rank, use:  {'VRAM':{'max_memory':'1000000000'},
     *                        'RAM':{'max_memory':'10000000000'}}.
     *                        <ul>
     *                            <li>{@link TierAttributes#MAX_MEMORY
     *                                MAX_MEMORY}: Maximum amount of memory
     *                                usable at one time, per rank, per GPU,
     *                                for the VRAM tier; or maximum amount of
     *                                memory usable at one time, per rank, for
     *                                the RAM tier.
     *                        </ul>
     *                        The default value is an empty {@link Map}.
     * @param ranking  If the resource group ranking is to be updated, this
     *                 indicates the relative ranking among existing resource
     *                 groups where this resource group will be placed.
     *                 Supported values:
     *                 <ul>
     *                     <li>{@link Ranking#EMPTY_STRING EMPTY_STRING}: Don't
     *                         change the ranking
     *                     <li>{@link Ranking#FIRST FIRST}: Make this resource
     *                         group the new first one in the ordering
     *                     <li>{@link Ranking#LAST LAST}: Make this resource
     *                         group the new last one in the ordering
     *                     <li>{@link Ranking#BEFORE BEFORE}: Place this
     *                         resource group before the one specified by
     *                         {@code adjoiningResourceGroup} in the ordering
     *                     <li>{@link Ranking#AFTER AFTER}: Place this resource
     *                         group after the one specified by {@code
     *                         adjoiningResourceGroup} in the ordering
     *                 </ul>
     *                 The default value is {@link Ranking#EMPTY_STRING
     *                 EMPTY_STRING}.
     * @param adjoiningResourceGroup  If {@code ranking} is {@link
     *                                Ranking#BEFORE BEFORE} or {@link
     *                                Ranking#AFTER AFTER}, this field
     *                                indicates the resource group before or
     *                                after which the current group will be
     *                                placed; otherwise, leave blank. The
     *                                default value is ''.
     * @param options  Optional parameters.
     *                 <ul>
     *                     <li>{@link Options#MAX_CPU_CONCURRENCY
     *                         MAX_CPU_CONCURRENCY}: Maximum number of
     *                         simultaneous threads that will be used to
     *                         execute a request, per rank, for this group. The
     *                         minimum allowed value is '4'.
     *                     <li>{@link Options#MAX_DATA MAX_DATA}: Maximum
     *                         amount of data, per rank, in bytes, that can be
     *                         used by all database objects within this group.
     *                         Set to -1 to indicate no upper limit. The
     *                         minimum allowed value is '-1'.
     *                     <li>{@link Options#MAX_SCHEDULING_PRIORITY
     *                         MAX_SCHEDULING_PRIORITY}: Maximum priority of a
     *                         scheduled task for this group. The minimum
     *                         allowed value is '1'. The maximum allowed value
     *                         is '100'.
     *                     <li>{@link Options#MAX_TIER_PRIORITY
     *                         MAX_TIER_PRIORITY}: Maximum priority of a tiered
     *                         object for this group. The minimum allowed value
     *                         is '1'. The maximum allowed value is '10'.
     *                     <li>{@link Options#IS_DEFAULT_GROUP
     *                         IS_DEFAULT_GROUP}: If {@link Options#TRUE TRUE},
     *                         this request applies to the global default
     *                         resource group. It is an error for this field to
     *                         be {@link Options#TRUE TRUE} when the {@code
     *                         name} field is also populated.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#FALSE
     *                         FALSE}.
     *                     <li>{@link Options#PERSIST PERSIST}: If {@link
     *                         Options#TRUE TRUE} and a system-level change was
     *                         requested, the system configuration will be
     *                         written to disk upon successful application of
     *                         this request. This will commit the changes from
     *                         this request and any additional in-memory
     *                         modifications.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#TRUE TRUE}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     */
    public AlterResourceGroupRequest(String name, Map<String, Map<String, String>> tierAttributes, String ranking, String adjoiningResourceGroup, Map<String, String> options) {
        this.name = (name == null) ? "" : name;
        this.tierAttributes = (tierAttributes == null) ? new LinkedHashMap<String, Map<String, String>>() : tierAttributes;
        this.ranking = (ranking == null) ? "" : ranking;
        this.adjoiningResourceGroup = (adjoiningResourceGroup == null) ? "" : adjoiningResourceGroup;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * Name of the group to be altered. Must be an existing resource group name
     * or an empty string when used in conjunction with {@link
     * Options#IS_DEFAULT_GROUP IS_DEFAULT_GROUP}.
     *
     * @return The current value of {@code name}.
     */
    public String getName() {
        return name;
    }

    /**
     * Name of the group to be altered. Must be an existing resource group name
     * or an empty string when used in conjunction with {@link
     * Options#IS_DEFAULT_GROUP IS_DEFAULT_GROUP}.
     *
     * @param name  The new value for {@code name}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AlterResourceGroupRequest setName(String name) {
        this.name = (name == null) ? "" : name;
        return this;
    }

    /**
     * Optional map containing tier names and their respective attribute group
     * limits.  The only valid attribute limit that can be set is max_memory
     * (in bytes) for the VRAM & RAM tiers.
     * <p>
     * For instance, to set max VRAM capacity to 1GB per rank per GPU and max
     * RAM capacity to 10GB per rank, use:
     * {'VRAM':{'max_memory':'1000000000'},
     * 'RAM':{'max_memory':'10000000000'}}.
     * <ul>
     *     <li>{@link TierAttributes#MAX_MEMORY MAX_MEMORY}: Maximum amount of
     *         memory usable at one time, per rank, per GPU, for the VRAM tier;
     *         or maximum amount of memory usable at one time, per rank, for
     *         the RAM tier.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @return The current value of {@code tierAttributes}.
     */
    public Map<String, Map<String, String>> getTierAttributes() {
        return tierAttributes;
    }

    /**
     * Optional map containing tier names and their respective attribute group
     * limits.  The only valid attribute limit that can be set is max_memory
     * (in bytes) for the VRAM & RAM tiers.
     * <p>
     * For instance, to set max VRAM capacity to 1GB per rank per GPU and max
     * RAM capacity to 10GB per rank, use:
     * {'VRAM':{'max_memory':'1000000000'},
     * 'RAM':{'max_memory':'10000000000'}}.
     * <ul>
     *     <li>{@link TierAttributes#MAX_MEMORY MAX_MEMORY}: Maximum amount of
     *         memory usable at one time, per rank, per GPU, for the VRAM tier;
     *         or maximum amount of memory usable at one time, per rank, for
     *         the RAM tier.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @param tierAttributes  The new value for {@code tierAttributes}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AlterResourceGroupRequest setTierAttributes(Map<String, Map<String, String>> tierAttributes) {
        this.tierAttributes = (tierAttributes == null) ? new LinkedHashMap<String, Map<String, String>>() : tierAttributes;
        return this;
    }

    /**
     * If the resource group ranking is to be updated, this indicates the
     * relative ranking among existing resource groups where this resource
     * group will be placed.
     * Supported values:
     * <ul>
     *     <li>{@link Ranking#EMPTY_STRING EMPTY_STRING}: Don't change the
     *         ranking
     *     <li>{@link Ranking#FIRST FIRST}: Make this resource group the new
     *         first one in the ordering
     *     <li>{@link Ranking#LAST LAST}: Make this resource group the new last
     *         one in the ordering
     *     <li>{@link Ranking#BEFORE BEFORE}: Place this resource group before
     *         the one specified by {@link #getAdjoiningResourceGroup()
     *         adjoiningResourceGroup} in the ordering
     *     <li>{@link Ranking#AFTER AFTER}: Place this resource group after the
     *         one specified by {@link #getAdjoiningResourceGroup()
     *         adjoiningResourceGroup} in the ordering
     * </ul>
     * The default value is {@link Ranking#EMPTY_STRING EMPTY_STRING}.
     *
     * @return The current value of {@code ranking}.
     */
    public String getRanking() {
        return ranking;
    }

    /**
     * If the resource group ranking is to be updated, this indicates the
     * relative ranking among existing resource groups where this resource
     * group will be placed.
     * Supported values:
     * <ul>
     *     <li>{@link Ranking#EMPTY_STRING EMPTY_STRING}: Don't change the
     *         ranking
     *     <li>{@link Ranking#FIRST FIRST}: Make this resource group the new
     *         first one in the ordering
     *     <li>{@link Ranking#LAST LAST}: Make this resource group the new last
     *         one in the ordering
     *     <li>{@link Ranking#BEFORE BEFORE}: Place this resource group before
     *         the one specified by {@link #getAdjoiningResourceGroup()
     *         adjoiningResourceGroup} in the ordering
     *     <li>{@link Ranking#AFTER AFTER}: Place this resource group after the
     *         one specified by {@link #getAdjoiningResourceGroup()
     *         adjoiningResourceGroup} in the ordering
     * </ul>
     * The default value is {@link Ranking#EMPTY_STRING EMPTY_STRING}.
     *
     * @param ranking  The new value for {@code ranking}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AlterResourceGroupRequest setRanking(String ranking) {
        this.ranking = (ranking == null) ? "" : ranking;
        return this;
    }

    /**
     * If {@link #getRanking() ranking} is {@link Ranking#BEFORE BEFORE} or
     * {@link Ranking#AFTER AFTER}, this field indicates the resource group
     * before or after which the current group will be placed; otherwise, leave
     * blank. The default value is ''.
     *
     * @return The current value of {@code adjoiningResourceGroup}.
     */
    public String getAdjoiningResourceGroup() {
        return adjoiningResourceGroup;
    }

    /**
     * If {@link #getRanking() ranking} is {@link Ranking#BEFORE BEFORE} or
     * {@link Ranking#AFTER AFTER}, this field indicates the resource group
     * before or after which the current group will be placed; otherwise, leave
     * blank. The default value is ''.
     *
     * @param adjoiningResourceGroup  The new value for {@code
     *                                adjoiningResourceGroup}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AlterResourceGroupRequest setAdjoiningResourceGroup(String adjoiningResourceGroup) {
        this.adjoiningResourceGroup = (adjoiningResourceGroup == null) ? "" : adjoiningResourceGroup;
        return this;
    }

    /**
     * Optional parameters.
     * <ul>
     *     <li>{@link Options#MAX_CPU_CONCURRENCY MAX_CPU_CONCURRENCY}: Maximum
     *         number of simultaneous threads that will be used to execute a
     *         request, per rank, for this group. The minimum allowed value is
     *         '4'.
     *     <li>{@link Options#MAX_DATA MAX_DATA}: Maximum amount of data, per
     *         rank, in bytes, that can be used by all database objects within
     *         this group.  Set to -1 to indicate no upper limit. The minimum
     *         allowed value is '-1'.
     *     <li>{@link Options#MAX_SCHEDULING_PRIORITY MAX_SCHEDULING_PRIORITY}:
     *         Maximum priority of a scheduled task for this group. The minimum
     *         allowed value is '1'. The maximum allowed value is '100'.
     *     <li>{@link Options#MAX_TIER_PRIORITY MAX_TIER_PRIORITY}: Maximum
     *         priority of a tiered object for this group. The minimum allowed
     *         value is '1'. The maximum allowed value is '10'.
     *     <li>{@link Options#IS_DEFAULT_GROUP IS_DEFAULT_GROUP}: If {@link
     *         Options#TRUE TRUE}, this request applies to the global default
     *         resource group. It is an error for this field to be {@link
     *         Options#TRUE TRUE} when the {@link #getName() name} field is
     *         also populated.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#PERSIST PERSIST}: If {@link Options#TRUE TRUE}
     *         and a system-level change was requested, the system
     *         configuration will be written to disk upon successful
     *         application of this request. This will commit the changes from
     *         this request and any additional in-memory modifications.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#TRUE TRUE}.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @return The current value of {@code options}.
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * Optional parameters.
     * <ul>
     *     <li>{@link Options#MAX_CPU_CONCURRENCY MAX_CPU_CONCURRENCY}: Maximum
     *         number of simultaneous threads that will be used to execute a
     *         request, per rank, for this group. The minimum allowed value is
     *         '4'.
     *     <li>{@link Options#MAX_DATA MAX_DATA}: Maximum amount of data, per
     *         rank, in bytes, that can be used by all database objects within
     *         this group.  Set to -1 to indicate no upper limit. The minimum
     *         allowed value is '-1'.
     *     <li>{@link Options#MAX_SCHEDULING_PRIORITY MAX_SCHEDULING_PRIORITY}:
     *         Maximum priority of a scheduled task for this group. The minimum
     *         allowed value is '1'. The maximum allowed value is '100'.
     *     <li>{@link Options#MAX_TIER_PRIORITY MAX_TIER_PRIORITY}: Maximum
     *         priority of a tiered object for this group. The minimum allowed
     *         value is '1'. The maximum allowed value is '10'.
     *     <li>{@link Options#IS_DEFAULT_GROUP IS_DEFAULT_GROUP}: If {@link
     *         Options#TRUE TRUE}, this request applies to the global default
     *         resource group. It is an error for this field to be {@link
     *         Options#TRUE TRUE} when the {@link #getName() name} field is
     *         also populated.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#FALSE FALSE}.
     *     <li>{@link Options#PERSIST PERSIST}: If {@link Options#TRUE TRUE}
     *         and a system-level change was requested, the system
     *         configuration will be written to disk upon successful
     *         application of this request. This will commit the changes from
     *         this request and any additional in-memory modifications.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#TRUE TRUE}.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @param options  The new value for {@code options}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public AlterResourceGroupRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.name;

            case 1:
                return this.tierAttributes;

            case 2:
                return this.ranking;

            case 3:
                return this.adjoiningResourceGroup;

            case 4:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.name = (String)value;
                break;

            case 1:
                this.tierAttributes = (Map<String, Map<String, String>>)value;
                break;

            case 2:
                this.ranking = (String)value;
                break;

            case 3:
                this.adjoiningResourceGroup = (String)value;
                break;

            case 4:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        AlterResourceGroupRequest that = (AlterResourceGroupRequest)obj;

        return ( this.name.equals( that.name )
                 && this.tierAttributes.equals( that.tierAttributes )
                 && this.ranking.equals( that.ranking )
                 && this.adjoiningResourceGroup.equals( that.adjoiningResourceGroup )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "name" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.name ) );
        builder.append( ", " );
        builder.append( gd.toString( "tierAttributes" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.tierAttributes ) );
        builder.append( ", " );
        builder.append( gd.toString( "ranking" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.ranking ) );
        builder.append( ", " );
        builder.append( gd.toString( "adjoiningResourceGroup" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.adjoiningResourceGroup ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.name.hashCode();
        hashCode = (31 * hashCode) + this.tierAttributes.hashCode();
        hashCode = (31 * hashCode) + this.ranking.hashCode();
        hashCode = (31 * hashCode) + this.adjoiningResourceGroup.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }
}

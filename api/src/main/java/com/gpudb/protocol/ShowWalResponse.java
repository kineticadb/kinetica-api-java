/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of results returned by {@link com.gpudb.GPUdb#showWal(ShowWalRequest)
 * GPUdb.showWal}.
 */
public class ShowWalResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("ShowWalResponse")
            .namespace("com.gpudb")
            .fields()
                .name("tableNames").type().array().items().stringType().noDefault()
                .name("sizes").type().array().items().array().items().longType().noDefault()
                .name("capacities").type().array().items().longType().noDefault()
                .name("uncommitted").type().array().items().array().items().longType().noDefault()
                .name("settings").type().array().items().map().values().stringType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private List<String> tableNames;
    private List<List<Long>> sizes;
    private List<Long> capacities;
    private List<List<Long>> uncommitted;
    private List<Map<String, String>> settings;
    private Map<String, String> info;

    /**
     * Constructs a ShowWalResponse object with default parameters.
     */
    public ShowWalResponse() {
    }

    /**
     * List of returned tables.
     *
     * @return The current value of {@code tableNames}.
     */
    public List<String> getTableNames() {
        return tableNames;
    }

    /**
     * List of returned tables.
     *
     * @param tableNames  The new value for {@code tableNames}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowWalResponse setTableNames(List<String> tableNames) {
        this.tableNames = (tableNames == null) ? new ArrayList<String>() : tableNames;
        return this;
    }

    /**
     * List of current WAL usage.
     *
     * @return The current value of {@code sizes}.
     */
    public List<List<Long>> getSizes() {
        return sizes;
    }

    /**
     * List of current WAL usage.
     *
     * @param sizes  The new value for {@code sizes}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowWalResponse setSizes(List<List<Long>> sizes) {
        this.sizes = (sizes == null) ? new ArrayList<List<Long>>() : sizes;
        return this;
    }

    /**
     * List of WAL capacities.
     *
     * @return The current value of {@code capacities}.
     */
    public List<Long> getCapacities() {
        return capacities;
    }

    /**
     * List of WAL capacities.
     *
     * @param capacities  The new value for {@code capacities}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowWalResponse setCapacities(List<Long> capacities) {
        this.capacities = (capacities == null) ? new ArrayList<Long>() : capacities;
        return this;
    }

    /**
     * List of number of uncommitted entries.
     *
     * @return The current value of {@code uncommitted}.
     */
    public List<List<Long>> getUncommitted() {
        return uncommitted;
    }

    /**
     * List of number of uncommitted entries.
     *
     * @param uncommitted  The new value for {@code uncommitted}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowWalResponse setUncommitted(List<List<Long>> uncommitted) {
        this.uncommitted = (uncommitted == null) ? new ArrayList<List<Long>>() : uncommitted;
        return this;
    }

    /**
     * List of table WAL settings.
     *
     * @return The current value of {@code settings}.
     */
    public List<Map<String, String>> getSettings() {
        return settings;
    }

    /**
     * List of table WAL settings.
     *
     * @param settings  The new value for {@code settings}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowWalResponse setSettings(List<Map<String, String>> settings) {
        this.settings = (settings == null) ? new ArrayList<Map<String, String>>() : settings;
        return this;
    }

    /**
     * Additional information.
     *
     * @return The current value of {@code info}.
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * Additional information.
     *
     * @param info  The new value for {@code info}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public ShowWalResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.tableNames;

            case 1:
                return this.sizes;

            case 2:
                return this.capacities;

            case 3:
                return this.uncommitted;

            case 4:
                return this.settings;

            case 5:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.tableNames = (List<String>)value;
                break;

            case 1:
                this.sizes = (List<List<Long>>)value;
                break;

            case 2:
                this.capacities = (List<Long>)value;
                break;

            case 3:
                this.uncommitted = (List<List<Long>>)value;
                break;

            case 4:
                this.settings = (List<Map<String, String>>)value;
                break;

            case 5:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        ShowWalResponse that = (ShowWalResponse)obj;

        return ( this.tableNames.equals( that.tableNames )
                 && this.sizes.equals( that.sizes )
                 && this.capacities.equals( that.capacities )
                 && this.uncommitted.equals( that.uncommitted )
                 && this.settings.equals( that.settings )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "tableNames" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.tableNames ) );
        builder.append( ", " );
        builder.append( gd.toString( "sizes" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.sizes ) );
        builder.append( ", " );
        builder.append( gd.toString( "capacities" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.capacities ) );
        builder.append( ", " );
        builder.append( gd.toString( "uncommitted" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.uncommitted ) );
        builder.append( ", " );
        builder.append( gd.toString( "settings" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.settings ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableNames.hashCode();
        hashCode = (31 * hashCode) + this.sizes.hashCode();
        hashCode = (31 * hashCode) + this.capacities.hashCode();
        hashCode = (31 * hashCode) + this.uncommitted.hashCode();
        hashCode = (31 * hashCode) + this.settings.hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }
}

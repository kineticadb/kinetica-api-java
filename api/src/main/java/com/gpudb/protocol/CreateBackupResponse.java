/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of results returned by {@link
 * com.gpudb.GPUdb#createBackup(CreateBackupRequest) GPUdb.createBackup}.
 */
public class CreateBackupResponse implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("CreateBackupResponse")
            .namespace("com.gpudb")
            .fields()
                .name("backupName").type().stringType().noDefault()
                .name("backupId").type().longType().noDefault()
                .name("copiedBytes").type().longType().noDefault()
                .name("copiedFiles").type().longType().noDefault()
                .name("copiedRecords").type().longType().noDefault()
                .name("totalNumberOfRecords").type().longType().noDefault()
                .name("info").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    private String backupName;
    private long backupId;
    private long copiedBytes;
    private long copiedFiles;
    private long copiedRecords;
    private long totalNumberOfRecords;
    private Map<String, String> info;

    /**
     * Constructs a CreateBackupResponse object with default parameters.
     */
    public CreateBackupResponse() {
    }

    /**
     * Value of {@link com.gpudb.protocol.CreateBackupRequest#getBackupName()
     * backupName}.
     *
     * @return The current value of {@code backupName}.
     */
    public String getBackupName() {
        return backupName;
    }

    /**
     * Value of {@link com.gpudb.protocol.CreateBackupRequest#getBackupName()
     * backupName}.
     *
     * @param backupName  The new value for {@code backupName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateBackupResponse setBackupName(String backupName) {
        this.backupName = (backupName == null) ? "" : backupName;
        return this;
    }

    /**
     * Backup ID.
     *
     * @return The current value of {@code backupId}.
     */
    public long getBackupId() {
        return backupId;
    }

    /**
     * Backup ID.
     *
     * @param backupId  The new value for {@code backupId}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateBackupResponse setBackupId(long backupId) {
        this.backupId = backupId;
        return this;
    }

    /**
     * Total size of all files copied for this snapshot
     *
     * @return The current value of {@code copiedBytes}.
     */
    public long getCopiedBytes() {
        return copiedBytes;
    }

    /**
     * Total size of all files copied for this snapshot
     *
     * @param copiedBytes  The new value for {@code copiedBytes}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateBackupResponse setCopiedBytes(long copiedBytes) {
        this.copiedBytes = copiedBytes;
        return this;
    }

    /**
     * Total number of files copied for this snapshot
     *
     * @return The current value of {@code copiedFiles}.
     */
    public long getCopiedFiles() {
        return copiedFiles;
    }

    /**
     * Total number of files copied for this snapshot
     *
     * @param copiedFiles  The new value for {@code copiedFiles}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateBackupResponse setCopiedFiles(long copiedFiles) {
        this.copiedFiles = copiedFiles;
        return this;
    }

    /**
     * Total number of records in all files copied for this snapshot
     *
     * @return The current value of {@code copiedRecords}.
     */
    public long getCopiedRecords() {
        return copiedRecords;
    }

    /**
     * Total number of records in all files copied for this snapshot
     *
     * @param copiedRecords  The new value for {@code copiedRecords}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateBackupResponse setCopiedRecords(long copiedRecords) {
        this.copiedRecords = copiedRecords;
        return this;
    }

    /**
     * Total number of records that can be restored from this snapshot
     *
     * @return The current value of {@code totalNumberOfRecords}.
     */
    public long getTotalNumberOfRecords() {
        return totalNumberOfRecords;
    }

    /**
     * Total number of records that can be restored from this snapshot
     *
     * @param totalNumberOfRecords  The new value for {@code
     *                              totalNumberOfRecords}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateBackupResponse setTotalNumberOfRecords(long totalNumberOfRecords) {
        this.totalNumberOfRecords = totalNumberOfRecords;
        return this;
    }

    /**
     * Additional information.
     *
     * @return The current value of {@code info}.
     */
    public Map<String, String> getInfo() {
        return info;
    }

    /**
     * Additional information.
     *
     * @param info  The new value for {@code info}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public CreateBackupResponse setInfo(Map<String, String> info) {
        this.info = (info == null) ? new LinkedHashMap<String, String>() : info;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.backupName;

            case 1:
                return this.backupId;

            case 2:
                return this.copiedBytes;

            case 3:
                return this.copiedFiles;

            case 4:
                return this.copiedRecords;

            case 5:
                return this.totalNumberOfRecords;

            case 6:
                return this.info;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.backupName = (String)value;
                break;

            case 1:
                this.backupId = (Long)value;
                break;

            case 2:
                this.copiedBytes = (Long)value;
                break;

            case 3:
                this.copiedFiles = (Long)value;
                break;

            case 4:
                this.copiedRecords = (Long)value;
                break;

            case 5:
                this.totalNumberOfRecords = (Long)value;
                break;

            case 6:
                this.info = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        CreateBackupResponse that = (CreateBackupResponse)obj;

        return ( this.backupName.equals( that.backupName )
                 && ( this.backupId == that.backupId )
                 && ( this.copiedBytes == that.copiedBytes )
                 && ( this.copiedFiles == that.copiedFiles )
                 && ( this.copiedRecords == that.copiedRecords )
                 && ( this.totalNumberOfRecords == that.totalNumberOfRecords )
                 && this.info.equals( that.info ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "backupName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.backupName ) );
        builder.append( ", " );
        builder.append( gd.toString( "backupId" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.backupId ) );
        builder.append( ", " );
        builder.append( gd.toString( "copiedBytes" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.copiedBytes ) );
        builder.append( ", " );
        builder.append( gd.toString( "copiedFiles" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.copiedFiles ) );
        builder.append( ", " );
        builder.append( gd.toString( "copiedRecords" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.copiedRecords ) );
        builder.append( ", " );
        builder.append( gd.toString( "totalNumberOfRecords" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.totalNumberOfRecords ) );
        builder.append( ", " );
        builder.append( gd.toString( "info" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.info ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.backupName.hashCode();
        hashCode = (31 * hashCode) + ((Long)this.backupId).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.copiedBytes).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.copiedFiles).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.copiedRecords).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.totalNumberOfRecords).hashCode();
        hashCode = (31 * hashCode) + this.info.hashCode();
        return hashCode;
    }
}

/*
 *  This file was autogenerated by the Kinetica schema processor.
 *
 *  DO NOT EDIT DIRECTLY.
 */
package com.gpudb.protocol;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.avro.Schema;
import org.apache.avro.SchemaBuilder;
import org.apache.avro.generic.GenericData;
import org.apache.avro.generic.IndexedRecord;

/**
 * A set of parameters for {@link com.gpudb.GPUdb#getRecords(GetRecordsRequest)
 * GPUdb.getRecords}.
 * <p>
 * Retrieves records from a given table, optionally filtered by an expression
 * and/or sorted by a column. This operation can be performed on tables and
 * views. Records can be returned encoded as binary, json, or geojson.
 * <p>
 * This operation supports paging through the data via the {@link #getOffset()
 * offset} and {@link #getLimit() limit} parameters.  Note that when paging
 * through a table, if the table (or the underlying table in case of a view) is
 * updated (records are inserted, deleted or modified) the records retrieved
 * may differ between calls based on the updates applied.
 */
public class GetRecordsRequest implements IndexedRecord {
    private static final Schema schema$ = SchemaBuilder
            .record("GetRecordsRequest")
            .namespace("com.gpudb")
            .fields()
                .name("tableName").type().stringType().noDefault()
                .name("offset").type().longType().noDefault()
                .name("limit").type().longType().noDefault()
                .name("encoding").type().stringType().noDefault()
                .name("options").type().map().values().stringType().noDefault()
            .endRecord();

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema for the class.
     */
    public static Schema getClassSchema() {
        return schema$;
    }

    /**
     * A set of string constants for the {@link GetRecordsRequest} parameter
     * {@link #getEncoding() encoding}.
     * <p>
     * Specifies the encoding for returned records; one of {@link
     * Encoding#BINARY BINARY}, {@link Encoding#JSON JSON}, or {@link
     * Encoding#GEOJSON GEOJSON}.
     */
    public static final class Encoding {
        public static final String BINARY = "binary";
        public static final String JSON = "json";
        public static final String GEOJSON = "geojson";
        public static final String ARROW = "arrow";

        private Encoding() {  }
    }

    /**
     * A set of string constants for the {@link GetRecordsRequest} parameter
     * {@link #getOptions() options}.
     */
    public static final class Options {
        /**
         * Optional filter expression to apply to the table.
         */
        public static final String EXPRESSION = "expression";

        /**
         * Indicates if indexes should be used to perform the lookup for a
         * given expression if possible. Only applicable if there is no
         * sorting, the expression contains only equivalence comparisons based
         * on existing tables indexes and the range of requested values is from
         * [0 to END_OF_SET].
         * Supported values:
         * <ul>
         *     <li>{@link Options#TRUE TRUE}
         *     <li>{@link Options#FALSE FALSE}
         * </ul>
         * The default value is {@link Options#TRUE TRUE}.
         */
        public static final String FAST_INDEX_LOOKUP = "fast_index_lookup";

        public static final String TRUE = "true";
        public static final String FALSE = "false";

        /**
         * Optional column that the data should be sorted by. Empty by default
         * (i.e.&nbsp;no sorting is applied).
         */
        public static final String SORT_BY = "sort_by";

        /**
         * String indicating how the returned values should be sorted -
         * ascending or descending. If sort_order is provided, sort_by has to
         * be provided.
         * Supported values:
         * <ul>
         *     <li>{@link Options#ASCENDING ASCENDING}
         *     <li>{@link Options#DESCENDING DESCENDING}
         * </ul>
         * The default value is {@link Options#ASCENDING ASCENDING}.
         */
        public static final String SORT_ORDER = "sort_order";

        public static final String ASCENDING = "ascending";
        public static final String DESCENDING = "descending";

        private Options() {  }
    }

    private String tableName;
    private long offset;
    private long limit;
    private String encoding;
    private Map<String, String> options;

    /**
     * Constructs a GetRecordsRequest object with default parameters.
     */
    public GetRecordsRequest() {
        tableName = "";
        encoding = Encoding.BINARY;
        options = new LinkedHashMap<>();
    }

    /**
     * Constructs a GetRecordsRequest object with the specified parameters.
     *
     * @param tableName  Name of the table or view from which the records will
     *                   be fetched, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results). The default value is 0. The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or END_OF_SET (-9999) to indicate
     *               that the maximum number of results allowed by the server
     *               should be returned.  The number of records returned will
     *               never exceed the server's own limit, defined by the <a
     *               href="../../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration. Use {@link
     *               com.gpudb.protocol.GetRecordsResponse#getHasMoreRecords()
     *               hasMoreRecords} to see if more records exist in the result
     *               to be fetched, and {@code offset} & {@code limit} to
     *               request subsequent pages of results. The default value is
     *               -9999.
     * @param options  <ul>
     *                     <li>{@link Options#EXPRESSION EXPRESSION}: Optional
     *                         filter expression to apply to the table.
     *                     <li>{@link Options#FAST_INDEX_LOOKUP
     *                         FAST_INDEX_LOOKUP}: Indicates if indexes should
     *                         be used to perform the lookup for a given
     *                         expression if possible. Only applicable if there
     *                         is no sorting, the expression contains only
     *                         equivalence comparisons based on existing tables
     *                         indexes and the range of requested values is
     *                         from [0 to END_OF_SET].
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#TRUE TRUE}.
     *                     <li>{@link Options#SORT_BY SORT_BY}: Optional column
     *                         that the data should be sorted by. Empty by
     *                         default (i.e. no sorting is applied).
     *                     <li>{@link Options#SORT_ORDER SORT_ORDER}: String
     *                         indicating how the returned values should be
     *                         sorted - ascending or descending. If sort_order
     *                         is provided, sort_by has to be provided.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#ASCENDING ASCENDING}
     *                             <li>{@link Options#DESCENDING DESCENDING}
     *                         </ul>
     *                         The default value is {@link Options#ASCENDING
     *                         ASCENDING}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     */
    public GetRecordsRequest(String tableName, long offset, long limit, Map<String, String> options) {
        this.tableName = (tableName == null) ? "" : tableName;
        this.offset = offset;
        this.limit = limit;
        this.encoding = Encoding.BINARY;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * Constructs a GetRecordsRequest object with the specified parameters.
     *
     * @param tableName  Name of the table or view from which the records will
     *                   be fetched, in [schema_name.]table_name format, using
     *                   standard <a
     *                   href="../../../../../../concepts/tables/#table-name-resolution"
     *                   target="_top">name resolution rules</a>.
     * @param offset  A positive integer indicating the number of initial
     *                results to skip (this can be useful for paging through
     *                the results). The default value is 0. The minimum allowed
     *                value is 0. The maximum allowed value is MAX_INT.
     * @param limit  A positive integer indicating the maximum number of
     *               results to be returned, or END_OF_SET (-9999) to indicate
     *               that the maximum number of results allowed by the server
     *               should be returned.  The number of records returned will
     *               never exceed the server's own limit, defined by the <a
     *               href="../../../../../../config/#config-main-general"
     *               target="_top">max_get_records_size</a> parameter in the
     *               server configuration. Use {@link
     *               com.gpudb.protocol.GetRecordsResponse#getHasMoreRecords()
     *               hasMoreRecords} to see if more records exist in the result
     *               to be fetched, and {@code offset} & {@code limit} to
     *               request subsequent pages of results. The default value is
     *               -9999.
     * @param encoding  Specifies the encoding for returned records; one of
     *                  {@link Encoding#BINARY BINARY}, {@link Encoding#JSON
     *                  JSON}, or {@link Encoding#GEOJSON GEOJSON}.
     *                  Supported values:
     *                  <ul>
     *                      <li>{@link Encoding#BINARY BINARY}
     *                      <li>{@link Encoding#JSON JSON}
     *                      <li>{@link Encoding#GEOJSON GEOJSON}
     *                      <li>{@link Encoding#ARROW ARROW}
     *                  </ul>
     *                  The default value is {@link Encoding#BINARY BINARY}.
     * @param options  <ul>
     *                     <li>{@link Options#EXPRESSION EXPRESSION}: Optional
     *                         filter expression to apply to the table.
     *                     <li>{@link Options#FAST_INDEX_LOOKUP
     *                         FAST_INDEX_LOOKUP}: Indicates if indexes should
     *                         be used to perform the lookup for a given
     *                         expression if possible. Only applicable if there
     *                         is no sorting, the expression contains only
     *                         equivalence comparisons based on existing tables
     *                         indexes and the range of requested values is
     *                         from [0 to END_OF_SET].
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#TRUE TRUE}
     *                             <li>{@link Options#FALSE FALSE}
     *                         </ul>
     *                         The default value is {@link Options#TRUE TRUE}.
     *                     <li>{@link Options#SORT_BY SORT_BY}: Optional column
     *                         that the data should be sorted by. Empty by
     *                         default (i.e. no sorting is applied).
     *                     <li>{@link Options#SORT_ORDER SORT_ORDER}: String
     *                         indicating how the returned values should be
     *                         sorted - ascending or descending. If sort_order
     *                         is provided, sort_by has to be provided.
     *                         Supported values:
     *                         <ul>
     *                             <li>{@link Options#ASCENDING ASCENDING}
     *                             <li>{@link Options#DESCENDING DESCENDING}
     *                         </ul>
     *                         The default value is {@link Options#ASCENDING
     *                         ASCENDING}.
     *                 </ul>
     *                 The default value is an empty {@link Map}.
     */
    public GetRecordsRequest(String tableName, long offset, long limit, String encoding, Map<String, String> options) {
        this.tableName = (tableName == null) ? "" : tableName;
        this.offset = offset;
        this.limit = limit;
        this.encoding = (encoding == null) ? Encoding.BINARY : encoding;
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
    }

    /**
     * Name of the table or view from which the records will be fetched, in
     * [schema_name.]table_name format, using standard <a
     * href="../../../../../../concepts/tables/#table-name-resolution"
     * target="_top">name resolution rules</a>.
     *
     * @return The current value of {@code tableName}.
     */
    public String getTableName() {
        return tableName;
    }

    /**
     * Name of the table or view from which the records will be fetched, in
     * [schema_name.]table_name format, using standard <a
     * href="../../../../../../concepts/tables/#table-name-resolution"
     * target="_top">name resolution rules</a>.
     *
     * @param tableName  The new value for {@code tableName}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsRequest setTableName(String tableName) {
        this.tableName = (tableName == null) ? "" : tableName;
        return this;
    }

    /**
     * A positive integer indicating the number of initial results to skip
     * (this can be useful for paging through the results). The default value
     * is 0. The minimum allowed value is 0. The maximum allowed value is
     * MAX_INT.
     *
     * @return The current value of {@code offset}.
     */
    public long getOffset() {
        return offset;
    }

    /**
     * A positive integer indicating the number of initial results to skip
     * (this can be useful for paging through the results). The default value
     * is 0. The minimum allowed value is 0. The maximum allowed value is
     * MAX_INT.
     *
     * @param offset  The new value for {@code offset}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsRequest setOffset(long offset) {
        this.offset = offset;
        return this;
    }

    /**
     * A positive integer indicating the maximum number of results to be
     * returned, or END_OF_SET (-9999) to indicate that the maximum number of
     * results allowed by the server should be returned.  The number of records
     * returned will never exceed the server's own limit, defined by the <a
     * href="../../../../../../config/#config-main-general"
     * target="_top">max_get_records_size</a> parameter in the server
     * configuration. Use {@link
     * com.gpudb.protocol.GetRecordsResponse#getHasMoreRecords()
     * hasMoreRecords} to see if more records exist in the result to be
     * fetched, and {@link #getOffset() offset} & {@link #getLimit() limit} to
     * request subsequent pages of results. The default value is -9999.
     *
     * @return The current value of {@code limit}.
     */
    public long getLimit() {
        return limit;
    }

    /**
     * A positive integer indicating the maximum number of results to be
     * returned, or END_OF_SET (-9999) to indicate that the maximum number of
     * results allowed by the server should be returned.  The number of records
     * returned will never exceed the server's own limit, defined by the <a
     * href="../../../../../../config/#config-main-general"
     * target="_top">max_get_records_size</a> parameter in the server
     * configuration. Use {@link
     * com.gpudb.protocol.GetRecordsResponse#getHasMoreRecords()
     * hasMoreRecords} to see if more records exist in the result to be
     * fetched, and {@link #getOffset() offset} & {@link #getLimit() limit} to
     * request subsequent pages of results. The default value is -9999.
     *
     * @param limit  The new value for {@code limit}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsRequest setLimit(long limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Specifies the encoding for returned records; one of {@link
     * Encoding#BINARY BINARY}, {@link Encoding#JSON JSON}, or {@link
     * Encoding#GEOJSON GEOJSON}.
     * Supported values:
     * <ul>
     *     <li>{@link Encoding#BINARY BINARY}
     *     <li>{@link Encoding#JSON JSON}
     *     <li>{@link Encoding#GEOJSON GEOJSON}
     *     <li>{@link Encoding#ARROW ARROW}
     * </ul>
     * The default value is {@link Encoding#BINARY BINARY}.
     *
     * @return The current value of {@code encoding}.
     */
    public String getEncoding() {
        return encoding;
    }

    /**
     * Specifies the encoding for returned records; one of {@link
     * Encoding#BINARY BINARY}, {@link Encoding#JSON JSON}, or {@link
     * Encoding#GEOJSON GEOJSON}.
     * Supported values:
     * <ul>
     *     <li>{@link Encoding#BINARY BINARY}
     *     <li>{@link Encoding#JSON JSON}
     *     <li>{@link Encoding#GEOJSON GEOJSON}
     *     <li>{@link Encoding#ARROW ARROW}
     * </ul>
     * The default value is {@link Encoding#BINARY BINARY}.
     *
     * @param encoding  The new value for {@code encoding}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsRequest setEncoding(String encoding) {
        this.encoding = (encoding == null) ? Encoding.BINARY : encoding;
        return this;
    }

    /**
     * <ul>
     *     <li>{@link Options#EXPRESSION EXPRESSION}: Optional filter
     *         expression to apply to the table.
     *     <li>{@link Options#FAST_INDEX_LOOKUP FAST_INDEX_LOOKUP}: Indicates
     *         if indexes should be used to perform the lookup for a given
     *         expression if possible. Only applicable if there is no sorting,
     *         the expression contains only equivalence comparisons based on
     *         existing tables indexes and the range of requested values is
     *         from [0 to END_OF_SET].
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#TRUE TRUE}.
     *     <li>{@link Options#SORT_BY SORT_BY}: Optional column that the data
     *         should be sorted by. Empty by default (i.e. no sorting is
     *         applied).
     *     <li>{@link Options#SORT_ORDER SORT_ORDER}: String indicating how the
     *         returned values should be sorted - ascending or descending. If
     *         sort_order is provided, sort_by has to be provided.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#ASCENDING ASCENDING}
     *             <li>{@link Options#DESCENDING DESCENDING}
     *         </ul>
     *         The default value is {@link Options#ASCENDING ASCENDING}.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @return The current value of {@code options}.
     */
    public Map<String, String> getOptions() {
        return options;
    }

    /**
     * <ul>
     *     <li>{@link Options#EXPRESSION EXPRESSION}: Optional filter
     *         expression to apply to the table.
     *     <li>{@link Options#FAST_INDEX_LOOKUP FAST_INDEX_LOOKUP}: Indicates
     *         if indexes should be used to perform the lookup for a given
     *         expression if possible. Only applicable if there is no sorting,
     *         the expression contains only equivalence comparisons based on
     *         existing tables indexes and the range of requested values is
     *         from [0 to END_OF_SET].
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#TRUE TRUE}
     *             <li>{@link Options#FALSE FALSE}
     *         </ul>
     *         The default value is {@link Options#TRUE TRUE}.
     *     <li>{@link Options#SORT_BY SORT_BY}: Optional column that the data
     *         should be sorted by. Empty by default (i.e. no sorting is
     *         applied).
     *     <li>{@link Options#SORT_ORDER SORT_ORDER}: String indicating how the
     *         returned values should be sorted - ascending or descending. If
     *         sort_order is provided, sort_by has to be provided.
     *         Supported values:
     *         <ul>
     *             <li>{@link Options#ASCENDING ASCENDING}
     *             <li>{@link Options#DESCENDING DESCENDING}
     *         </ul>
     *         The default value is {@link Options#ASCENDING ASCENDING}.
     * </ul>
     * The default value is an empty {@link Map}.
     *
     * @param options  The new value for {@code options}.
     *
     * @return {@code this} to mimic the builder pattern.
     */
    public GetRecordsRequest setOptions(Map<String, String> options) {
        this.options = (options == null) ? new LinkedHashMap<String, String>() : options;
        return this;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @return The schema object describing this class.
     */
    @Override
    public Schema getSchema() {
        return schema$;
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to get
     *
     * @return value of the field with the given index.
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    public Object get(int index) {
        switch (index) {
            case 0:
                return this.tableName;

            case 1:
                return this.offset;

            case 2:
                return this.limit;

            case 3:
                return this.encoding;

            case 4:
                return this.options;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    /**
     * This method supports the Avro framework and is not intended to be called
     * directly by the user.
     *
     * @param index  the position of the field to set
     * @param value  the value to set
     *
     * @throws IndexOutOfBoundsException
     */
    @Override
    @SuppressWarnings("unchecked")
    public void put(int index, Object value) {
        switch (index) {
            case 0:
                this.tableName = (String)value;
                break;

            case 1:
                this.offset = (Long)value;
                break;

            case 2:
                this.limit = (Long)value;
                break;

            case 3:
                this.encoding = (String)value;
                break;

            case 4:
                this.options = (Map<String, String>)value;
                break;

            default:
                throw new IndexOutOfBoundsException("Invalid index specified.");
        }
    }

    @Override
    public boolean equals(Object obj) {
        if( obj == this ) {
            return true;
        }

        if( (obj == null) || (obj.getClass() != this.getClass()) ) {
            return false;
        }

        GetRecordsRequest that = (GetRecordsRequest)obj;

        return ( this.tableName.equals( that.tableName )
                 && ( this.offset == that.offset )
                 && ( this.limit == that.limit )
                 && this.encoding.equals( that.encoding )
                 && this.options.equals( that.options ) );
    }

    @Override
    public String toString() {
        GenericData gd = GenericData.get();
        StringBuilder builder = new StringBuilder();
        builder.append( "{" );
        builder.append( gd.toString( "tableName" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.tableName ) );
        builder.append( ", " );
        builder.append( gd.toString( "offset" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.offset ) );
        builder.append( ", " );
        builder.append( gd.toString( "limit" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.limit ) );
        builder.append( ", " );
        builder.append( gd.toString( "encoding" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.encoding ) );
        builder.append( ", " );
        builder.append( gd.toString( "options" ) );
        builder.append( ": " );
        builder.append( gd.toString( this.options ) );
        builder.append( "}" );

        return builder.toString();
    }

    @Override
    public int hashCode() {
        int hashCode = 1;
        hashCode = (31 * hashCode) + this.tableName.hashCode();
        hashCode = (31 * hashCode) + ((Long)this.offset).hashCode();
        hashCode = (31 * hashCode) + ((Long)this.limit).hashCode();
        hashCode = (31 * hashCode) + this.encoding.hashCode();
        hashCode = (31 * hashCode) + this.options.hashCode();
        return hashCode;
    }
}
